Conversione del tipo
********************

.[perex]
Nette Database converte automaticamente i valori recuperati dal database nei tipi PHP appropriati.


Data e ora .[#toc-date-and-time]
--------------------------------

I valori di data e ora sono convertiti in oggetti `Nette\Utils\DateTime`. Se si preferisce che i valori di data e ora siano convertiti in oggetti `Nette\Database\DateTime` immutabili, attivare l'opzione `newDateTime` nella [configurazione | configuration].

```php
$row = $database->fetch('SELECT created_at FROM articles');
echo $row->created_at instanceof DateTime; // true
echo $row->created_at->format('j. n. Y');
```

Per MySQL, il tipo di dati `TIME` viene convertito in oggetti `DateInterval`.


Valori booleani .[#toc-boolean-values]
--------------------------------------

I valori booleani vengono normalizzati automaticamente in `true` o `false`. In MySQL, il tipo `TINYINT(1)` viene convertito quando l'opzione `convertBoolean` è abilitata nella [configurazione | configuration].

```php
$row = $database->fetch('SELECT is_published FROM articles');
echo gettype($row->is_published); // 'booleano'
```


Valori numerici .[#toc-numeric-values]
--------------------------------------

I valori numerici vengono lanciati in `int` o `float`, a seconda del tipo di colonna del database:

```php
$row = $database->fetch('SELECT id, price FROM products');
echo gettype($row->id);    // intero
echo gettype($row->price); // galleggiante
```


Normalizzazione personalizzata .[#toc-custom-normalization]
-----------------------------------------------------------

È possibile definire una funzione personalizzata per trasformare le righe del database utilizzando il metodo `setRowNormalizer(?callable $normalizer)`. Ciò è utile, ad esempio, per la conversione automatica dei tipi di dati.

```php
$database->setRowNormalizer(function(array $row, ResultSet $resultSet): array {
	// la conversione dei tipi di dati avviene qui
	return $row;
});
```
