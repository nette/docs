Dokümantasyon sözdizimi
***********************

Dokümantasyon, bazı uzantılarla birlikte Markdown & [Texy sözdizimini |https://texy.nette.org/syntax] kullanır.


Bağlantılar
===========

Dahili bağlantılar için köşeli parantez `[bağlantı]` gösterimi kullanılır. Ya dikey çizgi ile `[bağlantı metni |bağlantı hedefi]` şeklinde ya da hedef metinle aynıysa (küçük harflere ve tirelere dönüştürüldükten sonra) kısaltılmış olarak `[bağlantı metni | Orijinal bağlantı metni]` şeklinde:

- `[Sayfa adı | Page name]` -> `<a href="/tr/page-name">Sayfa adı</a>`
- `[bağlantı metni |Page name]` -> `<a href="/tr/page-name">bağlantı metni</a>`

Farklı bir dil sürümüne veya farklı bir bölüme bağlantı verebiliriz. Bölüm, bir Nette kütüphanesi (örneğin `forms`, `latte`, vb.) veya `best-practices`, `quickstart` gibi özel bölümler anlamına gelir:

- `[cs:Sayfa adı | cs:Page name]` -> `<a href="/cs/page-name">Sayfa adı</a>` (aynı bölüm, farklı dil)
- `[tracy:Sayfa adı | tracy:Page name]` -> `<a href="//tracy.nette.org/tr/page-name">Sayfa adı</a>` (farklı bölüm, aynı dil)
- `[tracy:cs:Sayfa adı | tracy:cs:Page name]` -> `<a href="//tracy.nette.org/cs/page-name">Sayfa adı</a>` (farklı bölüm ve dil)

`#` kullanarak sayfadaki belirli bir başlığa da hedef belirlemek mümkündür.

- `[#Heading]` -> `<a href="#toc-heading">Başlık</a>` (geçerli sayfadaki başlık)
- `[Page name#Heading]` -> `<a href="/tr/page-name#toc-heading">Sayfa adı</a>`

Bölümün giriş sayfasına bağlantı: (`@home`, bölümün ana sayfası için özel bir terimdir)

- `[bağlantı metni |@home]` -> `<a href="/tr/">bağlantı metni</a>`
- `[bağlantı metni |tracy:]` -> `<a href="//tracy.nette.org/tr/">bağlantı metni</a>`


API dokümantasyonuna bağlantılar
--------------------------------

Her zaman yalnızca bu gösterimi kullanarak belirtin:

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

Tam nitelikli adları yalnızca ilk bahsedişte kullanın. Sonraki bağlantılar için basitleştirilmiş adı kullanın:

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


PHP dokümantasyonuna bağlantılar
--------------------------------

- `[php:substr]` -> [php:substr]


Kaynak Kodu
===========

Kod bloğu <code>&#96;&#96;&#96;lang</code> ile başlar ve <code>&#96;&#96;&#96;</code> ile biter. Desteklenen diller `php`, `latte`, `neon`, `html`, `css`, `js` ve `sql`'dir. Girintileme için her zaman sekmeleri kullanın.

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

Ayrıca dosya adını <code>&#96;&#96;&#96;php .{file: ArrayTest.php}</code> olarak belirtebilirsiniz ve kod bloğu şu şekilde oluşturulur:

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


Başlıklar
=========

En üst başlığın (yani sayfa adının) altını yıldızlarla çizin. Bölümleri ayırmak için eşittir işaretleri kullanın. Başlıkların altını eşittir işaretleri ve ardından tirelerle çizin:

```
MVC Uygulamaları & presenterlar
*******************************
...


Bağlantı oluşturma
==================
...


Şablonlardaki bağlantılar
-------------------------
...
```


Çerçeveler ve stiller
=====================

Perex'i `.[perex]` sınıfıyla işaretleriz .[perex]

Notu `.[note]` sınıfıyla işaretleriz .[note]

İpucunu `.[tip]` sınıfıyla işaretleriz .[tip]

Uyarıyı `.[caution]` sınıfıyla işaretleriz .[caution]

Daha güçlü bir uyarıyı `.[warning]` sınıfıyla işaretleriz .[warning]

Sürüm numarası `.{data-version:2.4.10}` .{data-version:2.4.10}

Sınıfları satırdan önce yazın:

```
.[perex]
Bu perex'tir.
```

Lütfen `.[tip]` gibi çerçevelerin gözleri "çektiğini" unutmayın, bu nedenle daha az önemli bilgiler için değil, vurgulamak için kullanılırlar. Bu nedenle, kullanımlarını en aza indirin.


İçindekiler
===========

İçindekiler (sağ menüdeki bağlantılar), boyutu 4.000 baytı aşan tüm sayfalar için otomatik olarak oluşturulur ve bu varsayılan davranış [#Meta etiketleri] `{{toc}}` kullanılarak ayarlanabilir. İçeriği oluşturan metin standart olarak doğrudan başlıkların metninden alınır, ancak `.{toc}` değiştiricisi kullanılarak içerikte farklı bir metin görüntülenebilir, bu özellikle daha uzun başlıklar için kullanışlıdır.

```


Uzun ve akıllı başlık .{toc: İçerikte gösterilen herhangi bir başka metin}
==========================================================================
```


Meta etiketleri
===============

- özel sayfa başlığı ayarlama (`<title>` ve içerik haritası navigasyonunda) `{{title: Başka bir başlık}}`
- yönlendirme `{{redirect: pla:cs}}` - bkz. [#Bağlantılar]
- otomatik içeriği (tek tek başlıklara bağlantılar içeren kutu) zorlama `{{toc}}` veya devre dışı bırakma `{{toc: no}}`

{{priority: -1}}
