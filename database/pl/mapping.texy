Konwersja typu
**************

.[perex]
Nette Database automatycznie konwertuje wartości pobrane z bazy danych na odpowiednie typy PHP.


Data i czas .[#toc-date-and-time]
---------------------------------

Wartości daty i godziny są konwertowane na obiekty `Nette\Utils\DateTime`. Jeśli wolisz, aby wartości daty i godziny były konwertowane na niezmienne obiekty `Nette\Database\DateTime`, włącz opcję `newDateTime` w [konfiguracji | configuration].

```php
$row = $database->fetch('SELECT created_at FROM articles');
echo $row->created_at instanceof DateTime; // true
echo $row->created_at->format('j. n. Y');
```

W przypadku MySQL, typ danych `TIME` jest konwertowany na obiekty `DateInterval`.


Wartości logiczne .[#toc-boolean-values]
----------------------------------------

Wartości logiczne są automatycznie normalizowane do `true` lub `false`. W MySQL typ `TINYINT(1)` jest konwertowany, gdy opcja `convertBoolean` jest włączona w [konfiguracji | configuration].

```php
$row = $database->fetch('SELECT is_published FROM articles');
echo gettype($row->is_published); // 'boolean'
```


Wartości numeryczne .[#toc-numeric-values]
------------------------------------------

Wartości numeryczne są rzutowane na `int` lub `float`, w zależności od typu kolumny w bazie danych:

```php
$row = $database->fetch('SELECT id, price FROM products');
echo gettype($row->id);    // liczba całkowita
echo gettype($row->price); // pływak
```


Niestandardowa normalizacja .[#toc-custom-normalization]
--------------------------------------------------------

Można zdefiniować niestandardową funkcję do przekształcania wierszy bazy danych przy użyciu metody `setRowNormalizer(?callable $normalizer)`. Jest to przydatne na przykład do automatycznej konwersji typu danych.

```php
$database->setRowNormalizer(function(array $row, ResultSet $resultSet): array {
	// konwersja typu danych odbywa się tutaj
	return $row;
});
```
