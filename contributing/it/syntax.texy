Sintassi della documentazione
*****************************

La documentazione utilizza Markdown e la [sintassi Texy |https://texy.nette.org/syntax] con alcune estensioni.


Link
====

Per i link interni si utilizza la notazione tra parentesi quadre `[link]`. E questo o nella forma con la barra verticale `[testo del link |destinazione del link]`, o abbreviata `[testo del link]`, se la destinazione è identica al testo (dopo la trasformazione in minuscolo e trattini):

- `[Page name |Page name]` -> `<a href="/it/page-name">Page name</a>`
- `[testo del link |Page name]` -> `<a href="/it/page-name">testo del link</a>`

Possiamo creare link a un'altra versione linguistica o a un'altra sezione. Per sezione si intende una libreria Nette (ad es. `forms`, `latte`, ecc.) o sezioni speciali come `best-practices`, `quickstart` ecc.:

- `[cs:Page name |cs:Page name]` -> `<a href="/cs/page-name">Page name</a>` (stessa sezione, lingua diversa)
- `[tracy:Page name |tracy:Page name]` -> `<a href="//tracy.nette.org/it/page-name">Page name</a>` (sezione diversa, stessa lingua)
- `[tracy:cs:Page name |tracy:cs:Page name]` -> `<a href="//tracy.nette.org/cs/page-name">Page name</a>` (sezione e lingua diverse)

Tramite `#` è anche possibile puntare a un titolo specifico sulla pagina.

- `[Titolo |#Heading]` -> `<a href="#toc-heading">Titolo</a>` (titolo sulla pagina corrente)
- `[Page name#Heading |Page name#Heading]` -> `<a href="/it/page-name#toc-heading">Page name</a>`

Link alla pagina iniziale della sezione: (`@home` è un'espressione speciale per la home page della sezione)

- `[testo del link |@home]` -> `<a href="/it/">testo del link</a>`
- `[testo del link |tracy:]` -> `<a href="//tracy.nette.org/it/">testo del link</a>`


Link alla documentazione API
----------------------------

Indicare sempre solo utilizzando questa notazione:

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

Utilizzate i nomi completamente qualificati solo alla prima menzione. Per i link successivi, utilizzate il nome semplificato:

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


Link alla documentazione PHP
----------------------------

- `[php:substr]` -> [php:substr]


Codice sorgente
===============

Un blocco di codice inizia con <code>&#96;&#96;&#96;lang</code> e termina con <code>&#96;&#96;&#96;</code>. Le lingue supportate sono `php`, `latte`, `neon`, `html`, `css`, `js` e `sql`. Per l'indentazione utilizzate sempre le tabulazioni.

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

Potete anche specificare il nome del file come <code>&#96;&#96;&#96;php .{file: ArrayTest.php}</code> e il blocco di codice verrà renderizzato in questo modo:

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


Titoli
======

Il titolo più alto (cioè il nome della pagina) sottolineatelo con asterischi. Per separare le sezioni utilizzate gli uguali. Sottolineate i titoli con gli uguali e poi con i trattini:

```
Applicazioni MVC e presenter
****************************
...


Creazione di link
=================
...


Link nei template
-----------------
...
```


Cornici e stili
===============

Il perex lo contrassegniamo con la classe `.[perex]` .[perex]

Una nota la contrassegniamo con la classe `.[note]` .[note]

Un suggerimento lo contrassegniamo con la classe `.[tip]` .[tip]

Un avvertimento lo contrassegniamo con la classe `.[caution]` .[caution]

Un avvertimento più forte lo contrassegniamo con la classe `.[warning]` .[warning]

Numero di versione `.{data-version:2.4.10}` .{data-version:2.4.10}

Scrivete le classi prima della riga:

```
.[perex]
Questo è il perex.
```

Si prega di notare che le cornici come `.[tip]` "attirano" gli occhi, quindi vengono utilizzate per enfatizzare, non per informazioni meno importanti. Pertanto, utilizzateli con la massima parsimonia.


Contenuto
=========

Il contenuto (link nel menu a destra) viene generato automaticamente per tutte le pagine la cui dimensione supera i 4.000 byte, tuttavia questo comportamento predefinito può essere modificato tramite il [#meta tag] `{{toc}}`. Il testo che forma il contenuto viene preso standard direttamente dal testo dei titoli, ma tramite il modificatore `.{toc}` è possibile visualizzare nel contenuto un testo diverso, il che è utile soprattutto per i titoli più lunghi.

```


Titolo lungo e intelligente .{toc: Qualsiasi altro testo visualizzato nel contenuto}
====================================================================================
```


Meta tag
========

- impostazione di un nome di pagina personalizzato (in `<title>` e nella navigazione breadcrumb) `{{title: Altro nome}}`
- reindirizzamento `{{redirect: pla:cs}}` - [vedi #link |#Link]
- forzatura `{{toc}}` o disabilitazione `{{toc: no}}` del contenuto automatico (riquadro con link ai singoli titoli)

{{priority: -1}}
