Database & ORM
**************

/--div .[perex]
Nette Framework provides you with a layer for a simpler work with databases. What does it do?

- composes SQL queries with ease
- easily fetches data
- uses efficient queries and does not transmit unnecessary data
\--


Class [api:Nette\Database\Connection] is wrapper around [php:PDO] and represents connection to database. The core functionality is provided by [api:Nette\Database\Context].


/--php
use Nette\Database\Connection;
use Nette\Database\Context;

$connection = new Connection($dsn, $user, $password);
$database   = new Context($connection);
\--

`Nette\Database\Context` allows you easily query your database by calling `query` method:

/--php
$database->query('INSERT INTO users', array( // an array can be a parameter
	'name' => 'Jim',
	'created' => new DateTime, // or a DateTime object
	'avatar' => fopen('image.gif', 'r'), // or a file
), ...); // it is even possible to use multiple inserts

$database->query('UPDATE users SET ? WHERE id=?', $data, $id);
$database->query('SELECT * FROM categories WHERE id=?', 123)->dump();
\--

If you create context by dependency container, you will automatically see Database panel in Tracy debug bar with all your queries with their result row-count and spent time.

{{toc: title}}

{{themeicon: icon-database.png}}
{{care: Jan Škrášek|449}}
