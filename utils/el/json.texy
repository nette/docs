Εργασία με JSON
***************

.[perex]
Η [api:Nette\Utils\Json] είναι μια στατική κλάση με συναρτήσεις για την κωδικοποίηση και αποκωδικοποίηση της μορφής JSON. Αντιμετωπίζει τις ευπάθειες διαφόρων εκδόσεων της PHP και δημιουργεί εξαιρέσεις σε περίπτωση σφαλμάτων.


Εγκατάσταση:

```shell
composer require nette/utils
```

Όλα τα παραδείγματα προϋποθέτουν ότι έχει δημιουργηθεί ένα ψευδώνυμο:

```php
use Nette\Utils\Json;
```


Χρήση
=====


encode(mixed $value, bool $pretty=false, bool $asciiSafe=false, bool $htmlSafe=false, bool $forceObjects=false): string .[method]
---------------------------------------------------------------------------------------------------------------------------------

Μετατρέπει την `$value` σε μορφή JSON.

Όταν το `$pretty` οριστεί, μορφοποιεί το JSON για ευκολότερη ανάγνωση και σαφήνεια:

```php
Json::encode($value); // επιστρέφει JSON
Json::encode($value, pretty: true); // επιστρέφει πιο ευανάγνωστο JSON
```

Όταν το `$asciiSafe` οριστεί, δημιουργεί έξοδο σε ASCII, δηλαδή αντικαθιστά τους χαρακτήρες unicode με ακολουθίες `\uxxxx`:

```php
Json::encode('žluťoučký', asciiSafe: true);
// '"\u017elu\u0165ou\u010dk\u00fd"'
```

Η παράμετρος `$htmlSafe` διασφαλίζει ότι η έξοδος δεν θα περιέχει χαρακτήρες που έχουν ειδική σημασία στην HTML:

```php
Json::encode('one<two & three', htmlSafe: true);
// '"one\u003Ctwo \u0026 three"'
```

Με το `$forceObjects`, ακόμη και οι πίνακες με αριθμητικά κλειδιά θα κωδικοποιούνται ως αντικείμενα JavaScript:

```php
Json::encode(['a', 'b', 'c']);
// '["a","b","c"]'
Json::encode(['a', 'b', 'c'], forceObjects: true);
// '{"0":"a","1":"b","2":"c"}'
```

Σε περίπτωση σφάλματος, δημιουργεί μια εξαίρεση `Nette\Utils\JsonException`.

```php
try {
	$json = Json::encode($value);
} catch (Nette\Utils\JsonException $e) {
	// Χειρισμός εξαίρεσης
}
```


decode(string $json, bool $forceArray=false): mixed .[method]
-------------------------------------------------------------

Αναλύει το JSON σε PHP.

Η ρύθμιση `$forceArray` επιβάλλει την επιστροφή πινάκων αντί για αντικείμενα:

```php
Json::decode('{"variable": true}'); // επιστρέφει ένα αντικείμενο τύπου stdClass
Json::decode('{"variable": true}', forceArrays: true); // επιστρέφει έναν πίνακα
```

Σε περίπτωση σφάλματος, δημιουργεί μια εξαίρεση `Nette\Utils\JsonException`.

```php
try {
	$value = Json::decode($json);
} catch (Nette\Utils\JsonException $e) {
	// Χειρισμός εξαίρεσης
}
```


Πώς να στείλετε JSON από έναν presenter;
========================================

Μπορείτε να χρησιμοποιήσετε τη μέθοδο `$this->sendJson($data)`, την οποία μπορείτε να καλέσετε, για παράδειγμα, στη μέθοδο `action*()`, δείτε [Αποστολή απάντησης|application:presenters#Odeslání odpovědi].
