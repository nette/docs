Ρύθμιση της εφαρμογής
*********************

.[perex]
Επισκόπηση των επιλογών διαμόρφωσης για τις Εφαρμογές Nette.


Application
===========

```neon
application:
	# show the "Nette Application" panel in Tracy BlueScreen?
	debugger: ...           # (bool) default is true

	# will the error-presenter be called in case of an error?
	# only effective in development mode
	catchExceptions: ...    # (bool) default is true

	# name of the error-presenter
	errorPresenter: Error   # (string|array) default is 'Nette:Error'

	# defines aliases for presenters and actions
	aliases: ...

	# defines rules for translating presenter name to class
	mapping: ...

	# invalid links do not generate warnings?
	# only effective in development mode
	silentLinks: ...        # (bool) default is false
```

Από την έκδοση `nette/application` 3.2, μπορείτε να ορίσετε ένα ζεύγος error-presenters:

```neon
application:
	errorPresenter:
		4xx: Error4xx   # for Nette\Application\BadRequestException exception
		5xx: Error5xx   # for other exceptions
```

Η επιλογή `silentLinks` καθορίζει πώς συμπεριφέρεται το Nette στη λειτουργία ανάπτυξης όταν η δημιουργία ενός συνδέσμου αποτυγχάνει (για παράδειγμα, επειδή ο presenter δεν υπάρχει, κ.λπ.). Η προεπιλεγμένη τιμή `false` σημαίνει ότι το Nette θα δημιουργήσει ένα σφάλμα `E_USER_WARNING`. Η ρύθμιση σε `true` θα καταστείλει αυτό το μήνυμα σφάλματος. Στο περιβάλλον παραγωγής, το `E_USER_WARNING` δημιουργείται πάντα. Αυτή η συμπεριφορά μπορεί επίσης να ελεγχθεί ορίζοντας τη μεταβλητή του presenter [$invalidLinkMode|creating-links#neplatne-odkazy].

Τα [ψευδώνυμα απλοποιούν τη σύνδεση |creating-links#aliasy] σε συχνά χρησιμοποιούμενους presenters.

Η [αντιστοίχιση ορίζει κανόνες |directory-structure#mapování presenterů], σύμφωνα με τους οποίους το όνομα της κλάσης προκύπτει από το όνομα του presenter.


Αυτόματη εγγραφή παρουσιαστών .[#toc-automatic-registration-of-presenters]
--------------------------------------------------------------------------

Το Nette προσθέτει αυτόματα τους presenters ως υπηρεσίες στο DI container, γεγονός που επιταχύνει σημαντικά τη δημιουργία τους. Ο τρόπος με τον οποίο το Nette βρίσκει τους presenters μπορεί να διαμορφωθεί:

```neon
application:
	# search for presenters in Composer class map?
	scanComposer: ...      # (bool) default is true

	# mask that the class and file name must match
	scanFilter: ...        # (string) default is '*Presenter'

	# in which directories to search for presenters?
	scanDirs:              # (string[]|false) default is '%appDir%'
		- %vendorDir%/mymodule
```

Οι κατάλογοι που αναφέρονται στο `scanDirs` δεν αντικαθιστούν την προεπιλεγμένη τιμή `%appDir%`, αλλά την συμπληρώνουν, οπότε το `scanDirs` θα περιέχει και τις δύο διαδρομές `%appDir%` και `%vendorDir%/mymodule`. Αν θέλουμε να παραλείψουμε τον προεπιλεγμένο κατάλογο, χρησιμοποιούμε ένα [θαυμαστικό |dependency-injection:configuration#Slučování], το οποίο αντικαθιστά την τιμή:

```neon
application:
	scanDirs!:
		- %vendorDir%/mymodule
```

Η σάρωση καταλόγων μπορεί να απενεργοποιηθεί καθορίζοντας την τιμή false. Δεν συνιστούμε την πλήρη καταστολή της αυτόματης προσθήκης presenters, καθώς αυτό θα μειώσει την απόδοση της εφαρμογής.


Šablony Latte
=============

Με αυτή τη ρύθμιση, μπορείτε να επηρεάσετε καθολικά τη συμπεριφορά του Latte στα components και τους presenters.

```neon
latte:
	# show the Latte panel in Tracy Bar for the main template (true) or all components (all)?
	debugger: ...        # (true|false|'all') default is true

	# generates templates with the header declare(strict_types=1)
	strictTypes: ...     # (bool) default is false

	# enables [strict parser mode |latte:develop#striktní režim]
	strictParsing: ...   # (bool) default is false

	# activates [generated code checking |latte:develop#Kontrola vygenerovaného kódu]
	phpLinter: ...       # (string) default is null

	# sets the locale
	locale: cs_CZ        # (string) default is null

	# class of the $this->template object
	templateClass: App\MyTemplateClass # default is Nette\Bridges\ApplicationLatte\DefaultTemplate
```

Αν χρησιμοποιείτε την έκδοση 3 του Latte, μπορείτε να προσθέσετε νέες [επεκτάσεις |latte:extending-latte#latte-extension] χρησιμοποιώντας:

```neon
latte:
	extensions:
		- Latte\Essential\TranslatorExtension(@Nette\Localization\Translator)
```

Αν χρησιμοποιείτε την έκδοση 2 του Latte, μπορείτε να καταχωρήσετε νέες ετικέτες είτε καθορίζοντας το όνομα της κλάσης είτε με αναφορά σε μια υπηρεσία. Ως προεπιλογή, καλείται η μέθοδος `install()`, αλλά αυτό μπορεί να αλλάξει καθορίζοντας το όνομα μιας άλλης μεθόδου:

```neon
latte:
	# registration of custom Latte tags
	macros:
		- App\MyLatteMacros::register         # static method, classname or callable
		- @App\MyLatteMacrosFactory           # service with install() method
		- @App\MyLatteMacrosFactory::register # service with register() method

services:
	- App\MyLatteMacrosFactory
```


Routování
=========

Βασικές ρυθμίσεις:

```neon
routing:
	# show the routing panel in Tracy Bar?
	debugger: ...   # (bool) default is true

	# serializes the router into the DI container
	cache: ...      # (bool) default is false
```

Η δρομολόγηση συνήθως ορίζεται στην κλάση [RouterFactory |routing#Kolekce rout]. Εναλλακτικά, οι διαδρομές μπορούν επίσης να οριστούν στη διαμόρφωση χρησιμοποιώντας ζεύγη `mask: action`, αλλά αυτή η μέθοδος δεν προσφέρει τόσο μεγάλη ευελιξία στις ρυθμίσεις:

```neon
routing:
	routes:
		'detail/<id>': Admin:Home:default
		'<presenter>/<action>': Front:Home:default
```


Konstanty
=========

Δημιουργία σταθερών PHP.

```neon
constants:
	Foobar: 'baz'
```

Μετά την εκκίνηση της εφαρμογής, θα δημιουργηθεί η σταθερά `Foobar`.

.[note]
Οι σταθερές δεν πρέπει να χρησιμεύουν ως κάποιου είδους καθολικά διαθέσιμες μεταβλητές. Για τη μεταβίβαση τιμών σε αντικείμενα, χρησιμοποιήστε το [dependency injection |dependency-injection:passing-dependencies].


PHP
===

Ρύθμιση οδηγιών PHP. Μια επισκόπηση όλων των οδηγιών μπορείτε να βρείτε στο [php.net |https://www.php.net/manual/en/ini.list.php].

```neon
php:
	date.timezone: Europe/Prague
```


Služby DI
=========

Αυτές οι υπηρεσίες προστίθενται στο DI container:

| Όνομα           | Τύπος                        | Περιγραφή
|----------------------------------------------------------
| `application.application`	     | [api:Nette\Application\Application]      |  [εκκινητής ολόκληρης της εφαρμογής |how-it-works#Nette Application]
| `application.linkGenerator`    | [api:Nette\Application\LinkGenerator]    |  [LinkGenerator |creating-links#LinkGenerator]
| `application.presenterFactory` | [api:Nette\Application\PresenterFactory] |  εργοστάσιο για presenters
| `application.###`              | [api:Nette\Application\UI\Presenter]     |  μεμονωμένοι presenters
| `latte.latteFactory`           | [api:Nette\Bridges\ApplicationLatte\LatteFactory] | εργοστάσιο αντικειμένου `Latte\Engine`
| `latte.templateFactory`        | [api:Nette\Application\UI\TemplateFactory] | εργοστάσιο για [`$this->template` |templates]
