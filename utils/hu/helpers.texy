Segédfüggvények
***************

.[perex]
Az [api:Nette\Utils\Helpers] egy statikus osztály hasznos függvényekkel.


Telepítés:

```shell
composer require nette/utils
```

Minden példa feltételezi a következő alias létrehozását:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Végrehajtja a callbacket és visszaadja az elfogott kimenetet stringként.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Korlátozza az értéket a megadott inkluzív min és max tartományba.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Összehasonlít két értéket ugyanúgy, ahogy a PHP teszi. Megkülönbözteti a `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>` operátorokat.
A függvény hasznos olyan helyzetekben, amikor az operátor változó.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

A `false`-t `null`-ra konvertálja, más értékeket nem változtat.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Visszaadja az utolsó PHP hibát vagy üres stringet, ha nem történt hiba. Az `error_get_last()`-tal szemben nem befolyásolja a `html_errors` PHP direktíva, és mindig szöveget ad vissza, nem HTML-t.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

A felkínált `$possibilities` lehetőségek közül keres egy stringet, amely a leginkább hasonlít a `$value`-ra, de nem azonos vele. Csak 8 bites kódolást támogat.

Alkalmas abban az esetben, ha egy bizonyos opció érvénytelen, és szeretnénk a felhasználónak egy hasonlót javasolni (de mást, ezért az azonos string figyelmen kívül van hagyva). Így hozza létre a Nette a `did you mean ...?` üzeneteket.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', nem 'baz'
```
