Dokümantasyona Katkıda Bulunma
******************************

.[perex]
Dokümantasyona katkıda bulunmak, başkalarının çerçeveyi anlamasına yardımcı olduğu için en değerli faaliyetlerden biridir.


Nasıl Yazılır? .[#toc-how-to-write]
-----------------------------------

Dokümantasyon öncelikle konuya yeni başlayan kişilere yöneliktir. Bu nedenle, birkaç önemli noktayı karşılamalıdır:

- Basit ve genel konularla başlayın. Sonunda daha gelişmiş konulara geçin
- Konuyu mümkün olduğunca açık bir şekilde anlatmaya çalışın. Örneğin, konuyu önce bir meslektaşınıza açıklamayı deneyin
- Yalnızca kullanıcının belirli bir konu için gerçekten bilmesi gereken bilgileri sağlayın
- Bilgilerinizin doğru olduğundan emin olun. Her kodu test edin
- Kısa ve öz olun - yazdıklarınızı ikiye bölün. Ve sonra tekrar yapmaktan çekinmeyin
- Kalın yazı tiplerinden aşağıdaki gibi çerçevelere kadar vurgulamayı idareli kullanın `.[note]`
- Kodda [Kodlama Standardını |Coding Standard] Takip Edin

Ayrıca, [sözdizimini |syntax] öğrenin. Yazım sırasında makalenin önizlemesi için önizleme [düzenleyicisini |https://editor.nette.org/] kullanabilirsiniz.


Dil Mutasyonları .[#toc-language-mutations]
-------------------------------------------

İngilizce birincil dildir, bu nedenle değişiklikleriniz İngilizce olmalıdır. Eğer İngilizce sizin için uygun değilse, [DeepL Translator |https://www.deepl.com/translator] 'ı kullanın ve diğerleri metninizi kontrol etsin.

Düzenlemenizin onaylanması ve ince ayarlarının yapılmasının ardından diğer dillere çeviri otomatik olarak yapılacaktır.


Önemsiz Düzenlemeler .[#toc-trivial-edits]
------------------------------------------

Belgelere katkıda bulunmak için [GitHub |https://github.com]'da bir hesabınızın olması gerekir.

Belgelerde küçük bir değişiklik yapmanın en kolay yolu, her sayfanın sonundaki bağlantıları kullanmaktır:

- *GitHub'da göster* sayfanın GitHub'daki kaynak sürümünü açar. Ardından `E` düğmesine basın ve düzenlemeye başlayabilirsiniz (GitHub'da oturum açmış olmanız gerekir)
- Önizlemeyi aç* son görsel formu hemen görebileceğiniz bir düzenleyici açar

 [Önizleme düzenleyicisi |https://editor.nette.org/] değişiklikleri doğrudan GitHub'a kaydetme özelliğine sahip olmadığından, kaynak metni panoya kopyalamanız (*Panoya kopyala düğmesini* kullanarak) ve ardından GitHub'daki düzenleyiciye yapıştırmanız gerekir.
Düzenleme alanının altında gönderim için bir form bulunmaktadır. Burada, düzenlemenizin nedenini kısaca özetlemeyi ve açıklamayı unutmayın. Gönderdikten sonra, daha fazla düzenlenebilen bir çekme isteği (PR) oluşturulur.


Daha Büyük Düzenlemeler .[#toc-larger-edits]
--------------------------------------------

Yalnızca GitHub arayüzüne güvenmek yerine Git sürüm kontrol sistemi ile çalışmanın temellerine aşina olmak daha uygundur. Git'e aşina değilseniz, [git - the simple guide |https://rogerdudler.github.io/git-guide/] 'a başvurabilir ve mevcut birçok [grafik istemciden |https://git-scm.com/downloads/guis] birini kullanmayı düşünebilirsiniz.

Belgeleri aşağıdaki şekilde düzenleyin:

1) GitHub'da [nette/docs |https://github.com/nette/docs] deposunun bir [çatalını |https://help.github.com/en/github/getting-started-with-github/fork-a-repo] oluşturun
2) bu depoyu bilgisayarınıza [klonlayın |https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository]
3) daha sonra, [uygun dalda |#Documentation Structure]değişiklikler yapın
4) [Code-Checker |code-checker:] aracını kullanarak metinde fazladan boşluk olup olmadığını kontrol edin
5) değişiklikleri kaydedin (işleyin)
6) değişikliklerden memnunsanız, bunları GitHub'a çatalınıza gönderin
7) oradan, bir [pull request|https://help.github.com/articles/creating-a-pull-request] (PR) oluşturarak bunları `nette/docs` deposuna gönderin

Öneriler içeren yorumlar almak yaygındır. Önerilen değişiklikleri takip edin ve bunları dahil edin. Önerilen değişiklikleri yeni taahhütler olarak ekleyin ve GitHub'a yeniden gönderin. Asla sadece mevcut bir talebi değiştirmek için yeni bir talep oluşturmayın.


Dokümantasyon Yapısı .[#toc-documentation-structure]
----------------------------------------------------

Belgelerin tamamı GitHub'da [nette/docs |https://github.com/nette/docs] deposunda yer almaktadır. Güncel sürüm master dalında, eski sürümler ise `doc-3.x`, `doc-2.x` gibi dallarda yer almaktadır.

Her şubenin içeriği, ayrı dokümantasyon alanlarını temsil eden ana klasörlere bölünmüştür. Örneğin, `application/` https://doc.nette.org/en/application 'a, `latte/` https://latte.nette.org 'a, vb. karşılık gelir. Bu klasörlerin her biri dil mutasyonlarını temsil eden alt klasörler (`cs`, `en`, ...) ve isteğe bağlı olarak dokümantasyondaki sayfalara eklenebilecek resimler içeren bir `files` alt klasörü içerir.
