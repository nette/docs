Допоміжні функції
*****************

.[perex]
[api:Nette\Utils\Helpers] — це статичний клас з корисними функціями.


Встановлення:

```shell
composer require nette/utils
```

Усі приклади передбачають створений псевдонім:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Виконує callback і повертає захоплений вивід як рядок.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Обмежує значення заданим інклюзивним діапазоном min та max.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Порівнює два значення так само, як це робить PHP. Розрізняє оператори `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>`.
Функція корисна в ситуаціях, коли оператор є змінним.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Перетворює `false` на `null`, інші значення не змінює.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Повертає останню помилку в PHP або порожній рядок, якщо помилки не сталося. На відміну від `error_get_last()`, не піддається впливу директиви PHP `html_errors` і завжди повертає текст, а не HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

З запропонованих варіантів `$possibilities` шукає рядок, який найбільше схожий на `$value`, але не такий самий. Підтримує лише 8-бітне кодування.

Це корисно у випадку, коли певний вибір недійсний, і ми хочемо порадити користувачеві схожий (але інший, тому ігнорується той самий рядок). Таким чином Nette створює повідомлення `did you mean ...?`.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', не 'baz'
```
