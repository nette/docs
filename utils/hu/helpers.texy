Segédfunkciók
*************

.[perex]
[api:Nette\Utils\Helpers] egy statikus osztály hasznos funkciókkal.


Telepítés:

```shell
composer require nette/utils
```

Minden példa feltételezi, hogy a következő osztály alias van definiálva:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Végrehajt egy visszahívást, és a rögzített kimenetet stringként adja vissza.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Visszaadja a min és max tartományba szorított értéket.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Összehasonlít két értéket a PHP-hoz hasonlóan. Megkülönbözteti a `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>` operátorokat.
A függvény olyan helyzetekben hasznos, amikor az operátor változó.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Átváltja a `false` -t `null`-re, más értékeket nem változtat.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Visszaadja az utoljára előfordult PHP-hibát, vagy egy üres karakterláncot, ha nem történt hiba. A `error_get_last()`-től eltérően nem befolyásolja a `html_errors` PHP-direktíva, és mindig szöveget ad vissza, nem HTML-t.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Olyan karakterláncot keres a `$possibilities` címből, amely leginkább hasonlít a `$value` címhez, de nem azonos vele. Csak 8 bites kódolásokat támogat.

Hasznos, ha egy bizonyos opció nem érvényes, és egy hasonlót akarunk javasolni a felhasználónak (de másikat, tehát ugyanazt a karakterláncot figyelmen kívül hagyjuk). Ily módon a Nette a `did you mean ...?` üzeneteket hozza létre.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
