Διαμόρφωση Tracy
****************

Τα ακόλουθα παραδείγματα υποθέτουν ότι έχει οριστεί το ακόλουθο ψευδώνυμο κλάσης:

```php
use Tracy\Debugger;
```


Καταγραφή σφαλμάτων .[#toc-error-logging]
-----------------------------------------

```php
$logger = Debugger::getLogger();

// εάν έχει συμβεί σφάλμα, η ειδοποίηση αποστέλλεται σε αυτό το email
$logger->email = 'dev@example.com';      // (string|string[]) προεπιλογή unset

// αποστολέας email
$logger->fromEmail = 'me@example.com';   // (string) προεπιλογή unset

// ρουτίνα για την αποστολή email
$logger->mailer = /* ... */;             // (callable) προεπιλογή αποστολής με mail()

// μετά από ποιο συντομότερο χρονικό διάστημα να στείλει άλλο email;
$logger->emailSnooze = /* ... */;        // (string) η προεπιλογή είναι '2 ημέρες'

// για ποια επίπεδα σφάλματος καταγράφεται επίσης το BlueScreen;
Debugger::$logSeverity = E_WARNING | E_NOTICE;  // Προεπιλογή 0 (κανένα επίπεδο σφάλματος)
```


`dump()` Συμπεριφορά
--------------------

```php
// μέγιστο μήκος συμβολοσειράς
Debugger::$maxLength = 150;              // (int) προεπιλογή σύμφωνα με το Tracy

// πόσο βαθιά θα είναι η λίστα
Debugger::$maxDepth = 10;                // (int) προεπιλογή σύμφωνα με την Tracy

// απόκρυψη των τιμών αυτών των κλειδιών (από το Tracy 2.8)
Debugger::$keysToHide = ['password', /* ... */];  // (string[]) προεπιλογή σε []

// οπτικό θέμα (από το Tracy 2.8)
Debugger::$dumpTheme = 'dark';           // (light|dark) προεπιλογή σε 'light'

// εμφανίζει τη θέση στην οποία κλήθηκε η dump()?
Debugger::$showLocation = /* ... */;     // (bool) προεπιλογή σύμφωνα με το Tracy
```


Άλλοι .[#toc-others]
--------------------

```php
// στη λειτουργία ανάπτυξης, θα δείτε προειδοποιήσεις ειδοποίησης ή σφάλματος ως BlueScreen
Debugger::$strictMode = /* ... */;       // (bool|int) προεπιλογή false, μπορείτε να επιλέξετε μόνο συγκεκριμένα επίπεδα σφάλματος (π.χ. E_USER_DEPRECATED | E_DEPRECATED)

// εμφανίζει σιωπηλά (@) μηνύματα σφάλματος
Debugger::$scream = /* ... */;           // (bool|int) προεπιλογή false, από την έκδοση 2.9 είναι δυνατή η επιλογή μόνο συγκεκριμένων επιπέδων σφάλματος (π.χ. E_USER_DEPRECATED | E_DEPRECATED)

// μορφή συνδέσμου για άνοιγμα στον επεξεργαστή
Debugger::$editor = /* ... */;           // (string|null) προεπιλογή: 'editor://open/?file=%file&line=%line'

// διαδρομή προς το πρότυπο με την προσαρμοσμένη σελίδα για το σφάλμα 500
Debugger::$errorTemplate = /* ... */;    // (string) με προεπιλογή unset

// shows Tracy Bar?
Debugger::$showBar = /* ... */;          // (bool) προεπιλογή true

Debugger::$editorMapping = [
	// original => new
	'/var/www/html' => '/data/web',
	'/home/web' => '/srv/html',
];
```


Πλαίσιο Nette .[#toc-nette-framework]
-------------------------------------

Εάν χρησιμοποιείτε το Nette Framework, μπορείτε επίσης να ρυθμίσετε το Tracy και να προσθέσετε νέα πάνελ στη γραμμή Tracy χρησιμοποιώντας το αρχείο ρυθμίσεων.
Μπορείτε να ορίσετε τις παραμέτρους του Tracy στη διαμόρφωση και επίσης να προσθέσετε νέους πίνακες στη γραμμή Tracy. Αυτές οι ρυθμίσεις εφαρμόζονται μόνο μετά τη δημιουργία του δοχείου DI, οπότε τα σφάλματα που προέκυψαν νωρίτερα δεν μπορούν να τις αντικατοπτρίζουν.

Ρύθμιση παραμέτρων καταγραφής σφαλμάτων:

```neon
tracy:
	# αν έχει συμβεί σφάλμα, η ειδοποίηση αποστέλλεται σε αυτό το email
	email: dev@example.com           # (string|string[]) προεπιλογή unset

	# αποστολέας email
	fromEmail: robot@example.com     # (string) προεπιλογή unset

	# περίοδος αναβολής της αποστολής email (από το Tracy 2.8.8)
	emailSnooze: ...                 # (string) προεπιλογή '2 ημέρες'

	# για να χρησιμοποιήσετε έναν αποστολέα αλληλογραφίας που έχει οριστεί στη ρύθμιση παραμέτρων? (από το Tracy 2.5)
	netteMailer: ...                 # (bool) προεπιλογή σε true

	# για ποια επίπεδα σφαλμάτων καταγράφεται επίσης το BlueScreen;
	logSeverity: [E_WARNING, E_NOTICE]  # defaults to []
```

Διαμόρφωση για τη λειτουργία `dump()`:

```neon
tracy:
	# μέγιστο μήκος συμβολοσειράς
	maxLength: 150                # (int) προεπιλογή σύμφωνα με το Tracy

	# πόσο βαθιά θα είναι η λίστα
	maxDepth: 10                  # (int) προεπιλογή σύμφωνα με την Tracy

	# απόκρυψη των τιμών αυτών των κλειδιών (από το Tracy 2.8)
	keysToHide: [password, pass]  # (string[]) προεπιλογή σε []

	# οπτικό θέμα (από το Tracy 2.8)
	dumpTheme: dark               # (light|dark) προεπιλογή σε 'light'

	# εμφανίζει τη θέση στην οποία κλήθηκε η dump()?
	showLocation: ...             # (bool) προεπιλογή σύμφωνα με το Tracy
```

Για να εγκαταστήσετε την επέκταση Tracy:

```neon
tracy:
	# προσθέτει ράβδους στο Tracy Bar
	bar:
		- Nette\Bridges\DITracy\ContainerPanel
		- IncludePanel
		- XDebugHelper('myIdeKey')
		- MyPanel(@MyService)

	# Προσαρτά πάνελ στο BlueScreen
	blueScreen:
		- DoctrinePanel::renderException
```

Άλλες επιλογές:

```neon
tracy:
	# στη λειτουργία ανάπτυξης, θα δείτε προειδοποιήσεις ειδοποίησης ή σφάλματος ως BlueScreen
	strictMode: ...           # είναι προεπιλεγμένη σε true

	# εμφανίζει σιωπηλά (@) μηνύματα σφάλματος
	scream: ...               # προεπιλογή σε false

	# μορφή συνδέσμου για άνοιγμα στον επεξεργαστή
	editor: ...               # (string) προεπιλογή 'editor://open/?file=%file&line=%line'

	# διαδρομή προς το πρότυπο με την προσαρμοσμένη σελίδα για το σφάλμα 500
	errorTemplate: ...        # (string) προεπιλογή unset

	# shows Tracy Bar?
	showBar: ...              # (bool) προεπιλογή true

	editorMapping:
		# original: new
		/var/www/html: /data/web
		/home/web: /srv/html
```

Οι τιμές των επιλογών `logSeverity`, `strictMode` και `scream` μπορούν να γραφούν ως πίνακας επιπέδων σφάλματος (π.χ. `[E_WARNING, E_NOTICE]`) ή ως έκφραση που χρησιμοποιείται στην PHP (π.χ. `E_ALL & ~E_NOTICE`).
