RobotLoader: Class Autoloading
******************************

<div class=perex>

RobotLoader is a tool that gives you the comfort of automated class loading for your entire application including third-party libraries.

- get rid of all `require`
- only necessary scripts are loaded
- requires no strict file naming conventions

</div>

Installation:

```shell
composer require nette/robot-loader
```

[RobotLoader |api:Nette\Loaders\RobotLoader] is extremely comfortable and addictive!

So we can forget about those famous code blocks:

```php
require_once 'Utils/Page.php';
require_once 'Utils/Style.php';
require_once 'Utils/Paginator.php';
...
```

Like the Google robot crawls and indexes websites, RobotLoader crawls all PHP scripts and records what classes and interfaces were found in them. These records are then saved in cache and used during all subsequent requests. You just need to specify what directories to index and where to save the cache:

```php
$loader = new Nette\Loaders\RobotLoader;

// Add directories for RobotLoader to index
$loader->addDirectory(__DIR__ . '/app');
$loader->addDirectory(__DIR__ . '/libs');

// And set caching to the 'temp' directory
$loader->setTempDirectory(__DIR__ . '/temp');
$loader->register(); // Run the RobotLoader
```

And that's all. From now on, you don't need to use `require`. Great, isn't it?

When RobotLoader encounters duplicate class name during indexing, it throws an exception and informs you about it.

The `$loader->setAutoRefresh(true or false)` determines whether RobotLoader should reindex files if asked for nonexistent class. This feature should be disabled on the production server.

.[tip]
Therefore, you need to delete the cache when you upload a new version of the application to the web.

If you want RobotLoader to skip some directory, use `$loader->excludeDirectory('temp')`.


Nette Application
-----------------

Inside Nette application, where `$configurator` is used in `Bootstrap.php`, you can setup RobotLoader this way:

```php
$configurator = new Nette\Configurator;
...
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();
```



{{composer: nette/robot-loader}}
