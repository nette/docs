Fecha y hora
************

.[perex]
[api:Nette\Utils\DateTime] es una clase que extiende la clase nativa [php:DateTime] con funciones adicionales.


Instalación:

```shell
composer require nette/utils
```

Todos los ejemplos asumen que se ha creado un alias:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Crea un objeto DateTime a partir de una cadena, timestamp UNIX u otro objeto [php:DateTimeInterface]. Lanza una excepción `Exception` si la fecha y hora no son válidas.

```php
DateTime::from(1138013640); // crea DateTime desde un timestamp UNIX con la zona horaria predeterminada
DateTime::from(42); // crea DateTime desde la hora actual más 42 segundos
DateTime::from('1994-02-26 04:15:32'); // crea DateTime según la cadena
DateTime::from('1994-02-26'); // crea DateTime según la fecha, la hora será 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Crea un objeto DateTime o lanza una excepción `Nette\InvalidArgumentException` si la fecha y hora no son válidas.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, ?string|\DateTimeZone $timezone=null): DateTime|false .[method]
---------------------------------------------------------------------------------------------------------------------
Extiende [DateTime::createFromFormat()|https://www.php.net/manual/en/datetime.createfromformat.php] con la posibilidad de especificar la zona horaria como una cadena.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Crea una copia con la hora modificada.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Devuelve la fecha y hora en formato `Y-m-d H:i:s`.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


implementa JsonSerializable
---------------------------
Devuelve la fecha y hora en formato ISO 8601, que se utiliza por ejemplo en JavaScript.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
