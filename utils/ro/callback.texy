Funcții de apelare
******************

.[perex]
[api:Nette\Utils\Callback] este o clasă statică, care conține funcții pentru lucrul cu [callback-urile PHP |https://www.php.net/manual/en/language.types.callable.php].


Instalare:

```shell
composer require nette/utils
```

Toate exemplele presupun că este definit următorul alias de clasă:

```php
use Nette\Utils\Callback;
```


check($callable, bool $syntax=false): callable .[method]
--------------------------------------------------------

Verifică dacă `$callable` este un callback PHP valid. În caz contrar, aruncă `Nette\InvalidArgumentException`. Dacă `$syntax` este setat la true, funcția verifică doar dacă `$callable` are o structură validă pentru a fi utilizată ca callback, dar nu verifică dacă clasa sau metoda există efectiv. Returnează `$callable`.

```php
Callback::check('trim'); // fără excepție
Callback::check(['NonExistentClass', 'method']); // aruncă Nette\InvalidArgumentException
Callback::check(['NonExistentClass', 'method'], true); // nicio excepție
Callback::check(function () {}); // nicio excepție
Callback::check(null); // aruncă Nette\InvalidArgumentException
```


toString($callable): string .[method]
-------------------------------------

Convertește callback-ul PHP în formă textuală. Clasa sau metoda poate să nu existe.

```php
Callback::toString('trim');                // 'trim'
Callback::toString(['MyClass', 'method']); // 'MyClass::method'
```


toReflection($callable): ReflectionMethod|ReflectionFunction .[method]
----------------------------------------------------------------------

Returnează reflectarea metodei sau a funcției utilizate în callback-ul PHP.

```php
$ref = Callback::toReflection('trim');
// $ref este ReflectionFunction('trim')

$ref = Callback::toReflection(['MyClass', 'method']);
// $ref este ReflectionMethod('MyClass', 'method')
```


isStatic($callable): bool .[method]
-----------------------------------

Verifică dacă callback-ul PHP este o funcție sau o metodă statică.

```php
Callback::isStatic('trim');                // true
Callback::isStatic(['MyClass', 'method']); // true
Callback::isStatic([$obj, 'method']);      // false
Callback::isStatic(function () {});        // false
```


unwrap(Closure $closure): callable|array .[method]
--------------------------------------------------

Desfășoară închiderea creată de `Closure::fromCallable`:https://www.php.net/manual/en/closure.fromcallable.php.

```php
$closure = Closure::fromCallable(['MyClass', 'method']);
Callback::unwrap($closure);     // ['MyClass', 'method']
```
