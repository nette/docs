Editori e strumenti
*******************

.[perex]
Si può essere programmatori esperti, ma solo con buoni strumenti si diventa maestri. In questo capitolo troverete suggerimenti su importanti strumenti, editor e plugin.


Editor IDE .[#toc-ide-editor]
=============================

Si consiglia vivamente di utilizzare un IDE completo per lo sviluppo, come PhpStorm, NetBeans, VS Code, e non solo un editor di testo con supporto PHP. La differenza è davvero fondamentale. Non c'è motivo di accontentarsi di un editor classico con l'evidenziazione della sintassi, perché non raggiunge le capacità di un IDE con suggerimenti accurati del codice, in grado di rifattorizzare il codice e altro ancora. Alcuni IDE sono a pagamento, altri sono gratuiti.

**NetBeans IDE** ha il supporto integrato per Nette, Latte e NEON.

**PhpStorm**: installare questi plugin in `Settings > Plugins > Marketplace`:
- Aiutanti del framework Nette
- Latte
- Supporto NEON
- Tester Nette

**Codice VS**: trovare il plugin "Nette Latte + Neon" nel marketplace.

Collegare anche Tracy con l'editor. Quando viene visualizzata la pagina di errore, è possibile fare clic sui nomi dei file e questi si apriranno nell'editor con il cursore sulla riga corrispondente. Imparare a [configurare il sistema |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan è uno strumento che rileva gli errori logici nel codice prima di eseguirlo.

Si installa tramite Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Creare un file di configurazione `phpstan.neon` nel progetto:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

E poi lasciare che analizzi le classi nella cartella `app/`:

```shell
vendor/bin/phpstan analyse app
```

La documentazione completa è disponibile direttamente su [PHPStan |https://phpstan.org].


Controllore di codice .[#toc-code-checker]
==========================================

[Code Checker |code-checker:] controlla ed eventualmente ripara alcuni errori formali del codice sorgente.

- rimuove la [distinta base |nette:glossary#bom]
- controlla la validità dei modelli [Latte |latte:]
- controlla la validità dei file `.neon`, `.php` e `.json`
- verifica la presenza di [caratteri di controllo |nette:glossary#control characters]
- controlla se il file è codificato in UTF-8
- controlla gli errori di scrittura di `/* @annotations */` (manca il secondo asterisco)
- rimuove i tag finali PHP `?>` nei file PHP
- rimuove gli spazi bianchi di coda e le righe vuote non necessarie dalla fine di un file
- normalizza le terminazioni di riga ai valori predefiniti dal sistema (con il parametro `-l` ).


Compositore .[#toc-composer]
============================

[Composer |Composer] è uno strumento per gestire le dipendenze in PHP. Permette di dichiarare le dipendenze delle librerie e le installerà per noi, nel nostro progetto.


Controllo dei requisiti .[#toc-requirements-checker]
====================================================

Si trattava di uno strumento che testava l'ambiente di esecuzione del server e informava se (e fino a che punto) il framework poteva essere utilizzato. Attualmente, Nette può essere utilizzato su qualsiasi server che abbia la versione minima richiesta di PHP.

{{sitename: Migliori pratiche}}
