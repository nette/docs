HTTP Yanıtı
***********

.[perex]
Nette, HTTP yanıtını anlaşılır bir API'ye sahip nesneler içinde kapsüller.

HTTP yanıtı [api:Nette\Http\Response] nesnesi tarafından temsil edilir. Nette ile çalışıyorsanız, bu nesne framework tarafından otomatik olarak oluşturulur ve [bağımlılık enjeksiyonu |dependency-injection:passing-dependencies] aracılığıyla size iletilmesini sağlayabilirsiniz. Presenter'larda sadece `$this->getHttpResponse()` metodunu çağırmanız yeterlidir.

→ [Kurulum ve gereksinimler |@home#Instalace]


Nette\Http\Response
===================

Nesne, [Nette\Http\Request|request] aksine değiştirilebilirdir (mutable), yani ayarlayıcılar kullanarak durumu değiştirebilirsiniz, örneğin başlıkları gönderebilirsiniz. Tüm ayarlayıcıların **herhangi bir çıktı gönderilmeden önce** çağrılması gerektiğini unutmayın. Çıktının zaten gönderilip gönderilmediğini `isSent()` metodu söyler. `true` döndürürse, başlık göndermeye yönelik her girişim `Nette\InvalidStateException` istisnası atar.


setCode(int $code, ?string $reason=null) .[method]
--------------------------------------------------
[Yanıt kodu |https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10] durumunu değiştirir. Kaynak kodunun daha iyi anlaşılması için, kod için sayılar yerine [önceden tanımlanmış sabitler |api:Nette\Http\IResponse] kullanmanızı öneririz.

```php
$httpResponse->setCode(Nette\Http\Response::S404_NotFound);
```


getCode(): int .[method]
------------------------
Yanıtın durum kodunu döndürür.


isSent(): bool .[method]
------------------------
Başlıkların sunucudan tarayıcıya zaten gönderilip gönderilmediğini ve dolayısıyla artık başlık göndermenin veya durum kodunu değiştirmenin mümkün olup olmadığını döndürür.


setHeader(string $name, string $value) .[method]
------------------------------------------------
Bir HTTP başlığı gönderir ve daha önce gönderilen aynı addaki başlığın **üzerine yazar**.

```php
$httpResponse->setHeader('Pragma', 'no-cache');
```


addHeader(string $name, string $value) .[method]
------------------------------------------------
Bir HTTP başlığı gönderir ve daha önce gönderilen aynı addaki başlığın **üzerine yazmaz**.

```php
$httpResponse->addHeader('Accept', 'application/json');
$httpResponse->addHeader('Accept', 'application/xml');
```


deleteHeader(string $name) .[method]
------------------------------------
Daha önce gönderilen bir HTTP başlığını siler.


getHeader(string $header): ?string .[method]
--------------------------------------------
Gönderilen HTTP başlığını veya böyle bir başlık yoksa `null` döndürür. Parametre büyük/küçük harfe duyarsızdır.

```php
$pragma = $httpResponse->getHeader('Pragma');
```


getHeaders(): array .[method]
-----------------------------
Gönderilen tüm HTTP başlıklarını ilişkisel bir dizi olarak döndürür.

```php
$headers = $httpResponse->getHeaders();
echo $headers['Pragma'];
```


setContentType(string $type, ?string $charset=null) .[method]
-------------------------------------------------------------
`Content-Type` başlığını değiştirir.

```php
$httpResponse->setContentType('text/plain', 'UTF-8');
```


redirect(string $url, int $code=self::S302_Found): void .[method]
-----------------------------------------------------------------
Başka bir URL'ye yönlendirir. Ardından betiği sonlandırmayı unutmayın.

```php
$httpResponse->redirect('http://example.com');
exit;
```


setExpiration(?string $time) .[method]
--------------------------------------
`Cache-Control` ve `Expires` başlıklarını kullanarak HTTP belgesinin sona erme süresini ayarlar. Parametre ya bir zaman aralığıdır (metin olarak) ya da `null`'dır, bu da önbelleğe almayı devre dışı bırakır.

```php
// tarayıcı önbelleği bir saat içinde sona erecek
$httpResponse->setExpiration('1 hour');
```


sendAsFile(string $fileName) .[method]
--------------------------------------
Yanıt, belirtilen ad altında *Farklı Kaydet* iletişim kutusu kullanılarak indirilecektir. Dosyanın kendisini göndermez.

```php
$httpResponse->sendAsFile('faktura.pdf');
```


setCookie(string $name, string $value, $time, ?string $path=null, ?string $domain=null, ?bool $secure=null, ?bool $httpOnly=null, ?string $sameSite=null) .[method]
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Bir çerez gönderir. Parametrelerin varsayılan değerleri:

| `$path`     | `'/'`   | çerez, (alt) alan adındaki tüm yollarda kapsama sahiptir *(yapılandırılabilir)*
| `$domain`   | `null`  | bu, geçerli (alt) alan adında kapsama sahip olduğu, ancak alt alan adlarında olmadığı anlamına gelir *(yapılandırılabilir)*
| `$secure`   | `true`  | web sitesi HTTPS üzerinde çalışıyorsa, aksi takdirde `false` *(yapılandırılabilir)*
| `$httpOnly` | `true`  | çerez JavaScript için erişilemez
| `$sameSite` | `'Lax'` | çerez [başka bir alan adından erişim |nette:glossary#SameSite cookie] sırasında gönderilmeyebilir

`$path`, `$domain` ve `$secure` parametrelerinin varsayılan değerlerini [yapılandırma |configuration#HTTP cookie] içinde değiştirebilirsiniz.

Zaman, saniye sayısı veya bir dize olarak belirtilebilir:

```php
$httpResponse->setCookie('lang', 'cs', '100 days');
```

`$domain` parametresi, hangi alan adlarının çerezi kabul edebileceğini belirtir. Belirtilmezse, çerez onu ayarlayan aynı (alt) alan adı tarafından kabul edilir, ancak alt alan adları tarafından değil. `$domain` belirtilirse, alt alan adları da dahil edilir. Bu nedenle, `$domain` belirtmek, atlamaktan daha az kısıtlayıcıdır. Örneğin, `$domain = 'nette.org'` ile çerezler `doc.nette.org` gibi tüm alt alan adlarında da kullanılabilir.

`$sameSite` değeri için `Response::SameSiteLax`, `Response::SameSiteStrict` ve `Response::SameSiteNone` sabitlerini kullanabilirsiniz.


deleteCookie(string $name, ?string $path=null, ?string $domain=null, ?bool $secure=null): void .[method]
--------------------------------------------------------------------------------------------------------
Bir çerezi siler. Parametrelerin varsayılan değerleri şunlardır:
- `$path` tüm dizinlerde kapsama sahip (`'/'`)
- `$domain` geçerli (alt) alan adında kapsama sahip, ancak alt alan adlarında değil
- `$secure`, [yapılandırma |configuration#HTTP cookie] içindeki ayarlara göre yönetilir

```php
$httpResponse->deleteCookie('lang');
```
