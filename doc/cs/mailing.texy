Odesílání e-mailů
*****************

.[perex]
Téměř každá aplikace na webu potřebuje odesílat e-maily, ať už newslettery nebo zapomenutá hesla. Proto Nette Framework poskytuje potřebné nástroje.

Příklad odeslání e-mailu třídou [Nette\Mail\Message |api:]:

/--php
use Nette\Mail\Message;

$mail = new Message;
$mail->setFrom('Franta <franta@example.com>')
	->addTo('petr@example.com')
	->addTo('jirka@example.com')
	->setSubject('Potvrzení objednávky')
	->setBody("Dobrý den,\nvaše objednávka byla přijata.")
	->send();
\--

.[note]
Všechny zadávané parametry musí být v UTF-8.

Paráda, to snad ani nepotřebuje hlouběji rozebírat. Tak jen dodáme, že kromě uvedení příjemce metodou `addTo()` lze uvést i příjemce kopie `addCc()` a jeho slepého druha `addBcc()`. Ve všech těchto metodách včetně `setFrom()` můžeme adresáta zapsat třemi způsoby:

/--php
$mail->setFrom('franta@example.com');
$mail->setFrom('franta@example.com', 'Franta');
$mail->setFrom('Franta <franta@example.com>');
\--


HTML obsah se předává metodou `setHtmlBody()`:

/--php
$mail->setHTMLBody('<b>Sample HTML</b> <img src="background.gif">');
\--

Vložené obrázky lze do emailu vkládat metodou `$mail->addEmbeddedFile('background.gif')`, nicméně není to potřeba. Proč? Protože Nette Framework sám vyhledá a vloží všechny soubory odkazované v HTML kódu. Toto chování lze vypnout uvedením `FALSE` jakožto druhého parametru metody `setHtmlBody()`

Pokud HTML email nemá textovou alternativu, bude vygenerována automaticky. A pokud HTML email nemá nastavený subjekt, bude vzat z elementu `<title>`.


Přílohy
-------

Do e-mailu lze samozřejmě vkládat i přílohy. Slouží k tomu metoda [addAttachment|api:Nette\Mail\Message::addAttachment()]:

/--php
// vloží do e-mailu soubor example.zip
$mail->addAttachment('path/to/example.zip');

// vloží do e-mailu soubor example.txt s textem "Hello John!"
$mail->addAttachment('example.txt', 'Hello John!');

// vloží do e-mailu soubor example.zip pojmenovaný info.zip
$mail->addAttachment('info.zip', file_get_content('path/to/example.zip'));
\--

Může být odesílání e-mailů ještě jednodušší?


Šablony
-------

Skutečná síla se projeví při zkombinování se šablonovacím systémem Latte:

/--php
$template = new Nette\Templating\FileTemplate('email.phtml');
$template->registerFilter(new Nette\Latte\Engine);
$template->orderId = 123;

$mail = new Message;
$mail->setFrom('Franta <franta@example.com>')
	->addTo('petr@example.com')
	->setHtmlBody($template)
	->send();
\--

V šabloně bude dostupná lokální proměnná `$mail` s objektem zprávy, lze tedy i v šabloně nastavit další parametry zprávy.

Soubor `email.phtml`:

/--html
{var $mail->from = "Franta <franta@example.com>" }
<html>
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	<title>Potvrzení objednávky</title>
	<style>
	body {
		background: url("background.png")
	}
	</style>
</head>
<body>
	<p>Dobrý den,</p>

	<p>Vaše objednávka číslo {$orderId} byla přijata.</p>
</body>
</html>
\--

Pokud odesíláte e-mail v komponentě nebo presenteru, můžete vytvořit šablonu příkazem `$template = $this->createTemplate();` a poté budete moci generovat v šabloně i odkazy. Tvořte je vždy absolutní via `{link //Presenter:action}` .[tip]




Vlastní mailer
--------------

Výchozí mailer((třída zajišťující odesílání e-mailů)) používá PHP funkci [php:mail]. Pokud bychom potřebovali poštu odesílat skrze SMTP server, použijte `SmtpMailer`

/--php
$mailer = new Nette\Mail\SmtpMailer(array(
        'host' => 'smtp.gmail.com',
        'username' => 'franta@gmail.com',
        'password' => '*****',
        'secure' => 'ssl',
));
$mailer->send($mail);
\--

Alternativně můžete SmtpMailer předat přímo instanci Message:

/--php
$mail = new Message;
// ... konfigurace zprávy
$mail->setMailer($mailer);
$mail->send();
\--


Můžeme si také vytvořit vlastní mailer, jde o objekt implementující rozhraní [Nette\Mail\IMailer |api:].


{{toc: title}}

{{themeicon: icon-message.png}}

{{tags: nette\mail}}
