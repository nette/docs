Βοηθητικές συναρτήσεις
**********************

.[perex]
Η [api:Nette\Utils\Helpers] είναι μια στατική κλάση με χρήσιμες συναρτήσεις.


Εγκατάσταση:

```shell
composer require nette/utils
```

Όλα τα παραδείγματα προϋποθέτουν τη δημιουργία ενός ψευδώνυμου:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Εκτελεί το callback και επιστρέφει την παγιδευμένη έξοδο ως string.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Περιορίζει την τιμή εντός του δεδομένου εύρους min και max (συμπεριλαμβανομένων).

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Συγκρίνει δύο τιμές με τον ίδιο τρόπο που το κάνει η PHP. Διακρίνει τους τελεστές `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>`.
Η συνάρτηση είναι χρήσιμη σε καταστάσεις όπου ο τελεστής είναι μεταβλητός.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Μετατρέπει το `false` σε `null`, δεν αλλάζει άλλες τιμές.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Επιστρέφει το τελευταίο σφάλμα στην PHP ή ένα κενό string αν δεν προέκυψε κανένα σφάλμα. Σε αντίθεση με το `error_get_last()`, δεν επηρεάζεται από την οδηγία PHP `html_errors` και επιστρέφει πάντα κείμενο, όχι HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Από τις προσφερόμενες επιλογές `$possibilities`, αναζητά το string που είναι το πιο παρόμοιο με το `$value`, αλλά όχι το ίδιο. Υποστηρίζει μόνο κωδικοποίηση 8-bit.

Είναι χρήσιμο σε περίπτωση που μια συγκεκριμένη επιλογή δεν είναι έγκυρη και θέλουμε να συμβουλεύσουμε τον χρήστη για μια παρόμοια (αλλά διαφορετική, γι' αυτό αγνοείται το ίδιο string). Με αυτόν τον τρόπο η Nette δημιουργεί τα μηνύματα "μήπως εννοούσατε ...?";

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz' - 'bar', όχι 'baz'
```
