ドキュメント構文
********

ドキュメントはMarkdownと [Texy構文 |https://texy.nette.org/syntax] を使用し、いくつかの拡張機能があります。


リンク
===

内部リンクには角括弧 `[]` を使用します。これは、パイプ記号 `[リンクテキスト |リンクターゲット]` を使用する形式、またはターゲットがテキストと同じ場合（小文字とハイフンに変換後）の省略形 `[リンクテキスト |元のリンクテキスト]` のいずれかです。

- `[Page name |Page name]` -> `<a href="/en/page-name">Page name</a>`
- `[link text |Page name]` -> `<a href="/en/page-name">link text</a>`

異なる言語バージョンまたは異なるセクションにリンクできます。セクションとは、Netteライブラリ（例：`forms`、`latte`など）または`best-practices`、`quickstart`などの特別なセクションを意味します。

- `[cs:Page name |cs:Page name]` -> `<a href="/cs/page-name">Page name</a>` （同じセクション、異なる言語）
- `[tracy:Page name |tracy:Page name]` -> `<a href="//tracy.nette.org/en/page-name">Page name</a>` （異なるセクション、同じ言語）
- `[tracy:cs:Page name |tracy:cs:Page name]` -> `<a href="//tracy.nette.org/cs/page-name">Page name</a>` （異なるセクションと言語）

`#` を使用して、ページ上の特定のヘッダーをターゲットにすることもできます。

- `[#Heading]` -> `<a href="#toc-heading">Heading</a>` （現在のページのヘッダー）
- `[Page name#Heading]` -> `<a href="/en/page-name#toc-heading">Page name</a>`

セクションの開始ページへのリンク：（`@home` はセクションのホームページの特別な表現です）

- `[link text |@home]` -> `<a href="/en/">link text</a>`
- `[link text |tracy:]` -> `<a href="//tracy.nette.org/en/">link text</a>`


APIドキュメントへのリンク
--------------

常にこの表記法のみを使用してください：

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

完全修飾名は最初の言及でのみ使用してください。後続のリンクには簡略化された名前を使用してください：

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


PHPドキュメントへのリンク
--------------

- `[php:substr]` -> [php:substr]


ソースコード
======

コードブロックは <code>&#96;&#96;&#96;lang</code> で始まり、<code>&#96;&#96;&#96;</code> で終わります。サポートされている言語は `php`、`latte`、`neon`、`html`、`css`、`js`、`sql` です。インデントには常にタブを使用してください。

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

ファイル名を <code>&#96;&#96;&#96;php .{file: ArrayTest.php}</code> のように指定することもでき、コードブロックはこのようにレンダリングされます：

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


見出し
===

最上位の見出し（つまりページタイトル）はアスタリスクで下線を引きます。セクションを区切るには等号を使用します。見出しには等号、次にハイフンで下線を引きます：

```
MVCアプリケーションとPresenter
*********************
...


リンクの作成
======
...


テンプレート内のリンク
-----------
...
```


ボックスとスタイル
=========

Perexは `.[perex]` クラスでマークします .[perex]

注釈は `.[note]` クラスでマークします .[note]

ヒントは `.[tip]` クラスでマークします .[tip]

注意は `.[caution]` クラスでマークします .[caution]

より強い警告は `.[warning]` クラスでマークします .[warning]

バージョン番号 `.{data-version:2.4.10}` .{data-version:2.4.10}

クラスを行の前に記述します：

```
.[perex]
これはペレックスです。
```

`.[tip]` のようなボックスは目を引くため、重要でない情報ではなく、強調のために使用されることに注意してください。したがって、その使用は最大限に控えてください。


目次
=====

目次（右側のメニューのリンク）は、サイズが4,000バイトを超えるすべてのページに対して自動的に生成されます。このデフォルトの動作は、[#メタタグ] `{{toc}}` を使用して変更できます。目次を構成するテキストは、通常、見出しのテキストから直接取得されますが、`{toc}` 修飾子を使用すると、目次に異なるテキストを表示できます。これは、特に長い見出しに便利です。

```


長くて賢い見出し .{toc: 目次に表示される任意の他のテキスト}
==================================
```


メタタグ
====

- カスタムページタイトル（`<title>` とパンくずナビゲーション内）の設定 `{{title: 別のタイトル}}`
- リダイレクト `{{redirect: pla:cs}}` - [#リンク] を参照
- 自動目次（個々の見出しへのリンクを含むボックス）の強制 `{{toc}}` または無効化 `{{toc: no}}`

{{priority: -1}}
