Paginatore
**********

.[perex]
Avete bisogno di impaginare un elenco di dati? Poiché la matematica che sta dietro alla paginazione può essere complicata, [api:Nette\Utils\Paginator] vi aiuterà.

Installazione:

```shell
composer require nette/utils
```

Creiamo un oggetto di paginazione e impostiamo le informazioni di base:

```php
$paginator = new Nette\Utils\Paginator;
$paginator->setPage(1); // the number of the current page (numbered from 1)
$paginator->setItemsPerPage(30); // the number of records per page
$paginator->setItemCount(356); // the total number of records (if available)
```

Le pagine sono numerate a partire da 1. Possiamo cambiarle usando `setBase()`:

```php
$paginator->setBase(0); // numbered from 0
```

L'oggetto fornirà ora tutte le informazioni di base utili per creare un paginatore. È possibile, ad esempio, passarlo a un template e utilizzarlo lì.

```php
$paginator->isFirst(); // is this the first page?
$paginator->isLast(); // is this the last page?
$paginator->getPage(); // current page number
$paginator->getFirstPage(); // the first page number
$paginator->getLastPage(); // the last page number
$paginator->getFirstItemOnPage(); // sequence number of the first item on the page
$paginator->getLastItemOnPage(); // sequence number of the last item on the page
$paginator->getPageIndex(); // current page number if numbered from 0
$paginator->getPageCount(); // the total number of pages
$paginator->getItemsPerPage(); // the number of records per page
$paginator->getItemCount(); // the total number of records (if available)
```

Il paginatore aiuterà a formulare la query SQL. I metodi `getLength()` e `getOffset()` restituiscono i valori che possono essere utilizzati nelle clausole LIMIT e OFFSET:

```php
$result = $database->query(
	'SELECT * FROM items LIMIT ? OFFSET ?',
	$paginator->getLength(),
	$paginator->getOffset(),
);
```

Se si desidera effettuare la paginazione in ordine inverso, ossia che la pagina n. 1 corrisponda all'offset più alto, si può utilizzare il metodo . 1 corrisponde all'offset più alto, si può utilizzare il metodo `getCountdownOffset()`:

```php
$result = $database->query(
	'SELECT * FROM items LIMIT ? OFFSET ?',
	$paginator->getLength(),
	$paginator->getCountdownOffset(),
);
```

Un esempio di utilizzo nell'applicazione si trova nel ricettario [Paginazione dei risultati del database |best-practices:pagination].
