Работа с изображениями
**********************

.[perex]
Класс [api:Nette\Utils\Image] позволяет легко манипулировать изображениями, например, изменять размер, обрезать, повышать резкость, рисовать или соединять несколько изображений.

PHP имеет обширный набор функций для работы с изображениями. Но их API не очень удобен. Это был бы не Nette Framework, если бы не придумали сексуальный API.

Установка:

```shell
composer require nette/utils
```

Во всех примерах предполагается, что псевдоним уже создан:

```php
use Nette\Utils\Image;
```


Создание изображения .[#toc-creating-an-image]
==============================================

Создайте новое истинно цветное изображение, например, размером 100×200:

```php
$image = Image::fromBlank(100, 200);
```

По желанию можно указать цвет фона (по умолчанию черный):

```php
$image = Image::fromBlank(100, 200, Image::rgb(125, 0, 0));
```

Или загрузите изображение из файла:

```php
$image = Image::fromFile('nette.jpg');
```

Нужно ли определять формат изображения при загрузке? Метод возвращает его во втором параметре:

```php
$image = Image::fromFile('nette.jpg', $type);
// $type bude Image::JPEG, Image::PNG, Image::GIF, Image::WEBP nebo Image::BMP
```

Обнаружение без загрузки осуществляется по адресу `Image::detectTypeFromFile()`.


Сохранение изображения .[#toc-save-the-image]
=============================================

Изображение можно сохранить в файл:

```php
$image->save('resampled.jpg');
```

Мы можем задать качество сжатия в диапазоне 0...100 для JPEG (по умолчанию 85) и WEBP (по умолчанию 80) и 0...9 для PNG (по умолчанию 9):

```php
$image->save('resampled.jpg', 80); // JPEG, 80% качества
```

Если формат не очевиден из расширения файла, он может быть указан одной из констант `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`:

```php
$image->save('resampled.tmp', null, Image::JPEG);
```

Изображение может быть записано не на диск, а в переменную:

```php
$data = $image->toString(Image::JPEG, 80); // JPEG, 80% качества
```

или отправляется непосредственно в браузер с соответствующим HTTP-заголовком `Content-Type`:

```php
// отправляет заголовок Content-Type: image/png
$image->send(Image::PNG);
```


Изменить размер .[#toc-image-resize]
====================================

Частой операцией является изменение размера изображения. Фактические размеры возвращаются методами `getWidth()` и `getHeight()`.

Метод `resize()` используется для изменения размера изображения так, чтобы оно не превышало 500x300 пикселей (либо ширина будет ровно 500 px, либо высота ровно 300 px, один из размеров вычисляется для сохранения соотношения сторон):

```php
$image->resize(500, 300);
```

Можно указать только одно измерение, а другое будет рассчитано:

```php
$image->resize(500, null); // ширина 500px, высота рассчитывается

$image->resize(null, 300); // ширина рассчитана, высота 300px
```

Любое измерение может быть указано в процентах:

```php
$image->resize('75%', 300); // 75 % × 300px
```

На поведение `resize` могут влиять следующие симптомы. Все, кроме `Image::Stretch`, сохраняют соотношение сторон.

|---------------------------------------------------------------------------------------
| Флаг | Описание
|---------------------------------------------------------------------------------------
| `Image::OrSmaller` (по умолчанию)| результирующие размеры будут меньше или равны запрашиваемым размерам.
| `Image::OrBigger` | заполняет (и, возможно, превышает в одном измерении) целевую область
| `Image::Cover` | заполняет целевую область и обрезает то, что выходит за ее пределы.
| `Image::ShrinkOnly` | только уменьшение (позволяет избежать растягивания маленького изображения)
| `Image::Stretch` | не сохранять соотношение сторон


Флаги передаются в качестве третьего аргумента функции:

```php
$image->resize(500, 300, Image::OrBigger);
```

Флаги можно комбинировать:

```php
$image->resize(500, 300, Image::ShrinkOnly | Image::Stretch);
```

Изображения можно перевернуть по вертикали или горизонтали, указав один из размеров (или оба) как отрицательное число:

```php
$flipped = $image->resize(null, '-100%'); // flip vertical

$flipped = $image->resize('-100%', '-100%'); // rotate 180°

$flipped = $image->resize(-125, 500); // resize & flip horizontal
```

После уменьшения изображения можно улучшить его внешний вид с помощью тонкой настройки резкости:

```php
$image->sharpen();
```


Растениеводство .[#toc-cropping]
================================

Для возделывания используется метод `crop()`:

```php
$image->crop($left, $top, $width, $height);
```

Как и в случае с `resize()`, все значения могут быть представлены в процентах. Проценты для `$left` и `$top` рассчитываются из оставшегося пространства, аналогично свойству CSS `background-position`:

```php
$image->crop('100%', '50%', '80%', '80%');
```

[* crop.svg *]


Изображение можно также автоматически обрезать, например, обрезать черные границы:

```php
$image->cropAuto(IMG_CROP_BLACK);
```

Метод `cropAuto()` является объектной заменой функции `imagecropauto()`, более подробную информацию см. в [документации к ней |https://www.php.net/manual/en/function.imagecropauto].


Рисование и редактирование .[#toc-drawing-and-editing]
======================================================

Вы можете рисовать, можете писать, но не рвите страницы.

Все функции PHP для работы с изображениями, такие как [imagefilledellipse |https://www.php.net/manual/en/function.imagefilledellipse.php], доступны вам, но в объектно-ориентированном обличье:

```php
$image->filledEllipse($cx, $cy, $width, $height, Image::rgb(255, 0, 0, 63));
```

См. раздел [Обзор методов |#Overview-of-Methods].


Объединение нескольких изображений .[#toc-merge-multiple-images]
================================================================

Вы можете легко вставить другое изображение в фотографию:

```php
$logo = Image::fromFile('logo.png');
$blank = Image::fromBlank(320, 240, Image::rgb(52, 132, 210));

// координаты могут быть снова заданы в процентах
$blank->place($logo, '80%', '80%'); // вставьте в правый нижний угол
```

Альфаканал соблюдается во время вставки, и мы можем влиять на прозрачность вставленного изображения (мы создаем водяной знак):

```php
$blank->place($image, '80%', '80%', 25); // прозрачность составляет 25%
```

Этот API - настоящее удовольствие от использования!


Обзор методов .[#toc-overview-of-methods]
=========================================


static fromBlank(int $width, int $height, array $color=null): Image .[method]
-----------------------------------------------------------------------------
Создает новое истинно цветное изображение заданных размеров. По умолчанию используется черный цвет.


static fromFile(string $file, int &$detectedFormat=null): Image .[method]
-------------------------------------------------------------------------
Считывает изображение из файла и возвращает его тип в формате `$detectedFormat`. Поддерживаемые типы: `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`.


static fromString(string $s, int &$detectedFormat=null): Image .[method]
------------------------------------------------------------------------
Считывает изображение из строки и возвращает его тип в формате `$detectedFormat`. Поддерживаемые типы: `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`.


static rgb(int $red, int $green, int $blue, int $transparency=0): array .[method]
---------------------------------------------------------------------------------
Создает цвет, который может быть использован в других методах, таких как `ellipse()`, `fill()` и т.д.


static typeToExtension(int $type): string .[method]
---------------------------------------------------
Возвращает расширение файла для заданной константы `Image::XXX`.


static typeToMimeType(int $type): string .[method]
--------------------------------------------------
Возвращает тип mime для заданной константы `Image::XXX`.


static extensionToType(string $extension): int .[method]
--------------------------------------------------------
Возвращает тип изображения в виде константы `Image::XXX` в соответствии с расширением файла.


static detectTypeFromFile(string $file, int &$width=null, int &$height=null): ?int .[method]
--------------------------------------------------------------------------------------------
Возвращает тип изображения в виде константы `Image::XXX`, а также его размеры в параметрах `$width` и `$height`.


static detectTypeFromString(string $s, int &$width=null, int &$height=null): ?int .[method]
-------------------------------------------------------------------------------------------
Возвращает тип изображения из строки в виде константы `Image::XXX` и его размеры в параметрах `$width` и `$height`.


affine(array $affine, array $clip=null): Image .[method]
--------------------------------------------------------
Возвращает изображение, содержащее аффинно-трансформированное изображение src с использованием необязательной области обрезания. ([подробнее |https://www.php.net/manual/en/function.imageaffine]).


affineMatrixConcat(array $m1, array $m2): array .[method]
---------------------------------------------------------
Возвращает конкатенацию двух матриц аффинного преобразования, что полезно, если к одному изображению необходимо применить сразу несколько преобразований. ([подробнее |https://www.php.net/manual/en/function.imageaffinematrixconcat])


affineMatrixGet(int $type, mixed $options=null): array .[method]
----------------------------------------------------------------
Возвращает матрицу преобразования матрицы. ([подробнее |https://www.php.net/manual/en/function.imageaffinematrixget])


alphaBlending(bool $on): void .[method]
---------------------------------------
Позволяет использовать два различных режима рисования в трехцветных изображениях. В режиме наложения компонент альфа-канала цвета, используемый во всех функциях рисования, таких как `setPixel()`, определяет, в какой степени базовый цвет должен просвечивать. В результате в этот момент существующий цвет автоматически смешивается с цветом рисунка, и результат сохраняется в изображении. В результате пиксель становится непрозрачным. В режиме без смешивания цвет мультфильма копируется дословно с информацией альфа-канала и заменяется на целевой пиксель. Режим наложения недоступен при рисовании на изображениях палитры. ([подробнее |https://www.php.net/manual/en/function.imagealphablending])


antialias(bool $on): void .[method]
-----------------------------------
Активация рисования сглаженных линий и многоугольников. Не поддерживает альфа-каналы. Работает только с трехцветными изображениями.

Использование сглаженного примитива с прозрачным цветом фона может привести к неожиданным результатам. Метод смешивания использует цвет фона как любой другой цвет. ([подробнее |https://www.php.net/manual/en/function.imageantialias])


arc(int $x, int $y, int $w, int $h, int $start, int $end, int $color): void .[method]
-------------------------------------------------------------------------------------
Рисует дугу окружности с центром в заданных координатах. ([подробнее |https://www.php.net/manual/en/function.imagearc])


char(int $font, int $x, int $y, string $char, int $color): void .[method]
-------------------------------------------------------------------------
Нарисует первый символ `$char` в изображении с левым верхним углом `$x`, `$y` (левый верхний угол равен 0, 0) цветом `$color`. ([подробнее |https://www.php.net/manual/en/function.imagechar])


charUp(int $font, int $x, int $y, string $char, int $color): void .[method]
---------------------------------------------------------------------------
Рисует символ `$char` вертикально по указанной координате в заданном изображении. ([подробнее |https://www.php.net/manual/en/function.imagecharup])


colorAllocate(int $red, int $green, int $blue): int .[method]
-------------------------------------------------------------
Возвращает идентификатор цвета, представляющий цвет, состоящий из заданных компонентов RGB. Должен быть вызван для создания каждого цвета, который будет использоваться в изображении. ([подробнее |https://www.php.net/manual/en/function.imagecolorallocate])


colorAllocateAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
------------------------------------------------------------------------------
Действует так же, как и `colorAllocate()`, с добавлением параметра прозрачности `$alpha`. ([подробнее |https://www.php.net/manual/en/function.imagecolorallocatealpha])


colorAt(int $x, int $y): int .[method]
--------------------------------------
Возвращает индекс цвета пикселя в указанном месте изображения. Если изображение является truecolor, эта функция возвращает значение RGB для данного пикселя в виде целого числа. Используйте сдвиг битов и битовую маску для доступа к отдельным значениям для красного, зеленого и синего компонентов. ([подробнее |https://www.php.net/manual/en/function.imagecolorat])


colorClosest(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Возвращает индекс цвета в палитре изображения, который "ближе всего" к указанному значению RGB. Расстояние" между желаемым цветом и каждым цветом в палитре рассчитывается так, как если бы значения RGB представляли собой точки в трехмерном пространстве. ([подробнее |https://www.php.net/manual/en/function.imagecolorclosest])


colorClosestAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Возвращает индекс цвета в палитре изображений, который "ближе всего" к указанному значению RGB и уровню `$alpha`. ([подробнее |https://www.php.net/manual/en/function.imagecolorclosestalpha])


colorClosestHWB(int $red, int $green, int $blue): int .[method]
---------------------------------------------------------------
Получить индекс цвета, который имеет оттенок, белый и черный цвета, наиболее близкие к заданному цвету. ([подробнее |https://www.php.net/manual/en/function.imagecolorclosesthwb])


colorDeallocate(int $color): void .[method]
-------------------------------------------
Удаляет цвет, ранее назначенный с помощью `colorAllocate()` или `colorAllocateAlpha()`. ([подробнее |https://www.php.net/manual/en/function.imagecolordeallocate])


colorExact(int $red, int $green, int $blue): int .[method]
----------------------------------------------------------
Возвращает индекс указанного цвета в палитре изображения. ([подробнее |https://www.php.net/manual/en/function.imagecolorexact])


colorExactAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
---------------------------------------------------------------------------
Возвращает индекс указанного цвета + альфа в палитре изображений. ([подробнее |https://www.php.net/manual/en/function.imagecolorexactalpha])


colorMatch(Image $image2): void .[method]
-----------------------------------------
Совмещает цвета палитры с цветами другой панели. ([подробнее |https://www.php.net/manual/en/function.imagecolormatch])


colorResolve(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Возвращает индекс цвета для желаемого цвета, либо точный цвет, либо ближайший возможный альтернативный. ([подробнее |https://www.php.net/manual/en/function.imagecolorresolve])


colorResolveAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Возвращает индекс цвета для желаемого цвета, либо точный цвет, либо ближайший возможный альтернативный. ([подробнее |https://www.php.net/manual/en/function.imagecolorresolvealpha])


colorSet(int $index, int $red, int $green, int $blue): void .[method]
---------------------------------------------------------------------
Устанавливает указанный индекс в палитре на указанный цвет. ([подробнее |https://www.php.net/manual/en/function.imagecolorset])


colorsForIndex(int $index): array .[method]
-------------------------------------------
Получает цвет указанного индекса. ([подробнее |https://www.php.net/manual/en/function.imagecolorsforindex])


colorsTotal(): int .[method]
----------------------------
Возвращает количество цветов в палитре изображения. ([подробнее |https://www.php.net/manual/en/function.imagecolorstotal])


colorTransparent(int $color=null): int .[method]
------------------------------------------------
Получает или устанавливает прозрачный цвет изображения. ([подробнее |https://www.php.net/manual/en/function.imagecolortransparent])


convolution(array $matrix, float $div, float $offset): void .[method]
---------------------------------------------------------------------
Применяет матрицу свертки к изображению, используя заданный коэффициент и смещение. ([подробнее |https://www.php.net/manual/en/function.imageconvolution])

.[note]
Требует наличия *Bundled GD extension*, поэтому может работать не везде.


copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH): void .[method]
--------------------------------------------------------------------------------------------------
Копирует часть `$src` в изображение, начинающееся в координатах `$srcX`, `$srcY` с шириной `$srcW` и высотой `$srcH`. Определенная часть будет скопирована в координаты `$dstX` и `$dstY`. ([подробнее |https://www.php.net/manual/en/function.imagecopy])


copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
---------------------------------------------------------------------------------------------------------------------
Копирует часть `$src` в изображение, начинающееся в координатах `$srcX`, `$srcY` с шириной `$srcW` и высотой `$srcH`. Определенная часть будет скопирована в координаты `$dstX` и `$dstY`. ([подробнее |https://www.php.net/manual/en/function.imagecopymerge])


copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
-------------------------------------------------------------------------------------------------------------------------
Копирует часть `$src` в изображение, начинающееся в координатах `$srcX`, `$srcY` с шириной `$srcW` и высотой `$srcH`. Определенная часть будет скопирована в координаты `$dstX` и `$dstY`.

Эта функция идентична `copyMerge()`, за исключением того, что она сохраняет исходный оттенок при объединении, преобразуя целевые пиксели в оттенки серого перед операцией копирования. ([подробнее |https://www.php.net/manual/en/function.imagecopymergegray])


copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
---------------------------------------------------------------------------------------------------------------------------------
Копирует прямоугольную часть одного изображения в другое изображение, плавно интерполируя значения пикселей так, чтобы при уменьшении размера изображение сохраняло высокую четкость.

Другими словами, `copyResampled()` берет прямоугольную область из `$src` шириной `$srcW` и высотой `$srcH` в позиции (`$srcX`, `$srcY`) и помещает ее в прямоугольную область изображения шириной `$dstW` и высотой `$dstH` в позиции (`$dstX`, `$dstY`).

Если координаты источника и назначения, ширина и высота отличаются, фрагмент изображения растягивается или сжимается соответственно. Координаты относятся к левому верхнему углу. Эту функцию можно использовать для копирования областей одного и того же изображения, но если области перекрываются, результаты не будут предсказуемыми. ([подробнее |https://www.php.net/manual/en/function.imagecopyresampled])


copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
-------------------------------------------------------------------------------------------------------------------------------
Копирует прямоугольную часть одного изображения на другое изображение. Другими словами, `copyResized()` получает прямоугольную область из `$src` шириной `$srcW` и высотой `$srcH` в позиции (`$srcX`, `$srcY`) и помещает ее в прямоугольную область изображения шириной `$dstW` ] и высотой `$dstH` в позиции (`$dstX`, `$dstY`).

Если координаты источника и назначения, ширина и высота отличаются, фрагмент изображения растягивается или сжимается соответственно. Координаты относятся к левому верхнему углу. Эту функцию можно использовать для копирования областей одного и того же изображения, но если области перекрываются, результаты не будут предсказуемыми. ([подробнее |https://www.php.net/manual/en/function.imagecopyresized])


crop(int|string $left, int|string $top, int|string $width, int|string $height): Image .[method]
-----------------------------------------------------------------------------------------------
Обрезает изображение до заданной прямоугольной области. Размеры могут быть указаны как целые числа в пикселях или строки в процентах (например, `'50%'`).


cropAuto(int $mode=-1, float $threshold=.5, int $color=-1): Image .[method]
---------------------------------------------------------------------------
Автоматическое кадрирование изображения в соответствии с заданным `$mode`. ([подробнее |https://www.php.net/manual/en/function.imagecropauto])


ellipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------
Рисует эллипс с центром в заданных координатах. ([подробнее |https://www.php.net/manual/en/function.imageellipse])


fill(int $x, int $y, int $color): void .[method]
------------------------------------------------
Заполняет область, начинающуюся в заданной координате (слева вверху 0, 0), заданным `$color`. ([подробнее |https://www.php.net/manual/en/function.imagefill])


filledArc(int $cx, int $cy, int $w, int $h, int $s, int $e, int $color, int $style): void .[method]
---------------------------------------------------------------------------------------------------
Рисует неполную дугу с центром в заданных координатах. ([подробнее |https://www.php.net/manual/en/function.imagefilledarc])


filledEllipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------------
Рисует эллипс с центром в заданных координатах. ([подробнее |https://www.php.net/manual/en/function.imagefilledellipse])


filledPolygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------------
Создает заполненный многоугольник на изображении. ([подробнее |https://www.php.net/manual/en/function.imagefilledpolygon])


filledRectangle(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
-------------------------------------------------------------------------------
Создает прямоугольник, заполненный `$color` на изображении, начиная с точки 1 и заканчивая точкой 2. Точка 0, 0 - левый верхний угол изображения. ([подробнее |https://www.php.net/manual/en/function.imagefilledrectangle])


fillToBorder(int $x, int $y, int $border, int $color): void .[method]
---------------------------------------------------------------------
Создает заливку, цвет границы которой определяется `$border`. Начальная точка заливки - `$x`, `$y` (левый верхний угол - 0, 0), а область заливается цветом `$color`. ([подробнее |https://www.php.net/manual/en/function.imagefilltoborder])


filter(int $filtertype, int ...$args): void .[method]
-----------------------------------------------------
Применяет заданный фильтр `$filtertype` к изображению. ([подробнее |https://www.php.net/manual/en/function.imagefilter])


flip(int $mode): void .[method]
-------------------------------
Инвертирует изображение по заданному адресу `$mode`. ([подробнее |https://www.php.net/manual/en/function.imageflip])


ftText(int $size, int $angle, int $x, int $y, int $col, string $fontFile, string $text, array $extrainfo=null): array .[method]
-------------------------------------------------------------------------------------------------------------------------------
Пишите текст на изображении, используя шрифты FreeType 2. ([подробнее |https://www.php.net/manual/en/function.imagefttext])


gammaCorrect(float $inputgamma, float $outputgamma): void .[method]
-------------------------------------------------------------------
Применить гамма-коррекцию к изображению относительно входной и выходной гаммы. ([подробнее |https://www.php.net/manual/en/function.imagegammacorrect])


getClip(): array .[method]
--------------------------
Возвращает текущий обрез, т.е. область, за пределами которой не будут рисоваться пиксели. ([подробнее |https://www.php.net/manual/en/function.imagegetclip])


getHeight(): int .[method]
--------------------------
Возвращает высоту изображения.


getImageResource(): resource|GdImage .[method]
----------------------------------------------
Возвращает исходный ресурс.


getWidth(): int .[method]
-------------------------
Возвращает ширину изображения.


interlace(int $interlace=null): int .[method]
---------------------------------------------
Включение или выключение режима чересстрочной развертки. Если установлен чересстрочный режим и изображение сохраняется в формате JPEG, оно будет сохранено как прогрессивный JPEG. ([подробнее |https://www.php.net/manual/en/function.imageinterlace])


isTrueColor(): bool .[method]
-----------------------------
Определите, является ли изображение truecolor. ([подробнее |https://www.php.net/manual/en/function.imageistruecolor])


layerEffect(int $effect): void .[method]
----------------------------------------
Установите флаг альфа-смешения для использования эффектов наслоения. ([подробнее |https://www.php.net/manual/en/function.imagelayereffect])


line(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
--------------------------------------------------------------------
Проводит линию между двумя заданными точками. ([подробнее |https://www.php.net/manual/en/function.imageline])


openPolygon(array $points, int $numPoints, int $color): void .[method]
----------------------------------------------------------------------
Рисует открытый многоугольник на изображении. В отличие от `polygon()`, между последней и первой точкой не проводится линия. ([подробнее |https://www.php.net/manual/en/function.imageopenpolygon])


paletteCopy(Image $source): void .[method]
------------------------------------------
Копирует палитру с сайта `$source` в изображение. ([подробнее |https://www.php.net/manual/en/function.imagepalettecopy])


paletteToTrueColor(): void .[method]
------------------------------------
Преобразует изображение на основе палитры в полноцветное изображение. ([подробнее |https://www.php.net/manual/en/function.imagepalettetotruecolor])


place(Image $image, int|string $left=0, int|string $top=0, int $opacity=100): Image .[method]
---------------------------------------------------------------------------------------------
Копирует `$image` в изображение по координатам `$left` и `$top`. Координаты могут быть указаны как целые числа в пикселях или строки в процентах (например, `'50%'`).


polygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------
Создает многоугольник на изображении. ([подробнее |https://www.php.net/manual/en/function.imagepolygon])


rectangle(int $x1, int $y1, int $x2, int $y2, int $col): void .[method]
-----------------------------------------------------------------------
Создает прямоугольник по заданным координатам. ([подробнее |https://www.php.net/manual/en/function.imagerectangle])


resize(int|string $width, int|string $height, int $flags=Image::OrSmaller): Image .[method]
-------------------------------------------------------------------------------------------
Изменение размеров изображения, [дополнительная информация |#Image-Resize]. Размеры могут быть указаны как целые числа в пикселях или строки в процентах (например, `'50%'`).


resolution(int $resX=null, int $resY=null): mixed .[method]
-----------------------------------------------------------
Устанавливает или возвращает разрешение изображения в DPI (точках на дюйм). Если ни один из дополнительных параметров не указан, текущее разрешение возвращается в виде индексированного поля. Если указано только `$resX`, то горизонтальное и вертикальное разрешение устанавливается на это значение. Если указаны оба дополнительных параметра, горизонтальное и вертикальное разрешения устанавливаются на эти значения.

Разрешение используется в качестве метаинформации только при чтении и записи изображений в форматы, поддерживающие такую информацию (в настоящее время это PNG и JPEG). Это не влияет ни на какие операции рисования. Разрешение новых изображений по умолчанию составляет 96 DPI. ([подробнее |https://www.php.net/manual/en/function.imageresolution])


rotate(float $angle, int $backgroundColor): Image .[method]
-----------------------------------------------------------
Поворачивает изображение на указанное значение `$angle` в градусах. Центром вращения является центр изображения, и повернутое изображение может иметь размеры, отличные от размеров исходного изображения. ([подробнее |https://www.php.net/manual/en/function.imagerotate])

.[note]
Требует наличия *Bundled GD extension*, поэтому может работать не везде.


save(string $file, int $quality=null, int $type=null): void .[method]
---------------------------------------------------------------------
Сохраняет изображение в файл.

Качество сжатия находится в диапазоне 0...100 для JPEG (по умолчанию 85) и WEBP (по умолчанию 80) и 0...9 для PNG (по умолчанию 9). Если тип не очевиден из расширения файла, вы можете указать его с помощью одной из констант `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`.


saveAlpha(bool $saveflag): void .[method]
-----------------------------------------
Устанавливает флаг сохранения полной информации альфа-канала (в отличие от монохромной прозрачности) при сохранении изображений PNG.

Для сохранения альфа-канала альфа-квантование должно быть отключено (`alphaBlending(false)`). ([подробнее |https://www.php.net/manual/en/function.imagesavealpha])


scale(int $newWidth, int $newHeight=-1, int $mode=IMG_BILINEAR_FIXED): Image .[method]
--------------------------------------------------------------------------------------
Масштабирование изображения с использованием заданного алгоритма интерполяции. ([подробнее |https://www.php.net/manual/en/function.imagescale])


send(int $type=Image::JPEG, int $quality=null): void .[method]
--------------------------------------------------------------
Выводит изображение в браузер.

Качество сжатия находится в диапазоне 0...100 для JPEG (по умолчанию 85) и WEBP (по умолчанию 80) и 0...9 для PNG (по умолчанию 9). Тип является одной из констант `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`.


setBrush(Image $brush): void .[method]
--------------------------------------
Устанавливает изображение кисти, которое будет использоваться во всех функциях рисования линий (например, `line()` и `polygon()`) при рисовании специальными цветами IMG_COLOR_BRUSHED или IMG_COLOR_STYLEDBRUSHED. ([подробнее |https://www.php.net/manual/en/function.imagesetbrush])


setClip(int $x1, int $y1, int $x2, int $y2): void .[method]
-----------------------------------------------------------
Устанавливает текущий обрез, т.е. область, за пределами которой не будут рисоваться пиксели. ([подробнее |https://www.php.net/manual/en/function.imagesetclip])


setInterpolation(int $method=IMG_BILINEAR_FIXED): void .[method]
----------------------------------------------------------------
Задает метод интерполяции, который влияет на методы `rotate()` и `affine()`. ([подробнее |https://www.php.net/manual/en/function.imagesetinterpolation])


setPixel(int $x, int $y, int $color): void .[method]
----------------------------------------------------
Рисует пиксель в указанной координате. ([подробнее |https://www.php.net/manual/en/function.imagesetpixel])


setStyle(array $style): void .[method]
--------------------------------------
Задает стиль, который будет использоваться всеми функциями рисования линий (например, `line()` и `polygon()`) при рисовании специальным цветом IMG_COLOR_STYLED или линий изображения цветом IMG_COLOR_STYLEDBRUSHED. ([подробнее |https://www.php.net/manual/en/function.imagesetstyle])


setThickness(int $thickness): void .[method]
--------------------------------------------
Устанавливает толщину линий при рисовании прямоугольников, многоугольников, дуг и т.д. На сайте `$thickness` пикселей. ([подробнее |https://www.php.net/manual/en/function.imagesetthickness])


setTile(Image $tile): void .[method]
------------------------------------
Устанавливает изображение плитки, которое будет использоваться во всех функциях заполнения региона (например, `fill()` и `filledPolygon()`) при заполнении специальным цветом IMG_COLOR_TILED.

Плитка - это изображение, используемое для заполнения области повторяющимся рисунком. В качестве плитки можно использовать любое изображение, а задав индекс прозрачного цвета изображения плитки с помощью `colorTransparent()`, можно создать плитку, в которой будут просвечивать определенные части нижележащего региона. ([подробнее |https://www.php.net/manual/en/function.imagesettile])


sharpen(): Image .[method]
--------------------------
Повышает резкость изображения.

.[note]
Требует наличия *Bundled GD extension*, поэтому может работать не везде.


string(int $font, int $x, int $y, string $str, int $col): void .[method]
------------------------------------------------------------------------
Выводит строку по заданным координатам. ([подробнее |https://www.php.net/manual/en/function.imagestring])


stringUp(int $font, int $x, int $y, string $s, int $col): void .[method]
------------------------------------------------------------------------
Выводит строку по вертикали в заданных координатах. ([подробнее |https://www.php.net/manual/en/function.imagestringup])


toString(int $type=Image::JPEG, int $quality=null): string .[method]
--------------------------------------------------------------------
Сохраняет изображение в строке.

Качество сжатия находится в диапазоне 0...100 для JPEG (по умолчанию 85) и WEBP (по умолчанию 80) и 0...9 для PNG (по умолчанию 9). Тип - это одна из констант `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` и `Image::BMP`.


trueColorToPalette(bool $dither, int $ncolors): void .[method]
--------------------------------------------------------------
Преобразует truecolor изображение в палитру. ([подробнее |https://www.php.net/manual/en/function.imagetruecolortopalette])


ttfText(int $size, int $angle, int $x, int $y, int $color, string $fontfile, string $text): array .[method]
-----------------------------------------------------------------------------------------------------------
Печатает заданный текст в изображение с использованием шрифтов TrueType. ([подробнее |https://www.php.net/manual/en/function.imagettftext])
