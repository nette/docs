Konfigurace
***********

Všechny příklady předpokládají vytvořený alias:

```php
use Tracy\Debugger;
```


Logování chyb
-------------

```php
$logger = Debugger::getLogger();

// e-mail, na který se posílají notifikace, že došlo k chybě
$logger->email = 'dev@example.com';      // (string|string[]) výchozí je nenastaveno

// odesílatel e-mailu
$logger->fromEmail = 'me@example.com';   // (string) výchozí je nenastaveno

// rutina zajišťující odeslání emailu
$logger->mailer = ...;                   // (callable) výchozí je odesílání funkcí mail()

// po jaké nejkratší době odeslat další email?
$logger->emailSnooze = ...;              // (string) výchozí je '2 days'

// pro jaké úrovně chyb se loguje i BlueScreen?
Debugger::$logSeverity = [E_WARNING, E_NOTICE];  // výchozí je []
```


Chování `dump()`
----------------

```php
// maximální délka řetězce
Debugger::$maxLength = 150;              // (int) výchozí dle verze Tracy

// maximální hloubka zanoření
Debugger::$maxDepth = 10;                // (int) výchozí dle verze Tracy

// skrýt hodnoty těchto klíčů (od Tracy 2.8)
Debugger::$keysToHide = ['password', ...];  // (string[]) výchozí je []

// vizuální téma (od Tracy 2.8)
Debugger::$dumpTheme = 'dark';           // (light|dark) výchozí je 'light'

// zobrazit místo, kde byla volána funkce dump()?
Debugger::$showLocation = ...;           // (bool) výchozí dle verze Tracy
```


Ostatní
-------

```php
// ve vývojovém režimu zobrazí chyby typu notice nebo warning jako BlueScreen
Debugger::$strictMode = ...;             // (bool) výchozí je true

// zobrazit umlčené (@) chybové hlášky?
Debugger::$scream = ...;                 // (bool) výchozí je false

// formát odkazu pro otevření v editoru
Debugger::$editor = ....;                // (string) výchozí je 'editor://open/?file=%file&line=%line'

// cesta k šabloně s vlastní stránkou pro chybu 500
Debugger::$errorTemplate = ...;          // (string) výchozí je nenastaveno

// zobrazit Tracy Bar?
Debugger::$showBar = ...;                // (bool) výchozí je true

Debugger::$editorMapping = [
	// originál => nová
	'/var/www/html' => '/data/web',
	'/home/web' => '/srv/html',
];
```


Nette Framework
---------------

Pokud používáte Nette Framework, můžete konfigurovat Tracy a přidávat nové panely do Tracy Bar také pomocí [konfiguračního souboru|doc:configuring#tracy-debugger].
Rozdíl je v tom, že nastavení se aplikují teprve po vytvoření DI kontejneru, takže chyby vzniklé předtím nemohou reflektovat.
