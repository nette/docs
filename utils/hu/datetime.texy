Dátum és idő
************

.[perex]
[api:Nette\Utils\DateTime] egy osztály a natív [php:DateTime] kiterjesztése.

Telepítés:

```shell
composer require nette/utils
```

Minden példa feltételezi, hogy a következő osztály alias definiálva van:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
DateTime objektumot hoz létre egy karakterláncból, UNIX időbélyegből vagy más [php:DateTimeInterface] objektumból. Ha a dátum és az idő érvénytelen, a `Exception` üzenetet dobja.

```php
DateTime::from(1138013640); // creates a DateTime from the UNIX timestamp with a default timezamp
DateTime::from(42); // creates a DateTime from the current time plus 42 seconds
DateTime::from('1994-02-26 04:15:32'); // creates a DateTime based on a string
DateTime::from('1994-02-26'); // create DateTime by date, time will be 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
DateTime objektumot hoz létre, vagy `Nette\InvalidArgumentException` kivételt dob, ha a dátum és az idő érvénytelen.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, string|\DateTimeZone $timezone=null): DateTime|false .[method]
--------------------------------------------------------------------------------------------------------------------
Kiterjeszti a [DateTime::createFromFormat() |https://www.php.net/manual/en/datetime.createfromformat.php] funkciót az időzóna stringként történő megadásának lehetőségével.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London'); // create with custom timezone
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Másolatot készít egy módosított időponttal.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Visszaadja a dátumot és az időt a `Y-m-d H:i:s` formátumban.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


JsonSerializable implementálása .[#toc-implements-jsonserializable]
-------------------------------------------------------------------
Visszaadja a dátumot és az időt ISO 8601 formátumban, amelyet például JavaScriptben használnak.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
