Slikovne funkcije
*****************

.[perex]
Razred [api:Nette\Utils\Image] poenostavlja manipulacijo slik, kot so spreminjanje velikosti, obrezovanje, ostrenje, risanje ali združevanje več slik.

PHP ima obsežen nabor funkcij za obdelavo slik. Vendar pa vmesnik API ni preveč prijeten. Ne bi bil Neat Framework, če bi pripravil seksi API.

Namestitev:

```shell
composer require nette/utils
```

Naslednji primeri predpostavljajo, da je definiran naslednji vzdevek razreda:

```php
use Nette\Utils\Image;
```


Ustvarjanje slike .[#toc-creating-an-image]
===========================================

Ustvarili bomo novo pravo barvno sliko, na primer z dimenzijami 100 × 200:

```php
$image = Image::fromBlank(100, 200);
```

Po želji lahko določite barvo ozadja (privzeto je črna):

```php
$image = Image::fromBlank(100, 200, Image::rgb(125, 0, 0));
```

Sliko lahko naložimo iz datoteke:

```php
$image = Image::fromFile('nette.jpg');
```

Potrebujete zaznati format slike pri nalaganju? Metoda vrne format v drugem parametru:

```php
$image = Image::fromFile('nette.jpg', $type);
// $type je Image::JPEG, Image::PNG, Image::GIF, Image::WEBP ali Image::BMP
```

Odkrivanje brez obremenitve se izvede s pomočjo `Image::detectTypeFromFile()`, ki ga je mogoče uporabiti.


Shranjevanje slike .[#toc-save-the-image]
=========================================

Sliko lahko shranite v datoteko:

```php
$image->save('resampled.jpg');
```

Kakovost stiskanja lahko določimo v območju 0..100 za JPEG (privzeto 85) in WEBP (privzeto 80) ter 0..9 za PNG (privzeto 9):

```php
$image->save('resampled.jpg', 80); // JPEG, kakovost 80%
```

Če format ni razviden iz končnice datoteke, ga lahko določite z eno od konstant `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`:

```php
$image->save('resampled.tmp', null, Image::JPEG);
```

Sliko lahko namesto na disk zapišete v spremenljivko:

```php
$data = $image->toString(Image::JPEG, 80); // JPEG, kakovost 80%
```

ali pošljete neposredno brskalniku z ustreznim glavo HTTP `Content-Type`:

```php
// pošilja glavo Content-Type: image/png
$image->send(Image::PNG);
```


Spreminjanje velikosti slike .[#toc-image-resize]
=================================================

Pogosta operacija je spreminjanje velikosti slike. Trenutne dimenzije se vrnejo z metodama `getWidth()` in `getHeight()`.

Za spreminjanje velikosti se uporablja metoda `resize()`. To je primer sorazmerne spremembe velikosti, tako da ne presega 500 × 300 pikslov (širina bo točno 500 pikslov ali višina bo točno 300 pikslov, ena od dimenzij se izračuna za ohranitev razmerja stranic):

```php
$image->resize(500, 300);
```

Nastavite lahko samo eno dimenzijo, druga pa bo izračunana:

```php
$image->resize(500, null); // širina 500px, višina auto

$image->resize(null, 300); // širina auto, višina 300px
```

Vsako dimenzijo lahko določite v odstotkih:

```php
$image->resize('75%', 300); // 75% × 300px
```

Na obnašanje spletne strani `resize` lahko vplivate z naslednjimi zastavicami. Vsi razen `Image::Stretch` ohranijo razmerje stranic.

|---------------------------------------------------------------------------------------
| Zastava | Opis
|---------------------------------------------------------------------------------------
| `Image::OrSmaller` (privzeto) | dobljene dimenzije bodo manjše ali enake, kot je določeno
| `Image::OrBigger` | zapolni ciljno območje in ga po možnosti razširi v eno smer
| `Image::Cover` | zapolni celotno območje in obreže, kar ga presega
| `Image::ShrinkOnly` | samo zmanjša velikost (ne razširi majhne slike)
| `Image::Stretch` | ne ohrani razmerja stranic


Zastave se posredujejo kot tretji argument funkcije:

```php
$image->resize(500, 300, Image::OrBigger);
```

Zastave je mogoče kombinirati:

```php
$image->resize(500, 300, Image::ShrinkOnly | Image::Stretch);
```

Slike lahko obrnete navpično ali vodoravno tako, da eno od dimenzij (ali obe) določite kot negativno število:

```php
$flipped = $image->resize(null, '-100%'); // flip vertikalno

$flipped = $image->resize('-100%', '-100%'); // obračanje za 180°

$flipped = $image->resize(-125, 500); // spreminjanje velikosti in obračanje v vodoravni smeri
```

Ko sliko zmanjšamo, jo lahko izboljšamo z ostrenjem:

```php
$image->sharpen();
```


Obrezovanje .[#toc-cropping]
============================

Metoda `crop()` se uporablja za pridelavo:

```php
$image->crop($left, $top, $width, $height);
```

Tako kot pri `resize()` lahko vse vrednosti navedete v odstotkih. Odstotki za `$left` in `$top` so izračunani iz preostalega prostora, podobno kot pri lastnosti CSS `background-position`:

```php
$image->crop('100%', '50%', '80%', '80%');
```

[* crop.svg *]


Sliko lahko tudi samodejno obrežete, npr. obrežete črne robove:

```php
$image->cropAuto(IMG_CROP_BLACK);
```

Metoda `cropAuto()` je objektna enkapsulacija funkcije `imagecropauto()`, za več informacij si oglejte [njeno dokumentacijo |https://www.php.net/manual/en/function.imagecropauto].


Risanje in urejanje .[#toc-drawing-and-editing]
===============================================

Lahko rišete, pišete, uporabljate vse funkcije PHP za delo s slikami, kot je [imagefilledellipse() |https://www.php.net/manual/en/function.imagefilledellipse.php], vendar v objektnem slogu:

```php
$image->filledEllipse($cx, $cy, $width, $height, Image::rgb(255, 0, 0, 63));
```

Glejte [Pregled metod |#Overview of Methods].


Združitev več slik .[#toc-merge-multiple-images]
================================================

V sliko lahko preprosto vstavite drugo sliko:

```php
$logo = Image::fromFile('logo.png');
$blank = Image::fromBlank(320, 240, Image::rgb(52, 132, 210));

// koordinate lahko nastavite tudi v odstotkih.
$blank->place($logo, '80%', '80%'); // v desnem spodnjem kotu
```

Pri lepljenju se upošteva kanal alfa, poleg tega lahko vplivamo na prosojnost vstavljene slike (ustvarili bomo tako imenovani vodni znak):

```php
$blank->place($image, '80%', '80%', 25); // preglednost je 25 %.
```

Tak API je res užitek uporabljati, kajne?


Pregled metod .[#toc-overview-of-methods]
=========================================


static fromBlank(int $width, int $height, array $color=null): Image .[method]
-----------------------------------------------------------------------------
Ustvari novo pravo barvno sliko danih dimenzij. Privzeta barva je črna.


static fromFile(string $file, int &$detectedFormat=null): Image .[method]
-------------------------------------------------------------------------
Prebere sliko iz datoteke in vrne njeno vrsto v `$detectedFormat`. Podprte vrste so `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`.


static fromString(string $s, int &$detectedFormat=null): Image .[method]
------------------------------------------------------------------------
Preberi sliko iz niza in vrne njeno vrsto v `$detectedFormat`. Podprte vrste so `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`.


static rgb(int $red, int $green, int $blue, int $transparency=0): array .[method]
---------------------------------------------------------------------------------
Ustvari barvo, ki jo lahko uporabite v drugih metodah, kot so `ellipse()`, `fill()` in tako naprej.


static typeToExtension(int $type): string .[method]
---------------------------------------------------
Vrne končnico datoteke za podano konstanto `Image::XXX`.


static typeToMimeType(int $type): string .[method]
--------------------------------------------------
Vrne vrsto mime za podano konstanto `Image::XXX`.


static extensionToType(string $extension): int .[method]
--------------------------------------------------------
Vrne vrsto slike kot konstanto `Image::XXX` glede na končnico datoteke.


static detectTypeFromFile(string $file, int &$width=null, int &$height=null): ?int .[method]
--------------------------------------------------------------------------------------------
Vrne vrsto slikovne datoteke kot konstanto `Image::XXX`, v parametrih `$width` in `$height` pa tudi njene dimenzije.


static detectTypeFromString(string $s, int &$width=null, int &$height=null): ?int .[method]
-------------------------------------------------------------------------------------------
Vrne vrsto slike iz niza kot konstanto `Image::XXX`, v parametrih `$width` in `$height` pa tudi njene dimenzije.


affine(array $affine, array $clip=null): Image .[method]
--------------------------------------------------------
Vrne sliko, ki vsebuje afino transformirano sliko src z uporabo neobveznega območja obrezovanja. ([več |https://www.php.net/manual/en/function.imageaffine]).


affineMatrixConcat(array $m1, array $m2): array .[method]
---------------------------------------------------------
Vrne združitev dveh matrik afine transformacije, kar je uporabno, če je treba na isto sliko uporabiti več transformacij naenkrat. ([več |https://www.php.net/manual/en/function.imageaffinematrixconcat])


affineMatrixGet(int $type, mixed $options=null): array .[method]
----------------------------------------------------------------
Vrne matriko afine transformacije. ([več |https://www.php.net/manual/en/function.imageaffinematrixget])


alphaBlending(bool $on): void .[method]
---------------------------------------
Omogoča dva različna načina risanja na slike v pravih barvah. V načinu mešanja komponenta kanala alfa barve, ki se posreduje vsem funkcijam risanja, kot je `setPixel()`, določa, koliko osnovne barve naj se preliva skozi. Zato samodejno zmeša obstoječo barvo na tej točki z barvo risbe in rezultat shrani v sliko. Nastali piksel je neprosojen. V načinu brez mešanja se barva risbe dobesedno kopira z informacijami kanala alfa in nadomesti ciljno piko. Način mešanja ni na voljo pri risanju na slike iz palete. ([več |https://www.php.net/manual/en/function.imagealphablending])


antialias(bool $on): void .[method]
-----------------------------------
Aktivirajte metode hitrega risanja z izravnavo za črte in žične poligone. Ne podpira sestavin alfa. Deluje z neposrednim mešanjem. Deluje samo s slikami v pravih barvah.

Uporaba izravnanih primitivov s prozorno barvo ozadja lahko privede do nepričakovanih rezultatov. Metoda mešanja uporablja barvo ozadja kot vse druge barve. Pomanjkanje podpore za komponento alfa ne omogoča metode za izravnavo na podlagi alfa. ([več |https://www.php.net/manual/en/function.imageantialias])


arc(int $x, int $y, int $w, int $h, int $start, int $end, int $color): void .[method]
-------------------------------------------------------------------------------------
Nariše lok kroga s središčem na danih koordinatah. ([več |https://www.php.net/manual/en/function.imagearc])


char(int $font, int $x, int $y, string $char, int $color): void .[method]
-------------------------------------------------------------------------
Nariše prvi znak `$char` na sliki z zgornjim levim delom na `$x`,`$y` (zgornji levi del je 0, 0) z barvo `$color`. ([več |https://www.php.net/manual/en/function.imagechar])


charUp(int $font, int $x, int $y, string $char, int $color): void .[method]
---------------------------------------------------------------------------
Nariše znak `$char` navpično na določeno koordinato na dani sliki. ([več |https://www.php.net/manual/en/function.imagecharup])


colorAllocate(int $red, int $green, int $blue): int .[method]
-------------------------------------------------------------
Vrne identifikator barve, ki predstavlja barvo, sestavljeno iz danih komponent RGB. Klicati ga je treba za ustvarjanje vsake barve, ki bo uporabljena v sliki. ([več |https://www.php.net/manual/en/function.imagecolorallocate])


colorAllocateAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
------------------------------------------------------------------------------
Obnaša se enako kot `colorAllocate()` z dodatkom parametra preglednosti `$alpha`. ([več |https://www.php.net/manual/en/function.imagecolorallocatealpha])


colorAt(int $x, int $y): int .[method]
--------------------------------------
Vrne indeks barve piksla na določenem mestu v sliki. Če je slika pravi barvni prikaz, ta funkcija vrne vrednost RGB te pike kot celo število. Za dostop do različnih vrednosti rdeče, zelene in modre komponente uporabite premikanje bitov in maskiranje: ([več |https://www.php.net/manual/en/function.imagecolorat])


colorClosest(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Vrne indeks barve v paleti slike, ki je "najbližja" določeni vrednosti RGB. "Razdalja" med želeno barvo in vsako barvo v paleti se izračuna, kot da bi vrednosti RGB predstavljale točke v tridimenzionalnem prostoru. ([več |https://www.php.net/manual/en/function.imagecolorclosest])


colorClosestAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Vrne indeks barve v paleti slike, ki je "najbližja" določeni vrednosti RGB in ravni `$alpha`. ([več |https://www.php.net/manual/en/function.imagecolorclosestalpha])


colorClosestHWB(int $red, int $green, int $blue): int .[method]
---------------------------------------------------------------
Pridobi indeks barve, ki je po odtenku, belini in črnini najbližja dani barvi. ([več |https://www.php.net/manual/en/function.imagecolorclosesthwb])


colorDeallocate(int $color): void .[method]
-------------------------------------------
Odstrani barvo, ki je bila prej dodeljena s `colorAllocate()` ali `colorAllocateAlpha()`. ([več |https://www.php.net/manual/en/function.imagecolordeallocate])


colorExact(int $red, int $green, int $blue): int .[method]
----------------------------------------------------------
Vrne indeks določene barve v paleti slike. ([več |https://www.php.net/manual/en/function.imagecolorexact])


colorExactAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
---------------------------------------------------------------------------
Vrne indeks določene barve+alfa v paleti slike. ([več |https://www.php.net/manual/en/function.imagecolorexactalpha])


colorMatch(Image $image2): void .[method]
-----------------------------------------
Barve različice slike na paleti se bolj približajo pravi barvni različici. ([več |https://www.php.net/manual/en/function.imagecolormatch])


colorResolve(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Vrne barvni indeks za zahtevano barvo, bodisi točno določeno barvo bodisi najbližjo možno alternativo. ([več |https://www.php.net/manual/en/function.imagecolorresolve])


colorResolveAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Vrne barvni indeks za zahtevano barvo, bodisi točno določeno barvo bodisi najbližjo možno alternativo. ([več |https://www.php.net/manual/en/function.imagecolorresolvealpha])


colorSet(int $index, int $red, int $green, int $blue): void .[method]
---------------------------------------------------------------------
To nastavi določen indeks v paleti na določeno barvo. ([več |https://www.php.net/manual/en/function.imagecolorset])


colorsForIndex(int $index): array .[method]
-------------------------------------------
Pridobi barvo za določen indeks. ([več |https://www.php.net/manual/en/function.imagecolorsforindex])


colorsTotal(): int .[method]
----------------------------
Vrne število barv v slikovni paleti ([več |https://www.php.net/manual/en/function.imagecolorstotal]).


colorTransparent(int $color=null): int .[method]
------------------------------------------------
Pridobi ali nastavi prozorno barvo na sliki. ([več |https://www.php.net/manual/en/function.imagecolortransparent])


convolution(array $matrix, float $div, float $offset): void .[method]
---------------------------------------------------------------------
Uporabi konvolucijsko matriko na sliki z uporabo danega koeficienta in odmika. ([več |https://www.php.net/manual/en/function.imageconvolution])

.[note]
Zahteva razširitev *Bundled GD extension*, zato ni gotovo, da bo delovala povsod.


copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH): void .[method]
--------------------------------------------------------------------------------------------------
Kopira del `$src` na sliko z začetkom na koordinatah `$srcX`, `$srcY` s širino `$srcW` in višino `$srcH`. Določeni del bo kopiran na koordinate `$dstX` in `$dstY`. ([več |https://www.php.net/manual/en/function.imagecopy])


copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
---------------------------------------------------------------------------------------------------------------------
Kopira del `$src` na sliko z začetkom na koordinatah `$srcX`, `$srcY` s širino `$srcW` in višino `$srcH`. Določeni del bo kopiran na koordinate `$dstX` in `$dstY`. ([več |https://www.php.net/manual/en/function.imagecopymerge])


copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
-------------------------------------------------------------------------------------------------------------------------
Kopira del `$src` na sliko z začetkom na koordinatah `$srcX`, `$srcY` s širino `$srcW` in višino `$srcH`. Določeni del bo kopiran na koordinate `$dstX` in `$dstY`.

Ta funkcija je enaka funkciji `copyMerge()`, le da pri združevanju ohrani odtenek vira tako, da ciljne piksle pred kopiranjem pretvori v sivo lestvico. ([več |https://www.php.net/manual/en/function.imagecopymergegray])


copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
---------------------------------------------------------------------------------------------------------------------------------
Kopira pravokotni del ene slike na drugo sliko in gladko interpolira vrednosti slikovnih pik, tako da zlasti pri zmanjšanju velikosti slike še vedno ohrani veliko jasnost.

Z drugimi besedami, `copyResampled()` vzame pravokotno območje iz `$src` širine `$srcW` in višine `$srcH` na položaju (`$srcX`,`$srcY`) in ga postavi v pravokotno območje slike širine `$dstW` in višine `$dstH` na položaj (`$dstX`,`$dstY`).

Če se izvorne in ciljne koordinate ter širine in višine razlikujejo, se fragment slike ustrezno raztegne ali skrči. Koordinate se nanašajo na zgornji levi kot. To funkcijo lahko uporabite za kopiranje območij znotraj iste slike, vendar bodo rezultati nepredvidljivi, če se območja prekrivajo. ([več |https://www.php.net/manual/en/function.imagecopyresampled])


copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
-------------------------------------------------------------------------------------------------------------------------------
Kopira pravokotni del ene slike na drugo sliko. Z drugimi besedami, `copyResized()` vzame pravokotno območje iz `$src` širine `$srcW` in višine `$srcH` na položaju (`$srcX`,`$srcY`) in ga postavi v pravokotno območje slike širine `$dstW` in višine `$dstH` na položaj (`$dstX`,`$dstY`).

Če se izvorne in ciljne koordinate ter širine in višine razlikujejo, se fragment slike ustrezno raztegne ali skrči. Koordinate se nanašajo na zgornji levi kot. To funkcijo lahko uporabite za kopiranje območij znotraj iste slike, vendar bodo rezultati nepredvidljivi, če se območja prekrivajo. ([več |https://www.php.net/manual/en/function.imagecopyresized])


crop(int|string $left, int|string $top, int|string $width, int|string $height): Image .[method]
-----------------------------------------------------------------------------------------------
Obreže sliko na podano pravokotno območje. Dimenzije lahko posredujete kot cela števila v pikslih ali kot nize v odstotkih (npr. `'50%'`).


cropAuto(int $mode=-1, float $threshold=.5, int $color=-1): Image .[method]
---------------------------------------------------------------------------
Samodejno obreže sliko v skladu z danim `$mode`. ([več |https://www.php.net/manual/en/function.imagecropauto])


ellipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------
Nariše elipso s središčem na določenih koordinatah. ([več |https://www.php.net/manual/en/function.imageellipse])


fill(int $x, int $y, int $color): void .[method]
------------------------------------------------
Izvede zapolnitev z zalivko, ki se začne na dani koordinati (levo zgoraj je 0, 0) z danim `$color` v sliki. ([več |https://www.php.net/manual/en/function.imagefill])


filledArc(int $cx, int $cy, int $w, int $h, int $s, int $e, int $color, int $style): void .[method]
---------------------------------------------------------------------------------------------------
Nariše delni lok s središčem na določeni koordinati na sliki. ([več |https://www.php.net/manual/en/function.imagefilledarc])


filledEllipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------------
Nariše elipso s središčem na določeni koordinati na sliki. ([več |https://www.php.net/manual/en/function.imagefilledellipse])


filledPolygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------------
Ustvari zapolnjen poligon v $sliki. ([več |https://www.php.net/manual/en/function.imagefilledpolygon])


filledRectangle(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
-------------------------------------------------------------------------------
Ustvari pravokotnik, zapolnjen s `$color` na sliki, ki se začne v točki 1 in konča v točki 2. 0, 0 je zgornji levi kot slike. ([več |https://www.php.net/manual/en/function.imagefilledrectangle])


fillToBorder(int $x, int $y, int $border, int $color): void .[method]
---------------------------------------------------------------------
Izvede zalivko, katere barva roba je določena s `$border`. Začetna točka za zapolnitev je `$x`, `$y` (levo zgoraj je 0, 0), območje pa je zapolnjeno z barvo `$color`. ([več |https://www.php.net/manual/en/function.imagefilltoborder])


filter(int $filtertype, int ...$args): void .[method]
-----------------------------------------------------
Na sliko uporabi dani filter `$filtertype`. ([več |https://www.php.net/manual/en/function.imagefilter])


flip(int $mode): void .[method]
-------------------------------
Obrne sliko z uporabo danega `$mode`. ([več |https://www.php.net/manual/en/function.imageflip])


ftText(int $size, int $angle, int $x, int $y, int $col, string $fontFile, string $text, array $extrainfo=null): array .[method]
-------------------------------------------------------------------------------------------------------------------------------
Besedilo v sliko zapišite s pisavami FreeType 2. ([več |https://www.php.net/manual/en/function.imagefttext])


gammaCorrect(float $inputgamma, float $outputgamma): void .[method]
-------------------------------------------------------------------
Uporabi popravek gama za sliko, če sta podana vhodna in izhodna gama. ([več |https://www.php.net/manual/en/function.imagegammacorrect])


getClip(): array .[method]
--------------------------
Pridobi trenutni obrezovalni pravokotnik, tj. območje, zunaj katerega se ne bodo izrisale nobene piksle. ([več |https://www.php.net/manual/en/function.imagegetclip])


getHeight(): int .[method]
--------------------------
Vrne višino slike.


getImageResource(): resource|GdImage .[method]
----------------------------------------------
Vrne izvirni vir.


getWidth(): int .[method]
-------------------------
Vrne širino slike.


interlace(int $interlace=null): int .[method]
---------------------------------------------
Vklopi ali izklopi bit prepletanja. Če je nastavljen bit prepletanja in se slika uporablja kot slika JPEG, se slika ustvari kot progresivni JPEG. ([več |https://www.php.net/manual/en/function.imageinterlace])


isTrueColor(): bool .[method]
-----------------------------
Ugotovi, ali je slika prava barva. ([več |https://www.php.net/manual/en/function.imageistruecolor])


layerEffect(int $effect): void .[method]
----------------------------------------
Nastavite zastavico mešanja alfa, če želite uporabiti učinke plastenja. ([več |https://www.php.net/manual/en/function.imagelayereffect])


line(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
--------------------------------------------------------------------
Nariše črto med dvema danima točkama. ([več |https://www.php.net/manual/en/function.imageline])


openPolygon(array $points, int $numPoints, int $color): void .[method]
----------------------------------------------------------------------
Na sliko nariše odprt poligon. V nasprotju s spletno stranjo `polygon()` med zadnjo in prvo točko ni potegnjena črta. ([več |https://www.php.net/manual/en/function.imageopenpolygon])


paletteCopy(Image $source): void .[method]
------------------------------------------
Kopira paleto s spletne strani `$source` na sliko. ([več |https://www.php.net/manual/en/function.imagepalettecopy])


paletteToTrueColor(): void .[method]
------------------------------------
Pretvarja sliko na podlagi palete, ustvarjeno s funkcijami, kot je `create()`, v pravo barvno sliko, kot je `createtruecolor()`. ([več |https://www.php.net/manual/en/function.imagepalettetotruecolor])


place(Image $image, int|string $left=0, int|string $top=0, int $opacity=100): Image .[method]
---------------------------------------------------------------------------------------------
Kopira `$image` v sliko na koordinatah `$left` in `$top`. Koordinate lahko posredujete kot cela števila v pikslih ali kot nize v odstotkih (npr. `'50%'`).


polygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------
Ustvari poligon na sliki. ([več |https://www.php.net/manual/en/function.imagepolygon])


rectangle(int $x1, int $y1, int $x2, int $y2, int $col): void .[method]
-----------------------------------------------------------------------
Ustvari pravokotnik, ki se začne na določenih koordinatah. ([več |https://www.php.net/manual/en/function.imagerectangle])


resize(int|string $width, int|string $height, int $flags=Image::OrSmaller): Image .[method]
-------------------------------------------------------------------------------------------
Skaliranje slike, glejte [več informacij |#Image Resize]. Dimenzije lahko posredujete kot cela števila v pikslih ali kot nize v odstotkih (npr. `'50%'`).


resolution(int $resX=null, int $resY=null): mixed .[method]
-----------------------------------------------------------
Omogoča nastavitev in pridobitev ločljivosti slike v DPI (točkah na palec). Če ni podan nobeden od neobveznih parametrov, se trenutna ločljivost vrne kot indeksirano polje. Če je podan samo naslov `$resX`, se vodoravna in navpična ločljivost nastavita na to vrednost. Če sta podana oba neobvezna parametra, se vodoravna in navpična ločljivost nastavita na ti vrednosti.

Ločljivost se kot meta informacija uporablja le pri branju slik iz formatov, ki podpirajo tovrstne informacije (trenutno sta to formata PNG in JPEG), in pri zapisovanju v te formate. To ne vpliva na nobeno risanje. Privzeta ločljivost novih slik je 96 DPI. ([več |https://www.php.net/manual/en/function.imageresolution])


rotate(float $angle, int $backgroundColor): Image .[method]
-----------------------------------------------------------
Obrne sliko z uporabo danega `$angle` v stopinjah. Središče vrtenja je središče slike, zasukana slika pa ima lahko drugačne dimenzije kot izvirna slika. ([več |https://www.php.net/manual/en/function.imagerotate])

.[note]
Zahteva razširitev *Bundled GD extension*, zato ni gotovo, da bo delovala povsod.


save(string $file, int $quality=null, int $type=null): void .[method]
---------------------------------------------------------------------
Sliko shrani v datoteko.

Kakovost stiskanja je v območju 0..100 za JPEG (privzeto 85) in WEBP (privzeto 80) ter 0..9 za PNG (privzeto 9). Če vrsta ni razvidna iz končnice datoteke, jo lahko določite z eno od konstant `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`.


saveAlpha(bool $saveflag): void .[method]
-----------------------------------------
Nastavi zastavico, ki določa, ali naj se pri shranjevanju slik PNG ohranijo popolne informacije o kanalu alfa (v nasprotju z enobarvno prosojnostjo).

Če želite ohraniti kanal alfa, morate onemogočiti funkcijo alphablending (`alphaBlending(false)`). ([več |https://www.php.net/manual/en/function.imagesavealpha])


scale(int $newWidth, int $newHeight=-1, int $mode=IMG_BILINEAR_FIXED): Image .[method]
--------------------------------------------------------------------------------------
Skalira sliko z uporabo danega algoritma interpolacije. ([več |https://www.php.net/manual/en/function.imagescale])


send(int $type=Image::JPEG, int $quality=null): void .[method]
--------------------------------------------------------------
Izpiše sliko v brskalnik.

Kakovost stiskanja je v območju 0..100 za JPEG (privzeto 85) in WEBP (privzeto 80) ter 0..9 za PNG (privzeto 9). Vrsta je ena od konstant `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`.


setBrush(Image $brush): void .[method]
--------------------------------------
Nastavi sliko čopiča, ki jo uporabljajo vse funkcije za risanje črt (kot sta `line()` in `polygon()`) pri risanju s posebnimi barvami IMG_COLOR_BRUSHED ali IMG_COLOR_STYLEDBRUSHED. ([več |https://www.php.net/manual/en/function.imagesetbrush])


setClip(int $x1, int $y1, int $x2, int $y2): void .[method]
-----------------------------------------------------------
Nastavi trenutni pravokotnik za obrezovanje, tj. območje, zunaj katerega se piksli ne bodo izrisali. ([več |https://www.php.net/manual/en/function.imagesetclip])


setInterpolation(int $method=IMG_BILINEAR_FIXED): void .[method]
----------------------------------------------------------------
Nastavi metodo interpolacije, ki vpliva na metodi `rotate()` in `affine()`. ([več |https://www.php.net/manual/en/function.imagesetinterpolation])


setPixel(int $x, int $y, int $color): void .[method]
----------------------------------------------------
Nariše piksel na določeni koordinati. ([več |https://www.php.net/manual/en/function.imagesetpixel])


setStyle(array $style): void .[method]
--------------------------------------
Nastavi slog, ki ga bodo uporabljale vse funkcije za risanje črt (na primer `line()` in `polygon()`), ko bodo risale s posebno barvo IMG_COLOR_STYLED ali črte slik z barvo IMG_COLOR_STYLEDBRUSHED. ([več |https://www.php.net/manual/en/function.imagesetstyle])


setThickness(int $thickness): void .[method]
--------------------------------------------
Nastavi debelino črt, narisanih pri risanju pravokotnikov, mnogokotnikov, lokov itd., na `$thickness` pikslov. ([več |https://www.php.net/manual/en/function.imagesetthickness])


setTile(Image $tile): void .[method]
------------------------------------
Nastavi sliko ploščice, ki jo uporabljajo vse funkcije za zapolnitev območja (kot sta `fill()` in `filledPolygon()`) pri zapolnjevanju s posebno barvo IMG_COLOR_TILED.

Ploščica je slika, ki se uporablja za zapolnitev območja s ponavljajočim se vzorcem. Kot ploščico lahko uporabite katero koli sliko, z nastavitvijo indeksa prozorne barve slike ploščice s `colorTransparent()` pa lahko ustvarite ploščico, ki omogoča, da določeni deli osnovnega območja prosevajo. ([več |https://www.php.net/manual/en/function.imagesettile])


sharpen(): Image .[method]
--------------------------
Nekoliko izostri sliko.

.[note]
Zahteva razširitev *Bundled GD extension*, zato ni gotovo, da bo delovala povsod.


string(int $font, int $x, int $y, string $str, int $col): void .[method]
------------------------------------------------------------------------
Nariše niz na danih koordinatah. ([več |https://www.php.net/manual/en/function.imagestring])


stringUp(int $font, int $x, int $y, string $s, int $col): void .[method]
------------------------------------------------------------------------
Vertikalno nariše niz na danih koordinatah. ([več |https://www.php.net/manual/en/function.imagestringup])


toString(int $type=Image::JPEG, int $quality=null): string .[method]
--------------------------------------------------------------------
Izpiše sliko v niz.

Kakovost stiskanja je v območju 0..100 za JPEG (privzeto 85) in WEBP (privzeto 80) ter 0..9 za PNG (privzeto 9). Vrsta je ena od konstant `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` in `Image::BMP`.


trueColorToPalette(bool $dither, int $ncolors): void .[method]
--------------------------------------------------------------
Pretvori sliko truecolor v sliko palete. ([več |https://www.php.net/manual/en/function.imagetruecolortopalette])


ttfText(int $size, int $angle, int $x, int $y, int $color, string $fontfile, string $text): array .[method]
-----------------------------------------------------------------------------------------------------------
V sliko zapiše podano besedilo z uporabo pisav TrueType. ([več |https://www.php.net/manual/en/function.imagettftext])
