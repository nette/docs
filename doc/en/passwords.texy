Password Hashing
****************

.[perex]
To manage security of our users, we never save their passwords in plaintext format, but we rather save the password´s fingerprint (eg. hash). There is no way to find out the real password from the password´s fingerprint. To create the fingerprint we have to use a save algorithm. Class [Nette\Security\Passwords |api:] will help us with this.

Following examples expect this alias:

/--php
use Nette\Security\Passwords;
\--


__construct(int $algo = PASSWORD_DEFAULT, array $options=null): string .[method]
================================================================================

Will generate password´s hash using a modern algorithm. We can set the `cost` parameter of range 4-31, which sets the number of iterations the algorithm takes to run. If we omit this parameter, a default value of `10` will be used.

The `cost` parameter is an exponent of function 2^n. If we set its value too high, the hash computation will take too long. By using the highest value of 31 the computation takes approximately 64 hours.

/--php
$passwords = new Passwords(PASSWORD_BCRYPT, ['cost' => 12]); // Hashes the password using 12 iterations of bcrypt algorithm
\--

hash(string $passwords, array $options=null): string .[method]
==============================================================

This method generates password´s hash using a modern algorithm.

/--php
$hash = $passwords->hash($password); // Hashes the password
\--

verify(string $password, string $hash): bool .[method]
======================================================

This method finds out, if given password matches given fingerprint (hash).

/--php
if ($passwords->verify($password, $hash)) {
	// This will run, if password matches the fingerprint (hash)
} else {
	// This will run, if password does not match the fingerprint (hash)
}
\--

needsRehash(string $password, array $options=null): bool .[method]
==================================================================

This method finds out, if the hash matches given options. We can set the `cost` parameter of range 4-31, which sets the number of iterations the algorithm takes to run. If we omit this parameter, a default value of `10` will be used.

/--php
if ($passwords->needsRehash($hash)) {
	// This will run, if the password needs to be rehashed
}
\--

{{composer: nette/security}}
