Souborový systém
****************

.[perex]
[api:Nette\Utils\FileSystem] je statická třída s užitečnými funkcemi pro práci se souborovým systémem. Jednou z výhod oproti nativním PHP funkcím je, že v případě chyb vyhazují výjimky.


Instalace:

```shell
composer require nette/utils
```

Následující příklady předpokládají vytvořený alias:

```php
use Nette\Utils\FileSystem;
```


Manipulace
==========


copy(string $origin, string $target, bool $overwrite=true): void .[method]
--------------------------------------------------------------------------

Zkopíruje soubor nebo celý adresář. Ve výchozím nastavení přepisuje existující soubory a adresáře. S parametrem `$overwrite` nastaveným na hodnotou `false` vyvolá výjimku `Nette\InvalidStateException`, pokud cílový soubor nebo adresář `$target` existuje. Při chybě vyvolá výjimku `Nette\IOException`.

```php
FileSystem::copy('/path/to/source', '/path/to/dest', overwrite: true);
```


createDir(string $dir, int $mode=0777): void .[method]
------------------------------------------------------

Vytvoří adresář, pokud neexistuje, včetně nadřazených adresářů. Při chybě vyvolá výjimku `Nette\IOException`.

```php
FileSystem::createDir('/path/to/dir');
```


delete(string $path): void .[method]
------------------------------------

Smaže soubor nebo celý adresář pokud existuje. Pokud adresář není prázdný, smaže nejprve jeho obsah. Při chybě vyvolá výjimku `Nette\IOException`.

```php
FileSystem::delete('/path/to/fileOrDir');
```


makeWritable(string $path, int $dirMode=0777, int $fileMode=0666): void .[method]
---------------------------------------------------------------------------------

Nastaví oprávnění souboru na `$fileMode` nebo adresáři na `$dirMode`. Rekurzivně projde a nastaví oprávnění i celému obsahu adresáře.

```php
FileSystem::makeWritable('/path/to/fileOrDir');
```


read(string $file): string .[method]
------------------------------------

Vrátí obsah souboru `$file`. Při chybě vyvolá výjimku `Nette\IOException`.

```php
$content = FileSystem::read('/path/to/file');
```


rename(string $origin, string $target, bool $overwrite=true): void .[method]
----------------------------------------------------------------------------

Přejmenuje nebo přesune soubor či adresář `$origin`. Ve výchozím nastavení přepisuje existující soubory a adresáře. S parametrem `$overwrite` nastaveným na hodnotou `false` vyvolá výjimku `Nette\InvalidStateException`, pokud cílový soubor nebo adresář `$target` existuje. Při chybě vyvolá výjimku `Nette\IOException`.

```php
FileSystem::rename('/path/to/source', '/path/to/dest', overwrite: true);
```


write(string $file, string $content, int $mode=0666): void .[method]
--------------------------------------------------------------------

Zapíše řetězec `$content` do souboru `$file`. Při chybě vyvolá výjimku `Nette\IOException`.

```php
FileSystem::write('/path/to/file', $content);
```


Cesty
=====


isAbsolute(string $path): bool .[method]
----------------------------------------

Zjištuje, zda je cesta `$path` absolutní.

```php
FileSystem::isAbsolute('../backup'); // false
FileSystem::isAbsolute('/backup');   // true
FileSystem::isAbsolute('C:/backup'); // true
```


joinPaths(string ...$segments): string .[method]
------------------------------------------------
Spojí všechny segmenty cesty a výsledek normalizuje.

```php
FileSystem::joinPaths('a', 'b', 'file.txt'); // 'a/b/file.txt'
FileSystem::joinPaths('/a/', '/b/');         // '/a/b/'
FileSystem::joinPaths('/a/', '/../b');       // '/b'
```


normalizePath(string $path): string .[method]
---------------------------------------------
Normalizuje `..` a `.` a oddělovače adresářů v cestě na systémové.

```php
FileSystem::normalizePath('/file/.');        // '/file/'
FileSystem::normalizePath('\file\..');       // '/file'
FileSystem::normalizePath('/file/../..');    // '/..'
FileSystem::normalizePath('file/../../bar'); // '/../bar'
```
