Odgovor HTTP
************

.[perex]
Nette inkapsulira HTTP odgovor v objekte z razumljivim API-jem.

HTTP odgovor predstavlja objekt [api:Nette\Http\Response]. Če delate z Nette, ta objekt samodejno ustvari ogrodje in si ga lahko pustite predati s pomočjo [dependency injection |dependency-injection:passing-dependencies]. V presenterjih je dovolj le poklicati metodo `$this->getHttpResponse()`.

→ [Namestitev in zahteve |@home#Instalace]


Nette\Http\Response
===================

Objekt je za razliko od [Nette\Http\Request|request] spremenljiv (mutable), torej s pomočjo nastavitvenih metod lahko spreminjate stanje, torej npr. pošiljate glave. Ne pozabite, da morajo biti vse nastavitvene metode poklicane **pred pošiljanjem kakršnega koli izpisa.** Ali je bil izpis že poslan, pove metoda `isSent()`. Če vrača `true`, vsak poskus pošiljanja glave sproži izjemo `Nette\InvalidStateException`.


setCode(int $code, ?string $reason=null) .[method]
--------------------------------------------------
Spremeni [statusno kodo odgovora |https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10]. Zaradi boljše razumljivosti izvorne kode priporočamo, da za kodo namesto številk uporabljate [preddefinirane konstante |api:Nette\Http\IResponse].

```php
$httpResponse->setCode(Nette\Http\Response::S404_NotFound);
```


getCode(): int .[method]
------------------------
Vrača statusno kodo odgovora.


isSent(): bool .[method]
------------------------
Vrača, ali so bile glave že poslane s strežnika v brskalnik, in torej ni več mogoče pošiljati glav ali spreminjati statusne kode.


setHeader(string $name, string $value) .[method]
------------------------------------------------
Pošlje HTTP glavo in **prepiše** prej poslano glavo istega imena.

```php
$httpResponse->setHeader('Pragma', 'no-cache');
```


addHeader(string $name, string $value) .[method]
------------------------------------------------
Pošlje HTTP glavo in **ne prepiše** prej poslane glave istega imena.

```php
$httpResponse->addHeader('Accept', 'application/json');
$httpResponse->addHeader('Accept', 'application/xml');
```


deleteHeader(string $name) .[method]
------------------------------------
Izbriše prej poslano HTTP glavo.


getHeader(string $header): ?string .[method]
--------------------------------------------
Vrača poslano HTTP glavo ali `null`, če takšna ne obstaja. Parameter je neobčutljiv na velikost črk.

```php
$pragma = $httpResponse->getHeader('Pragma');
```


getHeaders(): array .[method]
-----------------------------
Vrača vse poslane HTTP glave kot asociativno polje.

```php
$headers = $httpResponse->getHeaders();
echo $headers['Pragma'];
```


setContentType(string $type, ?string $charset=null) .[method]
-------------------------------------------------------------
Spremeni glavo `Content-Type`.

```php
$httpResponse->setContentType('text/plain', 'UTF-8');
```


redirect(string $url, int $code=self::S302_Found): void .[method]
-----------------------------------------------------------------
Preusmeri na drug URL. Ne pozabite nato končati skripta.

```php
$httpResponse->redirect('http://example.com');
exit;
```


setExpiration(?string $time) .[method]
--------------------------------------
Nastavi potek HTTP dokumenta s pomočjo glav `Cache-Control` in `Expires`. Parameter je bodisi časovni interval (kot besedilo) ali `null`, kar onemogoči predpomnjenje.

```php
// predpomnilnik v brskalniku poteče čez eno uro
$httpResponse->setExpiration('1 hour');
```


sendAsFile(string $fileName) .[method]
--------------------------------------
Odgovor bo prenesen s pomočjo pogovornega okna *Shrani kot* pod navedenim imenom. Same datoteke pri tem ne pošilja.

```php
$httpResponse->sendAsFile('faktura.pdf');
```


setCookie(string $name, string $value, $time, ?string $path=null, ?string $domain=null, ?bool $secure=null, ?bool $httpOnly=null, ?string $sameSite=null) .[method]
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pošlje piškotek. Privzete vrednosti parametrov:

| `$path`     | `'/'`   | piškotek ima doseg na vse poti v (pod)domeni *(nastavljivo)*
| `$domain`   | `null`  | kar pomeni z dosegom na trenutno (pod)domeno, vendar ne njenih poddomen *(nastavljivo)*
| `$secure`   | `true`  | če spletno mesto teče na HTTPS, sicer `false` *(nastavljivo)*
| `$httpOnly` | `true`  | piškotek je za JavaScript nedostopen
| `$sameSite` | `'Lax'` | piškotek ni nujno poslan pri [dostopu iz druge domene|nette:glossary#SameSite cookie]

Privzete vrednosti parametrov `$path`, `$domain` in `$secure` lahko spremenite v [konfiguraciji|configuration#HTTP cookie].

Čas lahko navajate kot število sekund ali niz:

```php
$httpResponse->setCookie('lang', 'cs', '100 days');
```

Parameter `$domain` določa, katere domene lahko sprejemajo piškotek. Če ni naveden, piškotek sprejema ista (pod)domena, kot ga je nastavila, vendar ne njenih poddomen. Če je `$domain` določen, so vključene tudi poddomene. Zato je navedba `$domain` manj omejujoča kot izpustitev. Na primer, pri `$domain = 'nette.org'` so piškotki dostopni tudi na vseh poddomenah kot `doc.nette.org`.

Za vrednost `$sameSite` lahko uporabite konstante `Response::SameSiteLax`, `SameSiteStrict` in `SameSiteNone`.


deleteCookie(string $name, ?string $path=null, ?string $domain=null, ?bool $secure=null): void .[method]
--------------------------------------------------------------------------------------------------------
Izbriše piškotek. Privzete vrednosti parametrov so:
- `$path` z dosegom na vse imenike (`'/'`)
- `$domain` z dosegom na trenutno (pod)domeno, vendar ne njenih poddomen
- `$secure` se ravna po nastavitvah v [konfiguraciji|configuration#HTTP cookie]

```php
$httpResponse->deleteCookie('lang');
```
