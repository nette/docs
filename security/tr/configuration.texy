Erişim Kontrolünü Yapılandırma
******************************

.[perex]
Nette Security için yapılandırma seçeneklerine genel bakış.

Tüm çerçeveyi değil, yalnızca bu kütüphaneyi kullanıyorsanız, [yapılandırmayı nasıl yükleyeceğinizi |bootstrap:] okuyun.

[Basit |authentication] bir [kimlik doğrulayıcı |authentication] oluşturmak için yapılandırmada bir kullanıcı listesi tanımlayabilirsiniz (`Nette\Security\SimpleAuthenticator`). Parolalar yapılandırmada okunabildiğinden, bu çözüm yalnızca test amaçlıdır.

```neon
security:
	# Tracy Bar'da kullanıcı panelini gösterir mi?
	debugger: ...  # (bool) varsayılan değer true

	users:
		# isim: şifre
		johndoe: secret123

		# ad, parola, rol ve kimlikte bulunan diğer veriler
		janedoe:
			password: secret123
			roles: [admin]
			data: ...
```

[Yetkilendirici |authorization] için bir temel oluşturmak üzere rolleri ve kaynakları da tanımlayabilirsiniz (`Nette\Security\Permission`):

```neon
security:
	roles:
		guest:
		registered: [guest] # registered guest'den miras alır
		admin: [registered] # ve admin registered'dan miras alır

	resources:
		article:
		comment: [article]  # kaynak article'dan miras alır
		poll:
```


Kullanıcı Deposu .[#toc-user-storage]
-------------------------------------

Oturum açan kullanıcı hakkındaki bilgilerin nasıl saklanacağını yapılandırabilirsiniz:

```neon
security:
	authentication:
		# ne kadar süre hareketsiz kaldıktan sonra kullanıcının oturumu kapatılacak
		expiration: 30 minutes        # (string) varsayılan ayarlanmamış

		# oturum açmış kullanıcı hakkındaki bilgilerin saklanacağı yer
		storage: session              # (session|cookie) default is session
```

Deponuz olarak `cookie` adresini seçerseniz, aşağıdaki seçenekleri de ayarlayabilirsiniz:

```neon
security:
	authentication:
		# çerezin adı
		cookieName: userId            # (string) výchozí je userid

		# hangi ana bilgisayarların çerezi almasına izin verilir
		cookieDomain: 'example.com'   # (string|domain)

		# çapraz kökenli isteklere erişirken kısıtlamalar
		cookieSamesite: None          # (Strict|Lax|None) varsayılan olarak Lax
```
