Editores e ferramentas
**********************

.[perex]
Você pode ser um programador hábil, mas somente com boas ferramentas você se tornará um mestre. Neste capítulo, você encontrará dicas sobre ferramentas importantes, editores e plugins.


Editor IDE .[#toc-ide-editor]
=============================

Recomendamos fortemente o uso de uma IDE completa para desenvolvimento, como PhpStorm, NetBeans, VS Code, e não apenas um editor de texto com suporte a PHP. A diferença é realmente crucial. Não há razão para estar satisfeito com um editor clássico com destaque de sintaxe, pois ele não atinge as capacidades de uma IDE com sugestão de código preciso, que pode refatorar o código, e muito mais. Algumas IDEs são pagas, outras são gratuitas.

**NetBeans IDE*** tem suporte integrado para Nette, Latte e NEON.

**PhpStorm**: instalar estes plugins em `Settings > Plugins > Marketplace`:
- Auxiliares da estrutura Nette
- Latte
- Apoio NEON
- Testador Nette

**Código VS**: encontrar o plugin "Nette Latte + Neon" no mercado.

Também conecte Tracy com o editor. Quando a página de erro for exibida, você pode clicar nos nomes dos arquivos e eles serão abertos no editor com o cursor sobre a linha correspondente. Aprenda [como configurar o sistema |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan é uma ferramenta que detecta erros lógicos em seu código antes de executá-lo.

Instale-o através do Composer:

```bash
composer require --dev phpstan/phpstan-nette
```

Criar um arquivo de configuração `phpstan.neon` no projeto:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

E depois deixe que ele analise as classes na pasta `app/`:

```bash
vendor/bin/phpstan analyse app
```

Você pode encontrar uma documentação abrangente diretamente na [PHPStan |https://phpstan.org].


Verificador de código .[#toc-code-checker]
==========================================

[O Code Checker |code-checker:] verifica e possivelmente repara alguns dos erros formais em seu código fonte.

- remove a [lista técnica |nette:glossary#bom]
- verifica a validade dos modelos [Latte |latte:]
- verifica a validade dos arquivos `.neon`, `.php` e `.json`
- verifica os [caracteres de controle |nette:glossary#control characters]
- verifica se o arquivo está codificado em UTF-8
- controles mal soletrados `/* @annotations */` (falta o segundo asterisco)
- remove as tags finais do PHP `?>` em arquivos PHP
- remove o espaço em branco e as linhas em branco desnecessárias do final de um arquivo
- normaliza as terminações da linha para o sistema por defeito (com o parâmetro `-l` )


Compositor .[#toc-composer]
===========================

[O Composer |Composer] é uma ferramenta para gerenciar suas dependências em PHP. Ele nos permite declarar as dependências das bibliotecas e as instalará para nós, em nosso projeto.


Verificador de requisitos .[#toc-requirements-checker]
======================================================

Foi uma ferramenta que testou o ambiente de funcionamento do servidor e informou se (e até que ponto) a estrutura poderia ser usada. Atualmente, a Nette pode ser usada em qualquer servidor que tenha a versão mínima exigida do PHP.

{{sitename: Melhores Práticas}}
