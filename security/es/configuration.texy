Configuración del control de acceso
***********************************

.[perex]
Resumen de las opciones de configuración de Nette Security.

Si usted no está utilizando todo el marco, pero sólo esta biblioteca, lea [cómo cargar la configuración |bootstrap:].

Puede definir una lista de usuarios en la configuración para crear un [autenticador simple |authentication] (`Nette\Security\SimpleAuthenticator`). Debido a que las contraseñas son legibles en la configuración, esta solución es sólo para propósitos de prueba.

```neon
security:
	# ¿muestra el panel de usuario en Tracy Bar?
	debugger: ...  # (bool) por defecto true

	users:
		# nombre: contraseña
		johndoe: secreto123

		# nombre, contraseña, rol y otros datos disponibles en la identidad
		janedoe:
			password: secret123
			roles: [admin]
			data: ...
```

También puedes definir roles y recursos para crear una base de [autorizador |authorization] (`Nette\Security\Permission`):

```neon
security:
	roles:
		guest:
		registered: [guest]  # registrado hereda de guest
		admin: [registered]  # y admin hereda de registered

	resources:
		article:
		comment: [article]   # hereda del artículo
		poll:
```


Almacenamiento de usuarios .[#toc-user-storage]
-----------------------------------------------

Puede configurar cómo almacenar la información sobre el usuario conectado:

```neon
security:
	authentication:
		# después de cuanto tiempo de inactividad el usuario será desconectado
		expiration: 30 minutos        # (string) por defecto no se establece

		# dónde almacenar la información sobre el usuario conectado
		storage: session              # (session|cookie) por defecto es sesión
```

Si elige `cookie` como repositorio, también puede configurar las siguientes opciones:

```neon
security:
	authentication:
		# nombre de la cookie
		cookieName: userId            # (string) por defecto es userid

		# qué hosts pueden recibir la cookie
		cookieDomain: 'example.com'   # (string|domain)

		# restricciones al acceder a peticiones de origen cruzado
		cookieSamesite: None          # (Strict|Lax|None) por defecto Lax
```
