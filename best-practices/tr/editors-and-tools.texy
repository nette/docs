Editörler & Araçlar
*******************

.[perex]
Yetenekli bir programcı olabilirsiniz, ancak ancak iyi araçlarla bir usta olursunuz. Bu bölümde önemli araçlar, editörler ve eklentiler hakkında ipuçları bulacaksınız.


IDE Editörü
===========

Geliştirme için kesinlikle PhpStorm, NetBeans, VS Code gibi tam özellikli bir IDE kullanmanızı öneririz, sadece PHP desteği olan bir metin editörü değil. Fark gerçekten çok büyük. Sadece sözdizimini renklendirebilen, ancak tam olarak ipucu veren, hataları kontrol eden, kodu yeniden düzenleyebilen ve çok daha fazlasını yapabilen birinci sınıf bir IDE'nin yeteneklerine ulaşamayan bir editörle yetinmek için hiçbir neden yok. Bazı IDE'ler ücretlidir, diğerleri ise ücretsizdir.

**NetBeans IDE** Nette, Latte ve NEON desteği zaten yerleşiktir.

**PhpStorm**: `Settings > Plugins > Marketplace` bölümünden şu eklentileri yükleyin
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: marketplace'te "Nette Latte + Neon" eklentisini bulun.

Ayrıca Tracy'yi editörünüzle bağlayın. Hata sayfası görüntülendiğinde, dosya adlarına tıklayabilir ve bunlar editörde ilgili satırda imleçle açılır. [Sistemi nasıl yapılandıracağınızı |tracy:open-files-in-ide] okuyun.


PHPStan
=======

PHPStan, kodu çalıştırmadan önce mantıksal hataları ortaya çıkaran bir araçtır.

Composer kullanarak kurarız:

```shell
composer require --dev phpstan/phpstan-nette
```

Projede `phpstan.neon` yapılandırma dosyasını oluştururuz:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Ve ardından `app/` klasöründeki sınıfları analiz etmesini sağlarız:

```shell
vendor/bin/phpstan analyse app
```

Kapsamlı belgeleri doğrudan [PHPStan web sitesinde |https://phpstan.org] bulabilirsiniz.


Code Checker
============

[Code Checker|code-checker:] kaynak kodlarınızdaki bazı biçimsel hataları kontrol eder ve gerekirse düzeltir:

- [BOM |nette:glossary#BOM] kaldırır
- [Latte |latte:] şablonlarının geçerliliğini kontrol eder
- `.neon`, `.php` ve `.json` dosyalarının geçerliliğini kontrol eder
- [kontrol karakterlerinin |nette:glossary#Kontrol Karakterleri] varlığını kontrol eder
- dosyanın UTF-8 olarak kodlanıp kodlanmadığını kontrol eder
- yanlış yazılmış `/* @anotace */` (yıldız eksik) kontrol eder
- PHP dosyalarındaki kapanış `?>` etiketini kaldırır
- dosya sonundaki sağdaki boşlukları ve gereksiz satırları kaldırır
- satır ayırıcılarını sistem varsayılanlarına normalleştirir (`-l` seçeneğini belirtirseniz)


Composer
========

[Composer |Composer] PHP'de bağımlılıkları yönetmek için bir araçtır. Bireysel kütüphanelerin keyfi olarak karmaşık bağımlılıklarını bildirmemize ve ardından bunları projemize kurmamıza olanak tanır.


Requirements Checker
====================

Sunucunun çalışma zamanı ortamını test eden ve framework'ün kullanılıp kullanılamayacağını (ve ne ölçüde) bildiren bir araçtı. Şu anda Nette, minimum gerekli PHP sürümüne sahip her sunucuda kullanılabilir.
