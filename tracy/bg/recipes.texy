Рецепти
*******


Политика за сигурност на съдържанието .[#toc-content-security-policy]
=====================================================================

Ако сайтът ви има политика за сигурност на съдържанието, ще трябва да добавите `'nonce-<value>'` и `'strict-dynamic'` до `script-src`, за да работи Трейси правилно. Някои приставки на трети страни може да изискват допълнителни директиви.
Nonce не се поддържа в директивата `style-src`, ако използвате тази директива, трябва да добавите `'unsafe-inline'`, но това трябва да се избягва в производствен режим.

Пример за конфигурация на [Nette Framework |nette:configuring]:

```neon
http:
	csp:
		script-src: [nonce, strict-dynamic]
```

Пример в чист PHP:

```php
$nonce = base64_encode(random_bytes(20));
header("Content-Security-Policy: script-src 'nonce-$nonce' 'strict-dynamic';");
```


Ускорено натоварване .[#toc-faster-loading]
===========================================

Основното интегриране е лесно, но ако дадена уеб страница има скриптове, които блокират бавно, те могат да забавят зареждането на Tracy.
Решението е да поставите `<?php Tracy\Debugger::renderLoader() ?>` в шаблона си преди
всички скриптове:

```latte
<!DOCTYPE html>
<html>
<head>
	<title>...<title>
	<?php Tracy\Debugger::renderLoader() ?>
	<link rel="stylesheet" href="assets/style.css">
	<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
</head>
```


AJAX и пренасочени заявки .[#toc-ajax-and-redirected-requests]
==============================================================

Tracy може да показва панел за отстраняване на грешки и проекти за AJAX заявки и пренасочвания. Tracy създава собствени сесии, съхранява данни в собствените си временни файлове и използва бисквитки `tracy-session`.

Tracy може също така да бъде конфигуриран да използва своя собствена PHP сесия, която се стартира преди Tracy да бъде активиран:

```php
session_start();
Debugger::setSessionStorage(new Tracy\NativeSession);
Debugger::enable();
```

В случай че стартирането на сесия изисква по-сложна инициализация, можете да стартирате Tracy веднага (за да може да се справи с всички възникнали грешки), след което да инициализирате обработчика на сесията.
и накрая да съобщите на Tracy, че сесията е готова за използване, като използвате функцията `dispatch()`:

```php
Debugger::setSessionStorage(new Tracy\NativeSession);
Debugger::enable();

// followed by session initialization
// and start the session
session_start();

Debugger::dispatch();
```

Функцията `setSessionStorage()` съществува от версия 2.9 насам, като преди това Tracy винаги използваше собствената сесия на PHP.


Персонализиран скрубер .[#toc-custom-scrubber]
==============================================

Скруберът е филтър, който предотвратява изтичането на чувствителни данни от свалките, като например пароли или пълномощни. Филтърът се извиква за всеки елемент от масив или обект за изхвърляне и връща `true`, ако стойността е чувствителна. В този случай вместо стойността се извежда `*****`.

```php
// avoids dumping key values and properties such as `password`,
// `password_repeat`, `check_password`, `DATABASE_PASSWORD`, etc.
$scrubber = function(string $key, $value, ?string $class): bool
{
	return preg_match('#password#i', $key) && $value !== null;
};

// we use it for all dumps inside BlueScreen
Tracy\Debugger::getBlueScreen()->scrubber = $scrubber;
```


Регистратор на потребители .[#toc-custom-logger]
================================================

Можем да създадем потребителски регистратор, който регистрира грешки, неоткрити изключения и се извиква от `Tracy\Debugger::log()`. Записващото устройство реализира интерфейса [api:Tracy\ILogger].

```php
use Tracy\ILogger;

class SlackLogger implements ILogger
{
	public function log($value, $priority = ILogger::INFO)
	{
		// sends a request to Slack
	}
}
```

След това го активираме:

```php
Tracy\Debugger::setLogger(new SlackLogger);
```

Ако използваме пълната версия на Nette Framework, можем да я инсталираме в конфигурационния файл на NEON:

```neon
services:
	tracy.logger: SlackLogger
```


nginx .[#toc-nginx]
===================

Ако Tracy не работи с nginx, вероятно не е правилно конфигуриран. Ако има нещо като

```nginx
try_files $uri $uri/ /index.php;
```

да го промените на

```nginx
try_files $uri $uri/ /index.php$is_args$args;
```
