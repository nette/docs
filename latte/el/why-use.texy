Γιατί να χρησιμοποιήσετε πρότυπα;
*********************************


Γιατί πρέπει να χρησιμοποιήσω ένα σύστημα δημιουργίας προτύπων στην PHP; .[#toc-why-should-i-use-a-templating-system-in-php]
----------------------------------------------------------------------------------------------------------------------------

Κατ' αρχάς, ας θυμηθούμε εν συντομία την ιστορία της PHP, γεμάτη ενδιαφέρουσες ανατροπές. Μια από τις πρώτες γλώσσες προγραμματισμού που χρησιμοποιήθηκαν για την κατασκευή προτύπων HTML ήταν η C. Ωστόσο, η χρήση της για το σκοπό αυτό αποδείχθηκε ακατάλληλη. Ο Rasmus Lerdorf δημιούργησε την PHP για να διευκολύνει τη δυναμική παραγωγή HTML με τη C στο backend. Η PHP σχεδιάστηκε αρχικά ως γλώσσα δημιουργίας προτύπων, αλλά με την πάροδο του χρόνου απέκτησε περισσότερες δυνατότητες και έγινε μια ολοκληρωμένη γλώσσα προγραμματισμού.

Παρ' όλα αυτά, εξακολουθεί να λειτουργεί ως γλώσσα διαμόρφωσης προτύπων. Τα αρχεία PHP μπορούν να χρησιμοποιηθούν ως σελίδες HTML, όπου μπορείτε να εξάγετε μια μεταβλητή χρησιμοποιώντας `<?= $foo ?>`.

Στις αρχές της ιστορίας της PHP, το σύστημα προτυποποίησης Smarty εισήχθη για να διαχωρίσει αυστηρά την εμφάνιση (HTML/CSS) από τη λογική της εφαρμογής. Οι δυνατότητές του ήταν σκόπιμα περιορισμένες σε σύγκριση με την PHP, οπότε ένας προγραμματιστής δεν μπορούσε, για παράδειγμα, να κάνει αναζήτηση σε μια βάση δεδομένων από ένα template. Ωστόσο, αυτά τα συστήματα εισήγαγαν πρόσθετη εξάρτηση, αύξησαν την πολυπλοκότητα του έργου και απαιτούσαν την εκμάθηση μιας νέας γλώσσας Smarty. Τα πλεονεκτήματά τους ήταν αμφιλεγόμενα και η απλή PHP συνέχισε να χρησιμοποιείται για τα πρότυπα.

Με την πάροδο του χρόνου, τα συστήματα προτύπων έγιναν πιο χρήσιμα. Ένας αυξανόμενος αριθμός προγραμματιστών και εταιρειών έχουν συνειδητοποιήσει τη σημασία της ασφάλειας. Αναγνώρισαν την ύπαρξη [ευπαθειών όπως το XSS |safety-first]. Ο σωστός τρόπος εμφάνισης μιας μεταβλητής δεν είναι `<?= $foo ?>` αλλά `<?= htmlspecialchars($foo) ?>`, και η παραμέληση της διαφυγής, δηλαδή η χρήση της συνάρτησης `htmlspecialchars()`, μπορεί να προκαλέσει σοβαρή παραβίαση της ασφάλειας. Τα συστήματα προτύπων εισήγαγαν την αυτόματη διαφυγή, οπότε αρκούσε να γράψετε απλώς `{$foo}`, και η μεταβλητή θα εμφανιζόταν με ενσωματωμένη τη διαφυγή.

Τα συστήματα προτύπων έφεραν υποστήριξη για κληρονομικότητα, sandboxing και άλλα χρήσιμα χαρακτηριστικά, καθιστώντας τη συγγραφή προτύπων πολύ πιο απλή από ό,τι με την PHP. Κάποια στιγμή, τα οφέλη των συστημάτων πρότυπης μορφοποίησης υπερίσχυσαν σημαντικά τις ανησυχίες σχετικά με την εισαγωγή νέων εξαρτήσεων.


Γιατί πρέπει να χρησιμοποιήσω το σύστημα πρότυπων εφαρμογών Latte; .[#toc-why-should-i-use-the-latte-templating-system]
-----------------------------------------------------------------------------------------------------------------------

Οι κύριοι λόγοι είναι η ασφάλεια και η σύνταξη.

Όλα τα συστήματα templating, όπως το Twig, το Blade ή το Smarty, έχουν εισάγει προστασία XSS με τη μορφή αυτόματης διαφυγής καθ' όλη τη διάρκεια της ύπαρξής τους. Ωστόσο, το Latte προχώρησε παραπέρα, συνειδητοποιώντας ότι για να είναι πραγματικά λειτουργικό το αυτόματο escaping, το σύστημα έπρεπε να καταλαβαίνει την HTML. Έπρεπε να αναγνωρίζει όχι μόνο μια σειρά χαρακτήρων, αλλά και ετικέτες, χαρακτηριστικά κ.λπ. Αυτό οφείλεται στο γεγονός ότι απαιτούνται διαφορετικές μέθοδοι διαφυγής μέσα στο κείμενο HTML, μέσα στις ετικέτες HTML και μέσα στη JavaScript κ.λπ. Το Latte έμαθε να κατανοεί την HTML και να διαφεύγει σε κάθε ένα από αυτά τα πλαίσια [κατάλληλα |safety-first#Context-Aware Escaping]. Έγινε έτσι το πρώτο και μέχρι στιγμής το μοναδικό σύστημα δημιουργίας προτύπων PHP με διαφυγή με βάση το πλαίσιο.

Το Latte αντιπροσωπεύει ένα πραγματικά ασφαλές σύστημα δημιουργίας προτύπων, ενώ άλλα συστήματα τείνουν να δημιουργούν μια ψευδή αίσθηση ασφάλειας.

Ένα άλλο σημαντικό πλεονέκτημα του Latte είναι η χρήση της σύνταξης της PHP, οπότε ο προγραμματιστής/κωδικοποιητής δεν χρειάζεται να μάθει μια νέα γλώσσα αλλά μπορεί να χρησιμοποιήσει αυτό που ήδη γνωρίζει καλά.


Ποιες είναι οι κύριες διαφορές μεταξύ συστημάτων template όπως το Latte, το Twig και το Blade; .[#toc-what-are-the-main-differences-between-templating-systems-like-latte-twig-and-blade]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Οι διαφορές μεταξύ συστημάτων διαμόρφωσης προτύπων όπως το Latte, το Twig και το Blade έγκεινται κυρίως στη σύνταξη, την ασφάλεια και την ενσωμάτωση με πλαίσια:

- Latte: χρησιμοποιεί σύνταξη της γλώσσας PHP, καθιστώντας την ευκολότερη στην εκμάθηση και τη χρήση. Παρέχει κορυφαία προστασία από επιθέσεις XSS.
- Twig: χρησιμοποιεί σύνταξη που μοιάζει με Python, η οποία είναι αρκετά διαφορετική από την PHP. Διαφεύγει χωρίς διάκριση πλαισίου. Είναι καλά ενσωματωμένο με το πλαίσιο Symfony.
- Blade: χρησιμοποιεί ένα μείγμα σύνταξης PHP και προσαρμοσμένης σύνταξης. Διαφεύγει χωρίς διάκριση πλαισίου. Είναι στενά ενσωματωμένο με τα χαρακτηριστικά και το οικοσύστημα του Laravel.


Αξίζει τον κόπο για τις εταιρείες να χρησιμοποιούν ένα σύστημα templating; .[#toc-is-it-worth-it-for-companies-to-use-a-templating-system]
------------------------------------------------------------------------------------------------------------------------------------------

Πρώτον, το κόστος που σχετίζεται με την εκπαίδευση, τη χρήση και τα συνολικά οφέλη ποικίλλει σημαντικά ανάλογα με το σύστημα. Το σύστημα δημιουργίας προτύπων Latte, χάρη στη χρήση του συντακτικού της PHP, απλοποιεί σημαντικά την εκμάθηση για τους προγραμματιστές που είναι ήδη εξοικειωμένοι με αυτή τη γλώσσα. Συνήθως χρειάζονται λίγες ώρες για να εξοικειωθεί επαρκώς ένας προγραμματιστής με το Latte, μειώνοντας το κόστος εκπαίδευσης και επιταχύνοντας την υιοθέτηση της τεχνολογίας και, κυρίως, την αποτελεσματικότητα στην καθημερινή χρήση.

Επιπλέον, το Latte παρέχει υψηλό επίπεδο προστασίας από την ευπάθεια XSS χάρη στη μοναδική τεχνολογία διαφυγής με επίγνωση του περιβάλλοντος. Αυτή η προστασία είναι ζωτικής σημασίας για τη διασφάλιση της ασφάλειας των εφαρμογών ιστού και την ελαχιστοποίηση του κινδύνου επιθέσεων που θα μπορούσαν να θέσουν σε κίνδυνο τους χρήστες ή τα δεδομένα της εταιρείας. Η ασφάλεια εφαρμογών ιστού είναι επίσης σημαντική για τη διατήρηση της καλής φήμης μιας εταιρείας. Τα ζητήματα ασφάλειας μπορεί να οδηγήσουν σε απώλεια εμπιστοσύνης από τους πελάτες και να βλάψουν τη φήμη της εταιρείας στην αγορά.

Η χρήση του Latte μειώνει επίσης το συνολικό κόστος ανάπτυξης και συντήρησης, καθώς διευκολύνει και τα δύο. Επομένως, η χρήση ενός συστήματος template αξίζει σίγουρα τον κόπο.


Πώς επηρεάζει το Latte την απόδοση της εφαρμογής ιστού και τους πόρους του διακομιστή; .[#toc-how-does-latte-affect-web-application-performance-and-server-resources]
---------------------------------------------------------------------------------------------------------------------------------------------------------------------

Παρόλο που τα πρότυπα Latte επεξεργάζονται γρήγορα, αυτή η πτυχή δεν έχει πραγματικά σημασία. Ο λόγος είναι ότι η ανάλυση των αρχείων γίνεται μόνο μία φορά κατά την πρώτη εμφάνιση. Στη συνέχεια μεταγλωττίζονται σε κώδικα PHP, αποθηκεύονται στο δίσκο και εκτελούνται σε κάθε επόμενη αίτηση χωρίς να απαιτείται εκ νέου μεταγλώττιση.

Έτσι λειτουργεί σε ένα περιβάλλον παραγωγής. Κατά τη διάρκεια της ανάπτυξης, τα πρότυπα Latte μεταγλωττίζονται εκ νέου κάθε φορά που αλλάζει το περιεχόμενό τους, ώστε ο προγραμματιστής να βλέπει πάντα την τρέχουσα έκδοση.
