Превод на формуляри и шаблони
*****************************

.[perex]
При създаването на многоезично приложение може да се наложи една и съща страница или формуляр да се показват на различни езици.

Рамката Nette дефинира за тази цел интерфейс за превод [api:Nette\Localization\Translator], който има един-единствен метод `translate()`. Той получава `$message`, който обикновено е низ, и всички други параметри. Неговата задача е да върне преведения низ.

В Nette няма изпълнение по подразбиране, можете да избирате от няколко готови решения според нуждите си, които ще намерите в [Componette |https://componette.org/search/localization]. Прочетете документацията за това как да настроите преводача.

След това можете да получите преводача в кода си, като го предадете чрез [инжектиране на зависимости |dependency-injection:passing-dependencies].

От версия nette/utils 3.2 името на интерфейса е `Nette\Localization\Translator`, т.е. без префикс `I`.


Превод на формулярите .[#toc-form-translation]
----------------------------------------------

[Формулярите |forms:] поддържат превод на текст чрез преводач. Настройвате го по метода `setTranslator()`:

```php
$form->setTranslator($translator);
```

От този момент нататък всички преки пътища, както и всички съобщения за грешки или елементи от полето за избор се превеждат на друг език.

Все пак можете да зададете различен преводач за отделните контроли на формуляра или да деактивирате напълно превода, като използвате стойността `null`:

```php
$form->addSelect('carModel', 'Model:', $cars)
	->setTranslator(null);
```

При [правилата за валидиране |forms:validation] определени параметри също се предават на преводача, напр. за правило:

```php
$form->addPassword('password', 'Password:')
	->addCondition($form::MinLength, 'Password must be at least %d characters long', 8);
```

преводачът се извиква със следните параметри:

```php
$translator->translate('Password must be at least %d characters long', 8);
```

и по този начин може да избере правилната форма за множествено число на думата `characters` в зависимост от броя.


Превод на шаблони .[#toc-template-translation]
----------------------------------------------

Методът `setTranslator()` може да се използва и при презентаторите:

```php
protected function beforeRender(): void
{
	// ...
	$this->template->setTranslator($translator);
}
```

След това преводачът може да се използва като други филтри:

```latte
<a href="basket">{='Basket'|translate}</a>
<span>{$item|translate}</span>
```

Съществува и съкращение - таг за подчертаване:

```latte
<a href="basket">{_'Basket'}</a>
<span>{_$item}</span>
```

Можете да използвате алтернативен запис за сдвояване:

```latte
<a href="order">{_}Order{/_}</a>
```

{{priority: -1}}
{{sitename: Най-добри практики}}
