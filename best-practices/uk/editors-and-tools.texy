Редактори та інструменти
************************

.[perex]
Ви можете бути вправним програмістом, але тільки з хорошими інструментами ви станете майстром. У цьому розділі ви знайдете поради щодо важливих інструментів, редакторів та плагінів.


Редактор IDE .[#toc-ide-editor]
===============================

Ми наполегливо рекомендуємо використовувати для розробки повнофункціональну IDE, таку як PhpStorm, NetBeans, VS Code, а не просто текстовий редактор з підтримкою PHP. Різниця дійсно принципова. Немає причин задовольнятися класичним редактором із підсвічуванням синтаксису, тому що він не дотягує до можливостей IDE з точним реченням коду, можливістю рефакторінгу коду тощо. Деякі IDE є платними, інші - безкоштовними.

**NetBeans IDE** має вбудовану підтримку Nette, Latte та NEON.

**PhpStorm**: встановіть ці плагіни за посиланням `Settings > Plugins > Marketplace`:
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: знайдіть плагін "Nette Latte + Neon" у маркетплейсі.

Також підключіть Трейсі до редактора. Коли відобразиться сторінка з помилками, ви можете натиснути на назви файлів, і вони відкриються в редакторі при наведенні курсору на відповідний рядок. Дізнайтеся, [як налаштувати систему |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan - це інструмент, який виявляє логічні помилки у вашому коді до того, як ви його запустите.

Встановіть його через Composer:

```bash
composer require --dev phpstan/phpstan-nette
```

Створіть у проекті конфігураційний файл `phpstan.neon`:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

А потім дозвольте йому проаналізувати класи в папці `app/`:

```bash
vendor/bin/phpstan analyse app
```

Ви можете знайти вичерпну документацію безпосередньо на сайті [PHPStan |https://phpstan.org].


Code Checker .[#toc-code-checker]
=================================

[Code Checker |code-checker:] перевіряє і за можливості виправляє деякі формальні помилки у вашому вихідному коді.

- видаляє [BOM |nette:glossary#bom].
- перевіряє валідність шаблонів [Latte |latte:].
- перевіряє валідність файлів `.neon`, `.php` і `.json`.
- перевіряє наявність [керуючих символів |nette:glossary#Control-Characters].
- перевіряє, чи закодований файл у UTF-8
- контролює правильність написання `/* @annotations */` (пропущена друга зірочка)
- видаляє завершальні теги PHP `?>` у файлах PHP
- видаляє з кінця файлу пробільні символи і непотрібні порожні рядки
- нормалізує закінчення рядків до системного значення за замовчуванням (з параметром `-l`)


Composer .[#toc-composer]
=========================

[Composer |Composer] - це інструмент для управління залежностями в PHP. Він дозволяє нам оголосити залежності бібліотек, і він встановить їх за нас у наш проект.


Перевірка вимог .[#toc-requirements-checker]
============================================

Це був інструмент, який тестував робоче середовище сервера і повідомляв, чи можна (і якою мірою) використовувати фреймворк. Наразі Nette можна використовувати на будь-якому сервері, на якому встановлено мінімально необхідну версію PHP.

{{sitename: Найкращі практики}}
