Редактори и инструменти
***********************

.[perex]
Можете да сте опитен програмист, но само с добри инструменти ще станете майстор. В тази глава ще намерите съвети за важни инструменти, редактори и приставки.


Редактор на IDE .[#toc-ide-editor]
==================================

Силно препоръчваме да използвате пълнофункционална IDE среда за разработка, например PhpStorm, NetBeans, VS Code, а не просто текстов редактор с поддръжка на PHP. Разликата е наистина съществена. Няма причина да се задоволявате с класически редактор с подчертаване на синтаксиса, защото той не достига възможностите на IDE с точно предложение за код, който може да рефакторира кода и др. Някои IDE са платени, а други са безплатни.

**NetBeans IDE** има вградена поддръжка за Nette, Latte и NEON.

**PhpStorm**: инсталирайте тези приставки в `Settings > Plugins > Marketplace`:
- Помощни средства за рамката Nette
- Latte
- Поддръжка на NEON
- Тестер на Nette

**VS код**: намерете плъгина "Nette Latte + Neon" на пазара.

Също така свържете Трейси с редактора. Когато се покаже страницата с грешки, можете да щракнете върху имената на файловете и те ще се отворят в редактора с курсор на съответния ред. Научете [как да конфигурирате системата |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan е инструмент, който открива логически грешки в кода ви, преди да го стартирате.

Инсталирайте го чрез Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Създайте конфигурационен файл в проекта `phpstan.neon`:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

И след това го оставете да анализира класовете в папката `app/`:

```shell
vendor/bin/phpstan analyse app
```

Можете да намерите подробна документация директно на уебсайта на [PHPStan |https://phpstan.org].


Проверка на кода .[#toc-code-checker]
=====================================

[Проверката на кода |code-checker:] проверява и евентуално поправя някои формални грешки в изходния ви код.

- Премахва [BOM |nette:glossary#bom].
- Проверява валидността на шаблоните [Latte |latte:].
- Проверява валидността на `.neon`, `.php` и `.json`.
- проверява за [контролни знаци |nette:glossary#Control-Characters].
- проверява дали файлът е кодиран в UTF-8.
- проверява дали `/* @annotations */` е изписан правилно (липсва втората звездичка)
- премахва таговете за край на PHP `?>` в PHP файлове
- премахва белите полета и ненужните празни редове от края на файла
- нормализира окончанията на редовете до системните по подразбиране (с `-l`)


Композитор .[#toc-composer]
===========================

[Composer |Composer] е инструмент за управление на зависимостите в PHP. Тя ни позволява да декларираме зависимостите на библиотеките и ги инсталира вместо нас в нашия проект.


Скрипт за проверка на изискванията .[#toc-requirements-checker]
===============================================================

Това беше инструмент, който тестваше средата на сървъра и съобщаваше дали (и до каква степен) рамката може да се използва. Nette вече може да се използва на всеки сървър, на който е инсталирана минималната необходима версия на PHP.

{{sitename: Най-добри практики}}
