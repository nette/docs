HTTP-відповідь
**************

.[perex]
Nette інкапсулює HTTP-відповідь в об'єкти зі зрозумілим API, забезпечуючи при цьому фільтр санації.

HTTP-відповідь - це об'єкт [api:Nette\Http\Response], який ви отримуєте, передаючи його за допомогою [ін'єкції залежностей |dependency-injection:passing-dependencies]. У презентаторах просто викликайте `$httpResponse = $this->getHttpResponse()`.

→ [Встановлення та вимоги |@home#Installation]


Nette\Http\Response .[#toc-nette-http-response]
===============================================

На відміну від [Nette\Http\Request |request], цей об'єкт є змінюваним, тому ви можете використовувати сеттери для зміни стану, тобто для надсилання заголовків. Пам'ятайте, що всі сеттери **повинні бути викликані до того, як буде надіслано фактичні дані.** Метод `isSent()` визначає, чи було надіслано дані. Якщо він повертає `true`, кожна спроба надіслати заголовок спричиняє виключення `Nette\InvalidStateException`.


setCode(int $code, string $reason=null) .[method]
-------------------------------------------------
Змінює [код відповіді |https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10] статусу. Для кращої читабельності вихідного коду рекомендується використовувати [зумовлені константи |api:Nette\Http\IResponse] замість реальних чисел.

```php
$httpResponse->setCode(Nette\Http\Response::S404_NotFound);
```


getCode(): int .[method]
------------------------
Повертає код статусу відповіді.


isSent(): bool .[method]
------------------------
Повертає, чи були заголовки вже надіслані з сервера в браузер, тому вже неможливо надіслати заголовки або змінити код статусу.


setHeader(string $name, string $value) .[method]
------------------------------------------------
Надсилає HTTP-заголовок і **перезаписує** раніше надісланий однойменний заголовок.

```php
$httpResponse->setHeader('Pragma', 'no-cache');
```


addHeader(string $name, string $value) .[method]
------------------------------------------------
Надсилає HTTP-заголовок і **не перезаписує** раніше надісланий однойменний заголовок.

```php
$httpResponse->addHeader('Accept', 'application/json');
$httpResponse->addHeader('Accept', 'application/xml');
```


deleteHeader(string $name) .[method]
------------------------------------
Видаляє раніше надісланий HTTP-заголовок.


getHeader(string $header): ?string .[method]
--------------------------------------------
Повертає відправлений HTTP-заголовок, або `null`, якщо він не існує. Параметр не чутливий до регістру.

```php
$pragma = $httpResponse->getHeader('Pragma');
```


getHeaders(): array .[method]
-----------------------------
Повертає всі відправлені HTTP-заголовки у вигляді асоціативного масиву.

```php
$headers = $httpResponse->getHeaders();
echo $headers['Pragma'];
```


setContentType(string $type, string $charset=null) .[method]
------------------------------------------------------------
Надсилає заголовок `Content-Type`.

```php
$httpResponse->setContentType('text/plain', 'UTF-8');
```


redirect(string $url, int $code=self::S302_Found): void .[method]
-----------------------------------------------------------------
Перенаправляє на інший URL. Не забудьте після цього вийти зі скрипта.

```php
$httpResponse->redirect('http://example.com');
exit;
```


setExpiration(?string $time) .[method]
--------------------------------------
Встановлює термін дії HTTP-документа, що використовує заголовки `Cache-Control` і `Expires`. Параметром є або часовий інтервал (у вигляді тексту), або `null`, який вимикає кешування.

```php
// кеш браузера закінчується через одну годину
$httpResponse->setExpiration('1 hour');
```


sendAsFile(string $fileName) .[method]
--------------------------------------
Відповідь має бути завантажена за допомогою діалогу *Зберегти як* із зазначеним ім'ям. Сам файл на виведення не надсилається.

```php
$httpResponse->sendAsFile('invoice.pdf');
```


setCookie(string $name, string $value, $time, string $path=null, string $domain=null, bool $secure=null, bool $httpOnly=null, string $sameSite=null) .[method]
--------------------------------------------------------------------------------------------------------------------------------------------------------------
Надсилає cookie. Значення параметрів за замовчуванням:

| `$path` | `'/'` | з охопленням усіх шляхів на (під)домені *(налаштовується)*.
| `$domain` | `null` | з областю дії поточного (під)домену, але не його піддоменів *(налаштовується)*.
| `$secure` | `true` | якщо сайт працює на HTTPS, інакше `false` *(налаштовується)*.
| `$httpOnly` | `true` | cookie недоступна для JavaScript
| `$sameSite` | `'Lax'` | cookie не потрібно відправляти при [доступі з іншого джерела |nette:glossary#SameSite-Cookie]

Ви можете змінити значення за замовчуванням параметрів `$path`, `$domain` і `$secure` в [конфігурація |configuration#HTTP-Cookie].

Час може бути вказано у вигляді кількості секунд або рядка:

```php
$httpResponse->setCookie('lang', 'en', '100 days');
```

Параметр `$domain` визначає, які домени (origin) можуть приймати cookie. Якщо параметр не вказано, cookie приймається тим самим (під)доменом, який задано, виключаючи їхні піддомени. Якщо вказано `$domain`, то піддомени також включаються. Тому зазначення `$domain` є менш обмежувальним, ніж опущення. Наприклад, якщо `$domain = 'nette.org'`, cookie також доступний на всіх піддоменах, як `doc.nette.org`.

Для значення `$sameSite` можна використовувати константи `Response::SameSiteLax`, `SameSiteStrict` і `SameSiteNone`.


deleteCookie(string $name, string $path=null, string $domain=null, bool $secure=null): void .[method]
-----------------------------------------------------------------------------------------------------
Видаляє файл cookie. За замовчуванням параметри мають такі значення:
- `$path` з областю дії на всі каталоги (`'/'`)
- `$domain` з областю дії на поточний (під)домен, але не на його піддомени.
- `$secure` залежить від налаштувань у [конфігурації |configuration#HTTP-Cookie]

```php
$httpResponse->deleteCookie('lang');
```
