Sintaksa dokumentacije
**********************

Dokumentacija uporablja Markdown & [sintakso Texy |https://texy.nette.org/syntax] z nekaterimi razširitvami.


Povezave
========

Za notranje povezave se uporablja zapis v oglatih oklepajih `[povezava]`. In sicer bodisi v obliki z navpičnico `[besedilo povezave |cilj povezave]`, bodisi skrajšano `[besedilo povezave]`, če je cilj enak besedilu (po pretvorbi v male črke in pomišljaje):

- `[Ime strani |Page name]` -> `<a href="/en/page-name">Ime strani</a>`
- `[besedilo povezave |Page name]` -> `<a href="/en/page-name">besedilo povezave</a>`

Povezujemo lahko v drugo jezikovno različico ali v drugo sekcijo. Sekcija pomeni Nette knjižnico (npr. `forms`, `latte`, ipd.) ali posebne sekcije kot `best-practices`, `quickstart` itd.:

- `[cs:Ime strani |cs:Page name]` -> `<a href="/cs/page-name">cs:Ime strani</a>` (ista sekcija, drug jezik)
- `[tracy:Ime strani |tracy:Page name]` -> `<a href="//tracy.nette.org/en/page-name">tracy:Ime strani</a>` (druga sekcija, isti jezik)
- `[tracy:cs:Ime strani |tracy:cs:Page name]` -> `<a href="//tracy.nette.org/cs/page-name">tracy:cs:Ime strani</a>` (druga sekcija in jezik)

S pomočjo `#` je mogoče tudi ciljati na določen naslov na strani.

- `[Naslov |#Heading]` -> `<a href="#toc-heading">Naslov</a>` (naslov na trenutni strani)
- `[Ime strani#Naslov |Page name#Heading]` -> `<a href="/en/page-name#toc-heading">Ime strani#Naslov</a>`

Povezava na uvodno stran sekcije: (`@home` je poseben izraz za domačo stran sekcije)

- `[besedilo povezave |@home]` -> `<a href="/en/">besedilo povezave</a>`
- `[besedilo povezave |tracy:]` -> `<a href="//tracy.nette.org/en/">besedilo povezave</a>`


Povezave do API dokumentacije
-----------------------------

Vedno navajajte samo s tem zapisom:

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

Popolnoma kvalificirana imena uporabljajte samo ob prvi omembi. Za nadaljnje povezave uporabite poenostavljeno ime:

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


Povezave do PHP dokumentacije
-----------------------------

- `[php:substr]` -> [php:substr]


Izvorna koda
============

Blok kode se začne z <code>&#96;&#96;&#96;lang</code> in konča z <code>&#96;&#96;&#96;</code>. Podprti jeziki so `php`, `latte`, `neon`, `html`, `css`, `js` in `sql`. Za zamikanje vedno uporabljajte zavihke.

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

Lahko tudi navedete ime datoteke kot <code>&#96;&#96;&#96;php .{file: ArrayTest.php}</code> in blok kode se bo izrisal na ta način:

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


Naslovi
=======

Najvišji naslov (torej ime strani) podčrtajte z zvezdicami. Za ločevanje sekcij uporabljajte enačaje. Naslove podčrtajte z enačaji in nato s pomišljaji:

```
MVC Aplikacije & presenterji
****************************
...


Ustvarjanje povezav
===================
...


Povezave v predlogah
--------------------
...
```


Okvirji in stili
================

Perex označimo z razredom `.[perex]`

Opombo označimo z razredom `.[note]`

Nasvet označimo z razredom `.[tip]`

Opozorilo označimo z razredom `.[caution]`

Močnejše opozorilo označimo z razredom `.[warning]`

Številko različice `.{data-version:2.4.10}`

Razrede zapišite pred vrstico:

```
.[perex]
To je perex.
```

Zavedajte se prosim, da okvirji kot `.[tip]` »pritegnejo« oči, zato se uporabljajo za poudarjanje, ne pa za manj pomembne informacije. Zato z njihovo uporabo maksimalno varčujte.


Vsebina
=======

Vsebina (povezave v desnem meniju) je samodejno generirana za vse strani, katerih velikost presega 4.000 bajtov, pri čemer je to privzeto obnašanje mogoče prilagoditi s pomočjo [meta oznak |#Meta značke] `{{toc}}`. Besedilo, ki tvori vsebino, se standardno vzame neposredno iz besedila naslovov, vendar je s pomočjo modifikatorja `.{toc}` mogoče v vsebini prikazati drugo besedilo, kar je koristno predvsem za daljše naslove.

```


Dolg in inteligenten naslov .{toc: Poljubno drugo besedilo, prikazano v vsebini}
================================================================================
```


Meta značke
===========

- nastavitev lastnega imena strani (v `<title>` in drobtinicah) `{{title: Drugo ime}}`
- preusmeritev `{{redirect: pla:cs}}` - glej [#povezave]
- vsiljenje `{{toc}}` ali prepoved `{{toc: no}}` samodejne vsebine (okvirček s povezavami na posamezne naslove)

{{priority: -1}}
