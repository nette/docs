Συναρτήσεις Latte
*****************

.[perex]
Στα templates, εκτός από τις συνήθεις συναρτήσεις PHP, μπορούμε να χρησιμοποιήσουμε και αυτές τις πρόσθετες συναρτήσεις.

.[table-latte-filters]
| `clamp`      | [περιορίζει την τιμή σε ένα δεδομένο εύρος |#clamp]
| `divisibleBy`| [ελέγχει αν μια μεταβλητή είναι διαιρετή με έναν αριθμό |#divisibleBy]
| `even`       | [ελέγχει αν ένας δεδομένος αριθμός είναι ζυγός |#even]
| `first`      | [επιστρέφει το πρώτο στοιχείο ενός πίνακα ή τον πρώτο χαρακτήρα ενός string |#first]
| `group`      | [ομαδοποιεί δεδομένα με βάση διάφορα κριτήρια |#group]
| `hasBlock`   | [ελέγχει την ύπαρξη ενός μπλοκ |#hasBlock]
| `last`       | [επιστρέφει το τελευταίο στοιχείο ενός πίνακα ή τον τελευταίο χαρακτήρα ενός string |#last]
| `odd`        | [ελέγχει αν ένας δεδομένος αριθμός είναι περιττός |#odd]
| `slice`      | [εξάγει ένα τμήμα ενός πίνακα ή ενός string |#slice]


Χρήση
=====

Οι συναρτήσεις χρησιμοποιούνται ακριβώς όπως οι συνήθεις συναρτήσεις PHP και μπορούν να χρησιμοποιηθούν σε όλες τις εκφράσεις:

```latte
<p>{clamp($num, 1, 100)}</p>

{if odd($num)} ... {/if}
```

[Προσαρμοσμένες συναρτήσεις|custom-functions] μπορούν να εγγραφούν με αυτόν τον τρόπο:

```php
$latte = new Latte\Engine;
$latte->addFunction('shortify', fn(string $s, int $len = 10) => mb_substr($s, 0, $len));
```

Στο template, καλείται στη συνέχεια ως εξής:

```latte
<p>{shortify($text)}</p>
<p>{shortify($text, 100)}</p>
```


Συναρτήσεις
===========


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------
Περιορίζει την τιμή στο δεδομένο εύρος min και max (συμπεριλαμβανομένων).

```latte
{=clamp($level, 0, 255)}
```

Δείτε επίσης το [φίλτρο clamp|filters#clamp].


divisibleBy(int $value, int $by): bool .[method]
------------------------------------------------
Ελέγχει αν μια μεταβλητή είναι διαιρετή με έναν αριθμό.

```latte
{if divisibleBy($num, 5)} ... {/if}
```


even(int $value): bool .[method]
--------------------------------
Ελέγχει αν ένας δεδομένος αριθμός είναι ζυγός.

```latte
{if even($num)} ... {/if}
```


first(string|iterable $value): mixed .[method]
----------------------------------------------
Επιστρέφει το πρώτο στοιχείο ενός πίνακα ή τον πρώτο χαρακτήρα ενός string:

```latte
{=first([1, 2, 3, 4])}    {* εκτυπώνει 1 *}
{=first('abcd')}          {* εκτυπώνει 'a' *}
```

Δείτε επίσης [#last], [φίλτρο first|filters#first].


group(iterable $data, string|int|\Closure $by): array .[method]{data-version:3.0.16}
------------------------------------------------------------------------------------
Η συνάρτηση ομαδοποιεί δεδομένα με βάση διάφορα κριτήρια.

Σε αυτό το παράδειγμα, οι γραμμές στον πίνακα ομαδοποιούνται με βάση τη στήλη `categoryId`. Η έξοδος είναι ένας πίνακας πινάκων, όπου το κλειδί είναι η τιμή στη στήλη `categoryId`. [Διαβάστε τον αναλυτικό οδηγό|cookbook/grouping].

```latte
{foreach group($items, categoryId) as $categoryId => $categoryItems}
    <ul>
        {foreach $categoryItems as $item}
            <li>{$item->name}</li>
        {/foreach}
    </ul>
{/foreach}
```

Δείτε επίσης το φίλτρο [group|filters#group].


hasBlock(string $name): bool .[method]{data-version:3.0.10}
-----------------------------------------------------------
Ελέγχει αν υπάρχει το μπλοκ με το δεδομένο όνομα:

```latte
{if hasBlock(header)} ... {/if}
```

Δείτε επίσης τον [έλεγχο ύπαρξης μπλοκ|template-inheritance#Kontrola existence bloků].


last(string|array $value): mixed .[method]
------------------------------------------
Επιστρέφει το τελευταίο στοιχείο ενός πίνακα ή τον τελευταίο χαρακτήρα ενός string:

```latte
{=last([1, 2, 3, 4])}    {* εκτυπώνει 4 *}
{=last('abcd')}          {* εκτυπώνει 'd' *}
```

Δείτε επίσης [#first], [φίλτρο last|filters#last].


odd(int $value): bool .[method]
-------------------------------
Ελέγχει αν ένας δεδομένος αριθμός είναι περιττός.

```latte
{if odd($num)} ... {/if}
```


slice(string|array $value, int $start, ?int $length=null, bool $preserveKeys=false): string|array .[method]
-----------------------------------------------------------------------------------------------------------
Εξάγει ένα τμήμα ενός πίνακα ή ενός string.

```latte
{=slice('hello', 1, 2)}           {* εκτυπώνει 'el' *}
{=slice(['a', 'b', 'c'], 1, 2)}   {* εκτυπώνει ['b', 'c'] *}
```

Η συνάρτηση λειτουργεί όπως η συνάρτηση PHP `array_slice` για πίνακες ή `mb_substr` για strings με εναλλακτική λύση τη συνάρτηση `iconv_substr` σε λειτουργία UTF-8.

Εάν η αρχή είναι θετική, η ακολουθία θα ξεκινήσει μετατοπισμένη κατά αυτόν τον αριθμό από την αρχή του πίνακα/string. Εάν είναι αρνητική, η ακολουθία θα ξεκινήσει μετατοπισμένη κατά τόσο από το τέλος.

Εάν η παράμετρος length καθοριστεί και είναι θετική, η ακολουθία θα περιέχει τόσα στοιχεία. Εάν σε αυτή τη συνάρτηση περάσει μια αρνητική παράμετρος length, η ακολουθία θα περιέχει όλα τα στοιχεία του αρχικού πίνακα, ξεκινώντας από τη θέση start και τελειώνοντας στη θέση μικρότερη κατά length στοιχεία από το τέλος του πίνακα. Εάν δεν καθορίσετε αυτήν την παράμετρο, η ακολουθία θα περιέχει όλα τα στοιχεία του αρχικού πίνακα, ξεκινώντας από τη θέση start.

Από προεπιλογή, η συνάρτηση αλλάζει τη σειρά και επαναφέρει τα ακέραια κλειδιά του πίνακα. Αυτή η συμπεριφορά μπορεί να αλλάξει ορίζοντας το preserveKeys σε true. Τα κλειδιά string διατηρούνται πάντα, ανεξάρτητα από αυτήν την παράμετρο.
