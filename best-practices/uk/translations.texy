Переклад форм і шаблонів
************************

.[perex]
При створенні багатомовного додатка вам, ймовірно, буде потрібно відобразити одну й ту саму сторінку або форму різними мовами.

Фреймворк Nette визначає для цієї мети інтерфейс перекладу [api:Nette\Localization\Translator], який має єдиний метод `translate()`. Він отримує `$message`, яке зазвичай є рядком, і будь-які інші параметри. Його завдання - повернути перекладений рядок.

У Nette немає реалізації за замовчуванням, ви можете вибрати з декількох готових рішень відповідно до ваших потреб, які ви знайдете на [Componette |https://componette.org/search/localization]. Про те, як налаштувати транслятор, читайте в документації.

Потім ви можете отримати транслятор у своєму коді, передавши його за допомогою [впровадження залежностей |dependency-injection:passing-dependencies].

Починаючи з версії nette/utils 3.2, ім'я інтерфейсу - `Nette\Localization\Translator`, тобто без префікса `I`.


Переклад форм .[#toc-form-translation]
--------------------------------------

[Форми |forms:] підтримує переклад тексту через транслятор. Ви встановлюєте його за допомогою методу `setTranslator()`:

```php
$form->setTranslator($translator);
```

З цього моменту всі ярлики, а також усі повідомлення про помилки або елементи поля вибору перекладаються іншою мовою.

Для окремих елементів керування форми, як і раніше, можна встановити інший транслятор або повністю відключити переклад, використовуючи значення `null`:

```php
$form->addSelect('carModel', 'Model:', $cars)
	->setTranslator(null);
```

Для [правил валідації |forms:validation] перекладачеві також передаються певні параметри, наприклад, для правила:

```php
$form->addPassword('password', 'Password:')
	->addCondition($form::MinLength, 'Password must be at least %d characters long', 8);
```

викликається транслятор із такими параметрами:

```php
$translator->translate('Password must be at least %d characters long', 8);
```

і таким чином може вибрати правильну форму множини слова `characters` відповідно до числа.


Переклад шаблонів .[#toc-template-translation]
----------------------------------------------

Метод `setTranslator()` також може бути використаний у презентерах:

```php
protected function beforeRender(): void
{
	// ...
	$this->template->setTranslator($translator);
}
```

Потім транслятор можна використовувати як інші фільтри:

```latte
<a href="basket">{='Basket'|translate}</a>
<span>{$item|translate}</span>
```

Існує також абревіатура - тег підкреслення:

```latte
<a href="basket">{_'Basket'}</a>
<span>{_$item}</span>
```

Ви можете використовувати альтернативну парну нотацію:

```latte
<a href="order">{_}Order{/_}</a>
```

{{priority: -1}}
{{sitename: Найкращі практики}}
