Editores y herramientas
***********************

.[perex]
Puedes ser un programador competente, pero solo con buenas herramientas te convertirás en un maestro. En este capítulo encontrarás consejos sobre herramientas, editores y plugins importantes.


Editor IDE
==========

Recomendamos encarecidamente utilizar un IDE completo para el desarrollo, como PhpStorm, NetBeans, VS Code, y no solo un editor de texto con soporte para PHP. La diferencia es realmente fundamental. No hay razón para conformarse con un simple editor que colorea la sintaxis pero no alcanza las capacidades de un IDE de primer nivel, que sugiere con precisión, detecta errores, puede refactorizar código y mucho más. Algunos IDE son de pago, otros incluso gratuitos.

**NetBeans IDE** ya tiene soporte integrado para Nette, Latte y NEON.

**PhpStorm**: instala estos plugins en `Settings > Plugins > Marketplace`
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: busca el plugin "Nette Latte + Neon" en el marketplace.

También vincula Tracy con tu editor. Cuando se muestre una página de error, podrás hacer clic en los nombres de los archivos y se abrirán en el editor con el cursor en la línea correspondiente. Lee [cómo configurar el sistema|tracy:open-files-in-ide].


PHPStan
=======

PHPStan es una herramienta que detecta errores lógicos en el código antes de ejecutarlo.

Lo instalamos usando Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Creamos un archivo de configuración `phpstan.neon` en el proyecto:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Y luego le pedimos que analice las clases en la carpeta `app/`:

```shell
vendor/bin/phpstan analyse app
```

Encontrarás documentación exhaustiva directamente en el [sitio web de PHPStan |https://phpstan.org].


Code Checker
============

[Code Checker|code-checker:] comprueba y, opcionalmente, corrige algunos de los errores formales en tus códigos fuente:

- elimina [BOM |nette:glossary#bom]
- comprueba la validez de las plantillas [Latte |latte:]
- comprueba la validez de los archivos `.neon`, `.php` y `.json`
- comprueba la presencia de [caracteres de control |nette:glossary#kontrolní znaky]
- comprueba si el archivo está codificado en UTF-8
- comprueba `/* @anotaciones */` mal escritas (falta el asterisco)
- elimina el `?>` final de los archivos PHP
- elimina los espacios finales y las líneas innecesarias al final del archivo
- normaliza los separadores de línea a los del sistema (si se especifica la opción `-l`)


Composer
========

[Composer |Composer] es una herramienta para gestionar dependencias en PHP. Nos permite declarar dependencias arbitrariamente complejas de bibliotecas individuales y luego las instala por nosotros en nuestro proyecto.


Requirements Checker
====================

Era una herramienta que probaba el entorno de ejecución del servidor e informaba si (y en qué medida) se podía utilizar el framework. Actualmente, Nette se puede utilizar en cualquier servidor que tenga la versión mínima requerida de PHP.

{{sitename: Best Practices}}
