Yardımcı İşlevler
*****************

.[perex]
[api:Nette\Utils\Helpers] yararlı işlevlere sahip statik bir sınıftır.


Kurulum:

```shell
composer require nette/utils
```

Tüm örnekler aşağıdaki sınıf takma adının tanımlandığını varsayar:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Bir geri çağırmayı çalıştırır ve yakalanan çıktıyı bir dize olarak döndürür.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Min ve maks. dahil aralığına sıkıştırılmış değeri döndürür.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

PHP'nin yaptığı gibi iki değeri karşılaştırır. `>`, `>=` , `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>` operatörleri arasında ayrım yapar.
Fonksiyon, operatörün değişken olduğu durumlarda kullanışlıdır.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

`false` adresini `null` adresine dönüştürür, diğer değerleri değiştirmez.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

En son oluşan PHP hatasını veya hata oluşmamışsa boş bir dizge döndürür. `error_get_last()` adresinden farklı olarak, `html_errors` PHP yönergesinden etkilenmez ve HTML değil her zaman metin döndürür.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

`$possibilities` adresinden `$value` adresine en çok benzeyen, ancak aynı olmayan bir dize arar. Yalnızca 8 bit kodlamaları destekler.

Belirli bir seçenek geçerli değilse ve kullanıcıya benzer bir seçenek önermek istiyorsak (ancak farklıysa, bu nedenle aynı dize göz ardı edilir) kullanışlıdır. Bu şekilde, Nette `did you mean ...?` mesajlarını oluşturur.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
