Szerkesztők és eszközök
***********************

.[perex]
Lehetsz ügyes programozó, de csak jó eszközökkel válhatsz mesterré. Ebben a fejezetben tippeket találsz a fontos eszközökről, szerkesztőkről és bővítményekről.


IDE-szerkesztő .[#toc-ide-editor]
=================================

Erősen javasoljuk, hogy a fejlesztéshez teljes funkcionalitású IDE-t használjon, például PhpStorm, NetBeans, VS Code, és ne csak egy PHP-támogatással rendelkező szövegszerkesztőt. A különbség valóban döntő jelentőségű. Nincs okunk megelégedni egy klasszikus, szintaxiskiemeléssel ellátott szerkesztővel, mert az nem éri el egy olyan IDE képességeit, amely pontos kódjavaslattal rendelkezik, amely képes a kód refaktorálására, és még sok minden másra is. Egyes IDE-k fizetősek, mások ingyenesek.

A **NetBeans IDE** beépített támogatással rendelkezik a Nette, a Latte és a NEON számára.

**PhpStorm**: telepítse ezeket a bővítményeket a `Settings > Plugins > Marketplace`:
- Nette keretrendszer segédprogramok
- Latte
- NEON támogatás
- Nette Tester

**VS kód**: a "Nette Latte + Neon" bővítményt a piactéren találod.

Csatlakoztassa Tracy-t is a szerkesztőhöz. Amikor a hibaoldal megjelenik, kattints a fájlnevekre, és azok megnyílnak a szerkesztőben, a kurzor a megfelelő soron áll. Ismerje meg a [rendszer konfigurálásának módját |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

A PHPStan egy olyan eszköz, amely még a futtatás előtt felismeri a logikai hibákat a kódban.

Telepítse a Composer segítségével:

```bash
composer require --dev phpstan/phpstan-nette
```

Hozzon létre egy konfigurációs fájlt `phpstan.neon` a projektben:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Majd hagyja, hogy elemezze a `app/` mappában lévő osztályokat:

```bash
vendor/bin/phpstan analyse app
```

Átfogó dokumentációt közvetlenül a [PHPStan |https://phpstan.org] oldalon talál.


Kódellenőrző .[#toc-code-checker]
=================================

[Code Checker |code-checker:] ellenőrzi és esetleg kijavítja a forráskódodban található formális hibákat.

- eltávolítja a [BOM-ot |nette:glossary#bom]
- ellenőrzi a [Latte |latte:] sablonok érvényességét
- ellenőrzi a `.neon`, `.php` és `.json` fájlok érvényességét.
- ellenőrzi a [vezérlő karaktereket |nette:glossary#control characters]
- ellenőrzi, hogy a fájl UTF-8 kódolású-e
- ellenőrzi a hibásan írt `/* @annotations */` címet (hiányzik a második csillag).
- eltávolítja a `?>` PHP végződésű címkéket a PHP-fájlokban.
- eltávolítja a fájl végéről a hátul lévő szóközöket és a felesleges üres sorokat
- normalizálja a sorvégeket a rendszer alapértelmezéséhez (a `-l` paraméterrel)


Composer .[#toc-composer]
=========================

[Composer |Composer] egy eszköz a függőségek kezelésére PHP-ban. Lehetővé teszi számunkra, hogy könyvtárfüggőségeket deklaráljunk, és telepíti őket helyettünk, a projektünkbe.


Követelményellenőrző .[#toc-requirements-checker]
=================================================

Ez egy olyan eszköz volt, amely tesztelte a szerver futtatási környezetét, és tájékoztatott arról, hogy a keretrendszer használható-e (és milyen mértékben). Jelenleg a Nette bármilyen szerveren használható, amely rendelkezik a PHP minimálisan szükséges verziójával.

{{sitename: Legjobb gyakorlatok}}
