Éditeurs et outils
******************

.[perex]
Vous pouvez être un programmeur compétent, mais ce n'est qu'avec de bons outils que vous deviendrez un maître. Dans ce chapitre, vous trouverez des conseils sur les outils, éditeurs et plugins importants.


Éditeur IDE .[#toc-ide-editor]
==============================

Nous recommandons fortement d'utiliser un IDE complet pour le développement, tel que PhpStorm, NetBeans, VS Code, et pas seulement un éditeur de texte avec support PHP. La différence est vraiment cruciale. Il n'y a aucune raison de se contenter d'un éditeur classique avec coloration syntaxique, car il n'atteint pas les capacités d'un IDE avec suggestion de code précise, qui peut refactoriser le code, et plus encore. Certains IDE sont payants, d'autres sont gratuits.

**NetBeans IDE** a un support intégré pour Nette, Latte et NEON.

**PhpStorm** : installez ces plugins dans `Settings > Plugins > Marketplace`:
- Aides pour le framework Nette
- Latte
- Support NEON
- Testeur Nette

**VS Code** : trouvez le plugin "Nette Latte + Neon" sur la place de marché.

Connectez également Tracy avec l'éditeur. Lorsque la page d'erreur est affichée, vous pouvez cliquer sur les noms de fichiers et ils s'ouvriront dans l'éditeur avec le curseur sur la ligne correspondante. Apprenez [à configurer le système |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan est un outil qui détecte les erreurs logiques dans votre code avant que vous ne l'exécutiez.

Installez-le via Composer :

```bash
composer require --dev phpstan/phpstan-nette
```

Créez un fichier de configuration `phpstan.neon` dans le projet :

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Et ensuite laissez-le analyser les classes dans le dossier `app/`:

```bash
vendor/bin/phpstan analyse app
```

Vous pouvez trouver une documentation complète directement sur [PHPStan |https://phpstan.org].


Vérificateur de code .[#toc-code-checker]
=========================================

[Code Checker |code-checker:] vérifie et répare éventuellement certaines des erreurs formelles de votre code source.

- supprime la [nomenclature |nette:glossary#bom]
- vérifie la validité des modèles [Latte |latte:]
- vérifie la validité des fichiers `.neon`, `.php` et `.json`
- vérifie les [caractères de contrôle |nette:glossary#control characters]
- vérifie si le fichier est codé en UTF-8
- contrôle les fautes d'orthographe de `/* @annotations */` (deuxième astérisque manquant)
- supprime les balises de fin PHP `?>` dans les fichiers PHP
- supprime les espaces et les lignes vides inutiles à la fin d'un fichier
- normalise les fins de ligne par rapport au système par défaut (avec le paramètre `-l` )


Composer .[#toc-composer]
=========================

[Composer] est un outil pour gérer vos dépendances en PHP. Il nous permet de déclarer les dépendances des bibliothèques et il les installera pour nous, dans notre projet.


Vérificateur d'exigences .[#toc-requirements-checker]
=====================================================

Il s'agissait d'un outil qui testait l'environnement de fonctionnement du serveur et indiquait si (et dans quelle mesure) le framework pouvait être utilisé. Actuellement, Nette peut être utilisé sur tout serveur disposant de la version minimale requise de PHP.

{{sitename: Meilleures pratiques}}
