Pomožne funkcije
****************

.[perex]
[api:Nette\Utils\Helpers] je statični razred s koristnimi funkcijami.


Namestitev:

```shell
composer require nette/utils
```

Vsi primeri predpostavljajo, da je definiran naslednji vzdevek razreda:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Izvede povratni klic in vrne zajeti izhod kot niz.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Vrne vrednost, ki je vpeta v vključujoče območje min in max.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Primerja dve vrednosti na enak način kot PHP. Razlikuje med operatorji `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>`.
Funkcija je uporabna v primerih, ko je operator spremenljiv.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Pretvori `false` v `null`, drugih vrednosti ne spremeni.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Vrne zadnjo nastalo napako PHP ali prazen niz, če do napake ni prišlo. Za razliko od `error_get_last()`, direktiva PHP `html_errors` nanj ne vpliva in vedno vrne besedilo in ne HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Poišče niz iz `$possibilities`, ki je najbolj podoben `$value`, vendar ni enak. Podpira samo 8-bitna kodiranja.

Uporaben je, če določena možnost ni veljavna in želimo uporabniku predlagati podobno možnost (vendar drugačno, zato enakega niza ne upoštevamo). Na ta način Nette ustvari sporočila `did you mean ...?`.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
