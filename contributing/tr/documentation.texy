Dokümantasyona nasıl katkıda bulunulur
**************************************

.[perex]
Dokümantasyona katkıda bulunmak, başkalarının framework'ü anlamasına yardımcı olduğunuz için en faydalı faaliyetlerden biridir.


Nasıl yazılır?
--------------

Dokümantasyon öncelikle konuyla yeni tanışan kişilere yöneliktir. Bu nedenle birkaç önemli noktayı karşılamalıdır:

- Basit ve genelden başlayın. Daha gelişmiş konulara ancak sonunda geçin
- Konuyu olabildiğince iyi açıklamaya çalışın. Örneğin, konuyu önce bir meslektaşınıza açıklamayı deneyin
- Yalnızca kullanıcının konu hakkında gerçekten bilmesi gereken bilgileri sağlayın
- Bilgilerinizin gerçekten doğru olduğunu doğrulayın. Her kodu test edin
- Kısa ve öz olun - yazdıklarınızı yarıya indirin. Ve sonra gerekirse bir kez daha
- Kalın yazıdan `.[note]` gibi çerçevelere kadar her türlü vurgulayıcıdan tasarruf edin
- Kodlarda [Kodlama Standardına |Coding Standard] uyun

Ayrıca [sözdizimini |syntax] öğrenin. Yazarken makaleyi önizlemek için [önizlemeli düzenleyiciyi |https://editor.nette.org/] kullanabilirsiniz.


Dil sürümleri
-------------

Birincil dil İngilizce'dir, bu nedenle değişiklikleriniz hem Çekçe hem de İngilizce olmalıdır. İngilizce güçlü yanınız değilse, [DeepL Translator |https://www.deepl.com/translator] kullanın ve diğerleri metninizi kontrol edecektir.

Diğer dillere çeviri, düzenlemeniz onaylandıktan ve ince ayar yapıldıktan sonra otomatik olarak yapılacaktır.


Önemsiz düzenlemeler
--------------------

Dokümantasyona katkıda bulunmak için [GitHub|https://github.com] üzerinde bir hesabınızın olması gerekir.

Dokümantasyonda küçük bir değişiklik yapmanın en kolay yolu, her sayfanın sonundaki bağlantıları kullanmaktır:

- *GitHub'da göster* ilgili sayfanın kaynak sürümünü GitHub'da açar. Ardından `E` düğmesine basmanız yeterlidir ve düzenlemeye başlayabilirsiniz (GitHub'da oturum açmış olmanız gerekir)
- *Önizlemeyi aç* düzenleyiciyi açar, burada sonuçtaki görsel görünümü de hemen görürsünüz

[Önizlemeli düzenleyici |https://editor.nette.org/] değişiklikleri doğrudan GitHub'a kaydetme seçeneğine sahip olmadığından, düzenlemeyi bitirdikten sonra kaynak metni panoya kopyalamak (*Panoya kopyala* düğmesiyle) ve ardından GitHub'daki düzenleyiciye yapıştırmak gerekir.
Düzenleme alanının altında gönderme formu bulunur. Burada düzenlemenizin nedenini kısaca özetlemeyi ve açıklamayı unutmayın. Gönderdikten sonra, daha fazla düzenlenebilen bir pull request (PR) oluşturulur.


Daha büyük düzenlemeler
-----------------------

GitHub arayüzünü kullanmak yerine, Git sürüm kontrol sistemi ile çalışmanın temellerine aşina olmak daha uygundur. Git ile çalışmayı bilmiyorsanız, [git - basit kılavuz |https://rogerdudler.github.io/git-guide/] kılavuzuna bakabilir ve gerekirse birçok [grafik istemciden |https://git-scm.com/downloads/guis] birini kullanabilirsiniz.

Dokümantasyonu şu şekilde düzenleyin:

1) GitHub'da [nette/docs |https://github.com/nette/docs] deposunun bir [forkunu |https://help.github.com/en/github/getting-started-with-github/fork-a-repo] oluşturun
2) Bu depoyu bilgisayarınıza [klonlayın |https://docs.github.com/en/repositories/creating-and-managing-repositories/cloning-a-repository]
3) Ardından [ilgili dalda|#Struktura dokumentace] değişiklikleri yapın
4) [Code-Checker |code-checker:] aracını kullanarak metindeki fazla boşlukları kontrol edin
5) Değişiklikleri kaydedin (commit)
6) Değişikliklerden memnunsanız, bunları GitHub'daki fork'unuza gönderin (push)
7) Oradan, bir [pull request|https://help.github.com/articles/creating-a-pull-request] (PR) oluşturarak `nette/docs` deposuna gönderin

Yorumlarla geri bildirim almanız yaygındır. Önerilen değişiklikleri takip edin ve dahil edin. Önerilen değişiklikleri yeni commit'ler olarak ekleyin ve tekrar GitHub'a gönderin. Bir pull request'i düzenlemek için asla yeni bir pull request oluşturmayın.


Dokümantasyon yapısı
--------------------

Tüm dokümantasyon GitHub'da [nette/docs |https://github.com/nette/docs] deposunda bulunur. Geçerli sürüm master dalındadır, eski sürümler `doc-3.x`, `doc-2.x` gibi dallarda bulunur.

Her dalın içeriği, dokümantasyonun ayrı alanlarını temsil eden ana klasörlere ayrılmıştır. Örneğin, `application/` https://doc.nette.org/cs/application adresine karşılık gelir, `latte/` https://latte.nette.org adresine karşılık gelir vb. Bu klasörlerin her biri dil sürümlerini temsil eden alt klasörler (`cs`, `en`, ...) ve isteğe bağlı olarak dokümantasyon sayfalarına eklenebilen resimleri içeren `files` alt klasörünü içerir.
