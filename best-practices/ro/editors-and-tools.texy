Editori și instrumente
**********************

.[perex]
Puteți fi un programator priceput, dar numai cu instrumente bune veți deveni un maestru. În acest capitol veți găsi sfaturi despre instrumente, editori și plugin-uri importante.


Editorul IDE .[#toc-ide-editor]
===============================

Vă recomandăm cu tărie să utilizați un IDE complet pentru dezvoltare, cum ar fi PhpStorm, NetBeans, VS Code, și nu doar un editor de text cu suport PHP. Diferența este cu adevărat crucială. Nu există niciun motiv să vă mulțumiți cu un editor clasic cu evidențiere a sintaxei, pentru că nu atinge capacitățile unui IDE cu sugestii precise de cod, care poate refactoriza codul și multe altele. Unele IDE-uri sunt plătite, altele sunt gratuite.

**NetBeans IDE** are suport integrat pentru Nette, Latte și NEON.

**PhpStorm**: instalați aceste plugin-uri în `Settings > Plugins > Marketplace`:
- Nette framework helpers
- Latte
- Suport NEON
- Nette Tester

**VS Code**: găsiți plugin-ul "Nette Latte + Neon" în piață.

De asemenea, conectați Tracy cu editorul. Când este afișată pagina de erori, puteți face clic pe numele fișierelor și acestea se vor deschide în editor cu cursorul pe linia corespunzătoare. Aflați [cum să configurați sistemul |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan este un instrument care detectează erorile logice din codul dvs. înainte de a-l rula.

Instalați-l prin Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Creați un fișier de configurare `phpstan.neon` în proiect:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Și apoi lăsați-l să analizeze clasele din dosarul `app/`:

```shell
vendor/bin/phpstan analyse app
```

Puteți găsi documentația completă direct la [PHPStan |https://phpstan.org].


Verificator de coduri .[#toc-code-checker]
==========================================

[Code Checker |code-checker:] verifică și, eventual, repară unele dintre erorile formale din codul dvs. sursă.

- elimină [BOM |nette:glossary#bom]
- verifică validitatea șabloanelor [Latte |latte:]
- verifică validitatea fișierelor `.neon`, `.php` și `.json`
- verifică dacă există [caractere de control |nette:glossary#control characters]
- verifică dacă fișierul este codificat în UTF-8
- controlează dacă `/* @annotations */` este scris greșit (lipsește al doilea asterisc)
- elimină etichetele finale PHP `?>` din fișierele PHP
- elimină spațiile albe și liniile goale inutile de la sfârșitul unui fișier
- normalizează terminațiile de linie la valoarea implicită a sistemului (cu parametrul `-l` )


Composer .[#toc-composer]
=========================

[Composer |Composer] este un instrument pentru gestionarea dependențelor în PHP. Acesta ne permite să declarăm dependențele de bibliotecă și le va instala pentru noi, în proiectul nostru.


Verificator de cerințe .[#toc-requirements-checker]
===================================================

Acesta era un instrument care testa mediul de funcționare a serverului și informa dacă (și în ce măsură) cadrul poate fi utilizat. În prezent, Nette poate fi utilizat pe orice server care dispune de versiunea minimă necesară de PHP.

{{sitename: Best Practices}}
