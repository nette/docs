Funcții auxiliare
*****************

.[perex]
[api:Nette\Utils\Helpers] este o clasă statică cu funcții utile.


Instalare:

```shell
composer require nette/utils
```

Toate exemplele presupun că este definit următorul alias de clasă:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Execută un callback și returnează ieșirea capturată sub forma unui șir de caractere.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Returnează valoarea fixată în intervalul inclusiv dintre min și max.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Compară două valori în același mod în care o face PHP. Distinge între operatorii `>`, `>=`, `<`, `<=`, `=`, `==`, , `===`, `!=`, `!==`, `<>`.
Funcția este utilă în situațiile în care operatorul este variabil.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Convertește `false` în `null`, nu modifică alte valori.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Returnează ultima eroare PHP apărută sau un șir de caractere gol dacă nu s-a produs nicio eroare. Spre deosebire de `error_get_last()`, nu este afectat de directiva PHP `html_errors` și returnează întotdeauna text, nu HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Caută un șir de caractere din `$possibilities` care este cel mai asemănător cu `$value`, dar nu același. Suportă numai codificări pe 8 biți.

Este utilă dacă o anumită opțiune nu este validă și dorim să sugerăm utilizatorului una similară (dar diferită, deci același șir este ignorat). În acest fel, Nette creează mesajele `did you mean ...?`.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
