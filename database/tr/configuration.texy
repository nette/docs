Veritabanı yapılandırması
*************************

.[perex]
Nette Database için yapılandırma seçeneklerine genel bakış.

Tüm framework'ü değil de yalnızca bu kütüphaneyi kullanıyorsanız, [yapılandırmanın nasıl yükleneceğini|bootstrap:] okuyun.


Tek bağlantı
------------

Tek bir veritabanı bağlantısının yapılandırılması:

```neon
database:
	# DSN, tek zorunlu anahtar
	dsn: "sqlite:%appDir%/Model/demo.db"
	user: ...
	password: ...
```

Genellikle [otomatik kablolama |dependency-injection:autowiring] ile ilettiğimiz `Nette\Database\Connection` ve `Nette\Database\Explorer` hizmetlerini oluşturur veya [adlarına |#Služby DI] bir referansla.

Diğer ayarlar:

```neon
database:
	# Tracy Bar'da veritabanı panelini göster?
	debugger: ...     # (bool) varsayılan true'dur

	# Tracy Bar'da sorguların EXPLAIN'ini göster?
	explain: ...      # (bool) varsayılan true'dur

	# Bu bağlantı için otomatik kablolamaya izin ver?
	autowired: ...    # (bool) ilk bağlantı için varsayılan true'dur

	# tablo kuralları: discovered, static veya sınıf adı
	conventions: discovered  # (string) varsayılan 'discovered'

	options:
		# veritabanına yalnızca gerektiğinde bağlan?
		lazy: ...     # (bool) varsayılan false'dur

		# Veritabanı sürücüsü PHP sınıfı
		driverClass:  # (string)

		# yalnızca MySQL: sql_mode ayarlar
		sqlmode:      # (string)

		# yalnızca MySQL: SET NAMES ayarlar
		charset:      # (string) varsayılan 'utf8mb4'

		# yalnızca MySQL: TINYINT(1)'i bool'a dönüştürür
		convertBoolean:  # (bool) varsayılan false'dur

		# tarih içeren sütunları değişmez nesneler olarak döndürür (sürüm 3.2.1'den itibaren)
		newDateTime:  # (bool) varsayılan false'dur

		# yalnızca Oracle ve SQLite: tarih kaydetme formatı
		formatDateTime: # (string) varsayılan 'U'
```

`options` anahtarında, [PDO sürücü belgelerinde |https://www.php.net/manual/en/pdo.drivers.php] bulabileceğiniz diğer seçenekleri belirtebilirsiniz, örneğin:

```neon
database:
	options:
		PDO::MYSQL_ATTR_COMPRESS: true
```


Çoklu bağlantılar
-----------------

Yapılandırmada, adlandırılmış bölümlere ayırarak birden fazla veritabanı bağlantısı da tanımlayabiliriz:

```neon
database:
	main:
		dsn: 'mysql:host=127.0.0.1;dbname=test'
		user: root
		password: password

	another:
		dsn: 'sqlite::memory:'
```

Otomatik kablolama yalnızca ilk bölümdeki hizmetler için etkindir. Bu, `autowired: false` veya `autowired: true` kullanılarak değiştirilebilir.


DI Hizmetleri
-------------

Bu hizmetler DI konteynerine eklenir, burada `###` bağlantı adını temsil eder:

| Ad                | Tür                        | Açıklama
|----------------------------------------------------------
| `database.###.connection`  |  [api:Nette\Database\Connection]  |  veritabanı bağlantısı
| `database.###.explorer`  |  [api:Nette\Database\Explorer]      |  [Database Explorer |explorer]


Yalnızca bir bağlantı tanımlarsak, hizmet adları `database.default.connection` ve `database.default.explorer` olacaktır. Yukarıdaki örnekte olduğu gibi birden fazla bağlantı tanımlarsak, adlar bölümlere karşılık gelir, yani `database.main.connection`, `database.main.explorer` ve ayrıca `database.another.connection` ve `database.another.explorer`.

Otomatik olarak kablolanmayan hizmetleri adlarına açık bir referansla iletiriz:

```neon
services:
	- UserFacade(@database.another.connection)
```
