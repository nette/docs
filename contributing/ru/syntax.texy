Синтаксис вики
**************

Wiki использует [синтаксис |https://texy.info/en/syntax] Markdown & [Texy |https://texy.info/en/syntax] с некоторыми улучшениями.


Ссылки .[#toc-links]
====================

Для внутренних ссылок используется обозначение в квадратных скобках `[link]` используется. Это либо в форме с вертикальной полосой `[link text |link target]`, либо в сокращенной форме `[link text]` если цель совпадает с текстом (после преобразования в нижний регистр и дефисов):

- `[Page name]` -> `<a href="/en/page-name">Page name</a>`
- `[link text |Page name]` -> `<a href="/en/page-name">link text</a>`

Мы можем сделать ссылку на другой язык или на другой раздел. Раздел - это библиотека Nette (например, `forms`, `latte`, и т.д.) или специальные разделы, такие как `best-practices`, `quickstart`, и т.д:

- `[cs:Page name]` -> `<a href="/en/page-name">Page name</a>` (тот же раздел, другой язык)
- `[tracy:Page name]` -> `<a href="//tracy.nette.org/en/page-name">Page name</a>` (другой раздел, тот же язык)
- `[tracy:cs:Page name]` -> `<a href="//tracy.nette.org/en/page-name">Page name</a>` (другой раздел и язык)

Также можно нацелить определенный заголовок на странице с помощью `#`.

- `[#Heading]` -> `<a href="#toc-heading">Heading</a>` (заголовок на текущей странице)
- `[Page name#Heading]` -> `<a href="/en/page-name#toc-heading">Page name</a>`

Ссылка на главную страницу раздела: (`@home` - специальный термин для домашней страницы раздела)

- `[link text |@home]` -> `<a href="/en/">link text</a>`
- `[link text |tracy:]` -> `<a href="//tracy.nette.org/en/">link text</a>`


Ссылки на документацию API .[#toc-links-to-api-documentation]
-------------------------------------------------------------

Всегда используйте следующие обозначения:

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

Полные имена используются только в первом упоминании. Для остальных ссылок используйте упрощенное название:

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


Ссылки на документацию по PHP .[#toc-links-to-php-documentation]
----------------------------------------------------------------

- `[php:substr]` -> [php:substr]


Исходный код .[#toc-source-code]
================================

Блок кода начинается с <code>``lang</code> и заканчивается <code>````.</code> Поддерживаются следующие языки: `php`, `latte`, `neon`, `html`, `css`, `js` и `sql`. Всегда используйте табуляцию для отступов.

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

Вы также можете указать имя файла как <code>``php .{file: ArrayTest.php}</code> и блок кода будет отображаться таким образом:

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


Заголовки .[#toc-headings]
==========================

Верхний заголовок (название страницы) подчеркните звездочками (`*`). For normal headings use equal signs (`=`) and then hyphens (`-`).

```
MVC Applications & Presenters
*****************************
...


Link Creation
=============
...


Links in Templates
------------------
...
```


Вставки и стили .[#toc-boxes-and-styles]
========================================

Ведущий абзац, помеченный классом `.[perex]` .[perex]

Примечания с пометкой класс `.[note]` .[note]

Совет, отмеченный классом `.[tip]` .[tip]

Предупреждение, отмеченное классом `.[caution]` .[caution]

Строгое предупреждение, отмеченное классом `.[warning]` .[warning]

Номер версии `.{data-version:2.4.10}` .{data-version:2.4.10}

Классы должны быть написаны перед связанной строкой:

```
.[note]
This is a note.
```

Обратите внимание, что такие поля, как `.[tip]` привлекают внимание и поэтому должны использоваться для подчеркивания, а не для менее важной информации.


Оглавление .[#toc-table-of-contents]
====================================

Оглавление (ссылки в боковой панели) автоматически генерируется, если длина страницы превышает 4 000 байт. Это поведение по умолчанию можно изменить с помощью `{{toc}}` [метатега |#meta-tags]. Текст для TOC по умолчанию берется из заголовка, но можно использовать другой текст с помощью модификатора `.{toc}` модификатора. Это особенно полезно для длинных заголовков.

```


Long and Intelligent Heading .{toc: A Different Text for TOC}
=============================================================
```


Мета-теги .[#toc-meta-tags]
===========================

- установка собственного заголовка страницы (в `<title>` и хлебных крошках) `{{title: Another name}}`
- перенаправление `{{redirect: pla:cs}}` - [ссылки для просмотра|#links]
- принудительный `{{toc}}` или отключение `{{toc: no}}` таблица содержания

{{priority: -1}}
