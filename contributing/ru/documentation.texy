Написание документации
**********************

.[perex]
Вклад в документацию является одним из наиболее ценных видов деятельности, поскольку он помогает другим понять концепцию.


Как писать? .[#toc-how-to-write]
--------------------------------

Документация в первую очередь предназначена для людей, которые впервые сталкиваются с этой темой. Поэтому она должна отвечать нескольким важным требованиям:

- Начинайте с простых и общих тем. В конце переходите к более сложным темам.
- Старайтесь объяснять тему как можно понятнее. Например, попробуйте сначала объяснить тему коллеге.
- Предоставляйте только ту информацию, которую пользователю действительно необходимо знать по данной теме.
- Убедитесь, что ваша информация точна. Тестируйте каждый код
- Будьте лаконичны - сократите то, что вы пишете, вдвое. А затем не стесняйтесь сделать это снова.
- Используйте выделение экономно, от жирного шрифта до рамок типа `.[note]`
- Следуйте [стандарту кодирования |Coding Standard] в коде

Также изучите [синтаксис |syntax]. Для предварительного просмотра статьи во время написания вы можете использовать [редактор предварительного просмотра |https://editor.nette.org/].


Мутации языка .[#toc-language-mutations]
----------------------------------------

Английский является основным языком, поэтому ваши изменения должны быть на английском. Если английский не является вашей сильной стороной, используйте [DeepL Переводчик |https://www.deepl.com/translator], и другие проверят ваш текст.

Перевод на другие языки будет выполнен автоматически после одобрения и доработки вашей правки.


Тривиальные правки .[#toc-trivial-edits]
----------------------------------------

Чтобы внести свой вклад в документацию, вам необходимо иметь учетную запись на [GitHub |https://github.com].

Самый простой способ внести небольшие изменения в документацию - воспользоваться ссылками в конце каждой страницы:

- *Показать на GitHub* открывает исходную версию страницы на GitHub. Затем просто нажмите кнопку `E`, и вы сможете начать редактирование (вы должны быть зарегистрированы на GitHub).
- *Открыть предварительный просмотр* открывает редактор, где вы можете сразу увидеть окончательный визуальный вид

Поскольку [редактор предварительного просмотра |https://editor.nette.org/] не имеет возможности сохранять изменения непосредственно на GitHub, вам необходимо скопировать исходный текст в буфер обмена (с помощью кнопки *Копировать в буфер обмена*), а затем вставить его в редактор на GitHub.
Ниже поля редактирования находится форма для отправки. Здесь не забудьте кратко изложить и объяснить причину вашей правки. После отправки создается так называемый pull request (PR), который можно в дальнейшем редактировать.


Более крупные правки .[#toc-larger-edits]
-----------------------------------------

Вместо того чтобы использовать интерфейс GitHub, целесообразнее знать основы работы с системой контроля версий Git. Если вы не знакомы с Git, вы можете ознакомиться с кратким руководством: [git - the simple guide |https://rogerdudler.github.io/git-guide/], или использовать один из многочисленных графических инструментов: [GIT - GUI-клиенты |https://git-scm.com/downloads/guis].

Отредактируйте документацию, создав форк репозитория [nette/docs |https://github.com/nette/docs] и клонировав его на свой компьютер. Затем в соответствующей ветке внесите изменения, зафиксируйте их, переместите в свой форк на GitHub, а затем отправьте запрос на исправление (PR) в исходный репозиторий `nette/docs`.

Перед каждым запросом на исправление рекомендуется запустить [Code-Checker |code-checker:], который проверяет наличие лишних пробелов в тексте.

Вы можете вносить дальнейшие изменения в созданный запрос на доработку. Никогда не создавайте новый запрос на вытягивание только для внесения изменений.


Структура документации .[#toc-documentation-structure]
------------------------------------------------------

Вся документация находится на GitHub в репозитории [nette/docs |https://github.com/nette/docs]. Текущая версия находится в ветке master, а старые версии расположены в ветках `doc-3.x`, `doc-2.x`.

Содержимое каждой ветки разделено на основные папки, представляющие отдельные области документации. Например, `application/` соответствует https://doc.nette.org/en/application, `latte/` соответствует https://latte.nette.org, и т.д. Каждая из этих папок содержит вложенные папки, представляющие языковые мутации (`cs`, `en`, ...) и, по желанию, вложенную папку `files` с изображениями, которые могут быть вставлены в страницы документации.
