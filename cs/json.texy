Formát JSON
***********

.[perex]
[Nette\Utils\Json |api:] je statická třída s užitečnými funkcemi pro práci s formátem JSON. Ošetřuje chyby různých verzí PHP a při chybě vyhazuje výjimky.

Instalace:

```shell
composer require nette/utils
```

Použití
=======

encode(mixed $value, int $flags=0): string .[method]
----------------------------------------------------

Vrací JSON reprezentaci předané hodnoty `$value`. Flag může být `Json::PRETTY`, který umí JSON naformátovat pro snažší čtení a přehlednost.

```php
use Nette\Utils\Json;

Json::encode($value); // Vrací JSON reprezentaci hodnoty $value
Json::encode($value, Json::PRETTY); // Vrací naformátovanou JSON reprezentaci hodnoty $value
```

Při chybě vyhazuje volání funkce `encode()` výjimku `Nette\Utils\JsonException`.

```php
try {
	$json = Json::encode($value);
} catch (Nette\Utils\JsonException $e) {
	// Ošetření výjimky
}
```


decode(string $json, int $flags=0): mixed .[method]
---------------------------------------------------

Převede daný JSON do objektu nebo pole. Flag může být `Json::FORCE_ARRAY`, který vynutí vrácení pole namísto objektu.

```php
Json::decode('{"variable": true}'); // Vrací objekt typu stdClass s atributem $variable
Json::decode('{"variable": true}', Json::FORCE_ARRAY); // Vrací pole s klíčem "variable" a hodnotou true
```

Při chybě vyhazuje volání funkce `decode()` výjimku `Nette\Utils\JsonException`.

```php
try {
	$value = Json::decode($json);
} catch (Nette\Utils\JsonException $e) {
	// Ošetření výjimky
}
```


MVC - Presenter
===============

Jak odeslat JSON z presenteru? Lze k tomu použít metodu `$this->sendJson($data)`, kterou můžeme zavolat třeba v metodě `action**()`.

Zavoláním `sendJson()` dojde k okamžitému ukončení zpracování presenteru. Více informací v popisu [životního cyklu presenteru|presenters#zivotni-cyklus-presenteru].


{{composer: nette/utils}}
