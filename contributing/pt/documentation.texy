Redação de documentação
***********************

.[perex]
Contribuir com documentação é uma das atividades mais gratificantes porque você ajuda os outros a entender a estrutura.


Edições rápidas .[#toc-quick-edits]
-----------------------------------

A maneira mais fácil de editar o texto na documentação é usar os links na parte inferior de cada página:

- *Show on GitHub* abre a versão de origem da página no GitHub. Depois basta pressionar o botão `E` e você pode começar a editar (você deve estar logado no GitHub)
- *Abrir visualização* abre o editor, onde você também pode ver a forma visual resultante.

Como o editor de visualização não tem a capacidade de salvar as mudanças diretamente no GitHub, você deve copiar o texto fonte para a área de transferência (usando o botão *Copiar para a área de transferência*) e depois colá-lo no editor do GitHub quando terminar de editar.
Abaixo da caixa de edição há um formulário a ser enviado. Não deixe de resumir e explicar brevemente o motivo de sua edição aqui. Uma vez submetido, será criado um pedido de puxar que pode ser editado posteriormente.


Como Escrever? .[#toc-how-to-write]
-----------------------------------

A documentação é principalmente para pessoas que são novatas no assunto. Portanto, ela deve atender a vários pontos importantes:

- **Ao escrever, parta do simples e geral. Avançar para tópicos mais avançados no final.**
- Incluir apenas as informações que o usuário realmente precisa saber sobre o tópico.
- Verifique se suas informações são realmente verdadeiras. Teste o código primeiro antes de fornecê-lo.
- Seja conciso - reduza o que você escreve pela metade. E depois faça-o novamente.
- Tente explicar o assunto o melhor que puder. Por exemplo, tente explicar o assunto a um colega primeiro.
- Poupe os marcadores de todos os tipos, do tipo negrito a caixas como `.[note]`.

Mantenha estes pontos em mente ao longo de sua redação. Aprenda a lidar com a [sintaxe |syntax] também. Você pode usar um [editor de pré-visualização |https://editor.nette.org/] para pré-visualizar o artigo ao escrevê-lo.

Além dos pontos acima, observe também as seguintes diretrizes:

- O inglês é o idioma principal, portanto, suas mudanças devem ser em ambos os idiomas. Se o inglês não for seu ponto forte, use [DeepL Tradutor |https://www.deepl.com/translator] e outros revisarão seu texto.
- Siga a [Norma de Codificação |Coding Standard] nos exemplos.
- Escreva os nomes das variáveis, classes e métodos em inglês.
- Namespaces devem ser dados na primeira menção.
- Tente formatar seu código para que as barras de rolagem não sejam exibidas.
- Para documentação, consulte apenas a documentação ou `www`.


Contribuição para a documentação .[#toc-contributing-to-the-documentation]
--------------------------------------------------------------------------

Você deve ter uma conta [GitHub |https://github.com] para contribuir com a documentação. Você pode fazer mudanças simples diretamente em sua interface.

Entretanto, é mais útil conhecer o básico do trabalho com o sistema de versões Git. Se você não está familiarizado com Git, pode verificar este guia rápido: [git - o guia simples |https://rogerdudler.github.io/git-guide/], ou usar uma das muitas ferramentas gráficas: [GIT - clientes GUI |https://git-scm.com/downloads/guis].

Comece a editar a documentação criando um garfo do repositório [nette/docs |https://github.com/nette/docs] e clonando isso em seu computador. Em seguida, faça mudanças no ramo apropriado, comprometa a mudança, empurre para seu repositório GitHub e envie um pedido de puxar para o repositório original `nette/docs`.

Antes de cada solicitação de puxar, é uma boa idéia executar o [Code-Checker |code-checker:] para verificar a existência de espaços extras no texto.


Estrutura de documentação .[#toc-documentation-structure]
---------------------------------------------------------

Toda a documentação está hospedada no GitHub, no repositório [nette/docs |https://github.com/nette/docs]. A versão atual está no master, as versões mais antigas estão localizadas em filiais como `doc-3.x`, `doc-2.x`.

O conteúdo de cada filial é dividido em pastas principais que representam cada área da documentação. Por exemplo, `application/` corresponde a https://doc.nette.org/en/application, `latte/` corresponde a https://latte.nette.org, etc. Cada uma destas pastas contém subpastas que representam as versões em idiomas (`cs`, `en`, ...) e possivelmente uma subpasta `files` com imagens que podem ser embutidas nas páginas de documentação.


{{priority: -1}}
