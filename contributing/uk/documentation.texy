Написання документації
**********************

.[perex]
Внесок у створення документації є одним з найбільш корисних видів діяльності, тому що ви допомагаєте іншим зрозуміти фреймворк.


Швидке редагування .[#toc-quick-edits]
--------------------------------------

Найпростіший спосіб редагування тексту в документації - скористатися посиланнями внизу кожної сторінки:

- *Показати на GitHub* відкриває вихідну версію сторінки на GitHub. Потім просто натисніть кнопку `E` і ви можете почати редагування (ви повинні бути зареєстровані на GitHub)
- *Відкрити попередній перегляд* відкриває редактор, де ви також можете побачити візуальну форму результату.

Оскільки редактор попереднього перегляду не має можливості зберігати зміни безпосередньо на GitHub, ви повинні скопіювати вихідний текст в буфер обміну (за допомогою кнопки *Копіювати в буфер обміну*), а потім вставити його в редактор GitHub, коли ви закінчите редагування.
Під полем редагування знаходиться форма для відправки. Не забудьте коротко підсумувати і пояснити причину вашого редагування тут. Після відправлення буде створено запит, який можна буде редагувати далі.


Як написати? .[#toc-how-to-write]
---------------------------------

Документація в основному призначена для людей, які не знайомі з темою. Тому вона повинна відповідати кільком важливим пунктам:

- **При написанні починайте з простого і загального. Переходьте до більш складних тем наприкінці.**.
- Включайте тільки ту інформацію, яку користувачеві дійсно потрібно знати про тему.
- Переконайтеся, що ваша інформація дійсно правдива. Спершу протестуйте код, перш ніж публікувати його.
- Будьте лаконічними - скоротіть написане вдвічі. А потім зробіть це ще раз.
- Намагайтеся пояснити питання якомога краще. Наприклад, спробуйте спочатку пояснити тему колезі.
- Відмовтеся від усіх видів виділень, від напівжирного шрифту до рамок на кшталт `.[note]`.

Пам'ятайте про ці моменти під час написання статті. Опануйте також [синтаксис |syntax]. Ви можете використовувати [редактор |https://editor.nette.org/] попереднього перегляду, щоб переглянути статтю під час її написання.

На додаток до вищезазначених пунктів, також дотримуйтесь наступних рекомендацій:

- Англійська є основною мовою, тому ваші зміни повинні бути на обох мовах. Якщо англійська не є вашою сильною стороною, скористайтеся перекладачем [DeepL |https://www.deepl.com/translator], і інші люди вичитають ваш текст.
- Дотримуйтесь [стандарту кодування |Coding Standard] у прикладах.
- Пишіть імена змінних, класів і методів англійською мовою.
- Простори імен слід вказувати при першій згадці.
- Намагайтеся форматувати код так, щоб не відображалися смуги прокрутки.
- За документацією звертайтеся тільки до документації або `www`.


Доповнення документації .[#toc-contributing-to-the-documentation]
-----------------------------------------------------------------

Ви повинні мати обліковий запис на [GitHub |https://github.com], щоб зробити внесок у документацію. Ви можете вносити прості зміни безпосередньо в його інтерфейсі.

Однак корисніше знати основи роботи з системою версій Git. Якщо ви не знайомі з Git'ом, ви можете ознайомитися з цим коротким керівництвом: [git - простий |https://rogerdudler.github.io/git-guide/] посібник, або скористатися одним з багатьох графічних інструментів: [GIT - графічні клієнти |https://git-scm.com/downloads/guis].

Почніть редагування документації зі створення форка сховища [nette/docs |https://github.com/nette/docs] і клонування його на свій комп'ютер. Потім внесіть зміни у відповідну гілку, зафіксуйте зміни, перенесіть їх до вашого репозиторію на GitHub і надішліть запит на вилучення до оригінального репозиторію `nette/docs`.

Перед кожним pull-запитом варто запускати [Code-Checker |code-checker:], щоб перевірити наявність зайвих пробілів у тексті.


Структура документації .[#toc-documentation-structure]
------------------------------------------------------

Вся документація розміщена на GitHub в репозиторії [nette/docs |https://github.com/nette/docs]. Поточна версія знаходиться в master, старіші версії знаходяться в гілках `doc-3.x`, `doc-2.x`.

Вміст кожної гілки розділений на основні папки, що представляють кожну область документації. Наприклад, `application/` відповідає https://doc.nette.org/en/application, `latte/` відповідає https://latte.nette.org і т.д. Кожна з цих папок містить підпапки, що представляють мовні версії (`cs`, `en`, ...) і, можливо, підпапку `files` з зображеннями, які можна вбудовувати на сторінки документації.


{{priority: -1}}
