Pomožne funkcije
****************

.[perex]
[api:Nette\Utils\Helpers] je statični razred z uporabnimi funkcijami.


Namestitev:

```shell
composer require nette/utils
```

Vsi primeri predpostavljajo ustvarjen vzdevek:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Izvede povratni klic (callback) in vrne zajeti izpis kot niz.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Omeji vrednost na dano inkluzivno območje min in max.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Primerja dve vrednosti na enak način, kot to počne PHP. Razlikuje operatorje `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>`.
Funkcija je uporabna v situacijah, ko je operator spremenljiv.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Pretvori `false` v `null`, drugih vrednosti ne spreminja.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Vrne zadnjo napako v PHP ali prazen niz, če ni prišlo do napake. V primerjavi z `error_get_last()` ni pod vplivom PHP direktive `html_errors` in vedno vrne besedilo, ne HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Iz ponujenih možnosti `$possibilities` išče niz, ki je najbolj podoben `$value`, vendar ni enak. Podpira samo 8-bitno kodiranje.

Uporabno je v primeru, ko določena izbira ni veljavna in želimo uporabniku svetovati podobno (vendar drugačno, zato se enak niz ignorira). Na ta način Nette ustvarja sporočila `did you mean ...?`.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
