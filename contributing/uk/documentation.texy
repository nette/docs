Написання документації
**********************

.[perex]
Внесок у документацію є одним з найцінніших видів діяльності, оскільки він допомагає іншим зрозуміти структуру.


Як писати? .[#toc-how-to-write]
-------------------------------

Документація в першу чергу призначена для людей, які є новачками в темі. Тому вона повинна відповідати декільком важливим пунктам:

- Починайте з простих і загальних тем. Переходьте до більш складних тем наприкінці
- Намагайтеся пояснювати тему якомога зрозуміліше. Наприклад, спробуйте спочатку пояснити тему колезі
- Надавайте лише ту інформацію, яку користувачеві дійсно потрібно знати з даної теми
- Переконайтеся, що ваша інформація точна. Тестуйте кожен код
- Будьте лаконічними - скорочуйте те, що пишете, вдвічі. А потім не соромтеся робити це ще раз
- Економно використовуйте виділення, від напівжирного шрифту до рамок, таких як `.[note]`
- Дотримуйтесь [стандарту кодування |Coding Standard] в коді

Також вивчайте [синтаксис |syntax]. Для попереднього перегляду статті під час написання ви можете скористатися [редактором попереднього перегляду |https://editor.nette.org/].


Мовні мутації .[#toc-language-mutations]
----------------------------------------

Англійська є основною мовою, тому ваші зміни повинні бути англійською. Якщо англійська не є вашою сильною стороною, скористайтеся [DeepL Перекладачем |https://www.deepl.com/translator], і інші перевірять ваш текст.

Переклад на інші мови буде зроблено автоматично після затвердження та уточнення вашої правки.


Тривіальні правки .[#toc-trivial-edits]
---------------------------------------

Щоб зробити свій внесок у документацію, вам потрібно мати обліковий запис на [GitHub |https://github.com].

Найпростіший спосіб внести невелику зміну в документацію - скористатися посиланнями в кінці кожної сторінки:

- *Показати на GitHub* відкриває вихідну версію сторінки на GitHub. Потім просто натисніть кнопку `E` і ви можете почати редагування (ви повинні бути зареєстровані на GitHub)
- *Відкрити попередній перегляд* відкриває редактор, де ви можете одразу побачити остаточний візуальний вигляд

Оскільки [редактор поперед |https://editor.nette.org/] нього перегляду не має можливості зберігати зміни безпосередньо на GitHub, вам потрібно скопіювати вихідний текст в буфер обміну (за допомогою кнопки *Копіювати в буфер обміну*), а потім вставити його в редактор на GitHub.
Під полем для редагування знаходиться форма для відправки. Тут не забудьте коротко підсумувати і пояснити причину вашого редагування. Після відправки створюється так званий pull request (PR), який можна надалі редагувати.


Більші редагування .[#toc-larger-edits]
---------------------------------------

Замість того, щоб використовувати інтерфейс GitHub, краще знати основи роботи з системою контролю версій Git. Якщо ви не знайомі з Git'ом, ви можете ознайомитися з коротким керівництвом: [git - простий |https://rogerdudler.github.io/git-guide/] посібник, або скористатися одним з багатьох графічних інструментів: [GIT - графічні клієнти |https://git-scm.com/downloads/guis].

Відредагуйте документацію, створивши форк сховища [nette/docs |https://github.com/nette/docs] і клонувавши його на свій комп'ютер. Потім у відповідній гілці внесіть зміни, зафіксуйте їх, перенесіть у свій форк на GitHub, а потім надішліть запит на вилучення (PR) до оригінального репозиторію `nette/docs`.

Перед кожним pull request варто запускати [Code-Checker |code-checker:], який перевіряє наявність зайвих пробілів у тексті.

Ви можете вносити подальші зміни до вже створеного запиту. Ніколи не створюйте новий запит лише для редагування.


Структура документації .[#toc-documentation-structure]
------------------------------------------------------

Вся документація знаходиться на GitHub в репозиторії [nette/docs |https://github.com/nette/docs]. Поточна версія знаходиться в головній гілці, тоді як старіші версії знаходяться в гілках `doc-3.x`, `doc-2.x`.

Вміст кожної гілки розділено на основні папки, що представляють окремі області документації. Наприклад, `application/` відповідає https://doc.nette.org/en/application, `latte/` відповідає https://latte.nette.org і т.д. Кожна з цих папок містить підпапки, що представляють мовні мутації (`cs`, `en`, ...) і додатково підпапку `files` з зображеннями, які можна вставляти на сторінки документації.
