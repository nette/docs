Zrzucanie
*********

Każdy debugger jest dobrym przyjacielem funkcji [php:var_dump], która szczegółowo wyrzuca zawartość zmiennej. Niestety, w środowisku HTML, zrzut traci formatowanie i zwala się na jedną linię, nie wspominając o sanityzacji kodu HTML. W praktyce konieczne jest zastąpienie `var_dump` funkcją poręczniejszą. To jest `dump()`.

```php
$arr = [10, 20.2, true, null, 'hello'];

dump($arr);
// nebo Debugger::dump($arr);
```

generuje wyjście:

[* dump-basic.webp *]

Możesz zmienić domyślny jasny motyw na ciemny:

```php
Debugger::$dumpTheme = 'dark';
```

[* dump-dark.webp *]

Możemy również zmienić głębię pola za pomocą [Debugger::$maxDepth |api:Tracy\Debugger::$maxDepth] oraz długość wyświetlanych etykiet za pomocą [Debugger::$maxLength |api:Tracy\Debugger::$maxLength]. Niższe wartości naturalnie przyspieszą działanie debugera.

```php
Debugger::$maxDepth = 2; // default: 3
Debugger::$maxLength = 50; // default: 150
```

Funkcja `dump()` może również wyprowadzać inne przydatne informacje. Stała `Tracy\Dumper::LOCATION_SOURCE` dodaje tooltip ze ścieżką do miejsca, w którym wywołano funkcję. `Tracy\Dumper::LOCATION_LINK` daje nam link do tego miejsca. `Tracy\Dumper::LOCATION_CLASS` Dla każdego zrzuconego obiektu wypisuje tooltip ze ścieżką do pliku definiującego jego klasę. Stałe ustawiamy w zmiennej `Debugger::$showLocation` przed wywołaniem `dump()`. Jeśli chcemy ustawić wiele wartości naraz, konkatenujemy je za pomocą operatora `|`.

```php
Debugger::$showLocation = Tracy\Dumper::LOCATION_SOURCE; // Nastaví pouze výpis o místě volání funkce
Debugger::$showLocation = Tracy\Dumper::LOCATION_CLASS | Tracy\Dumper::LOCATION_LINK; // Nastaví zároveň výpis odkazu a cestu ke třídě
Debugger::$showLocation = false; // Vypne výpis dodatečných informací
Debugger::$showLocation = true; // Zapne výpis všech dodatečných informací
```

Praktycznymi alternatywami dla `dump()` są `dumpe()` (dump & exit) oraz `bdump()`. Ten ostatni pozwala nam zrzucić wartość zmiennej w Tracy Bar. Jest to bardzo przydatne, ponieważ zrzuty są oddzielone od układu strony, a dodatkowo możemy umieścić na nich komentarz.

```php
bdump([2, 4, 6, 8], 'sudá čísla do deseti');
bdump([1, 3, 5, 7, 9], 'lichá čísla do deseti');
```

[* bardump-cs.webp *]
