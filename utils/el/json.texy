Λειτουργίες JSON
****************

.[perex]
[api:Nette\Utils\Json] είναι μια στατική κλάση με συναρτήσεις κωδικοποίησης και αποκωδικοποίησης JSON. Αντιμετωπίζει ευπάθειες σε διάφορες εκδόσεις της PHP και πετάει εξαιρέσεις σε σφάλματα.

Εγκατάσταση:

```shell
composer require nette/utils
```

Όλα τα παραδείγματα προϋποθέτουν ότι έχει οριστεί το ακόλουθο ψευδώνυμο κλάσης:

```php
use Nette\Utils\Json;
```


Χρήση .[#toc-usage]
===================


encode(mixed $value, bool $pretty=false, bool $asciiSafe=false, bool $htmlSafe=false, bool $forceObjects=false): string .[method]
---------------------------------------------------------------------------------------------------------------------------------

Μετατρέπει το `$value` σε μορφή JSON.

Όταν έχει οριστεί το `$pretty`, μορφοποιεί το JSON για ευκολότερη ανάγνωση και σαφήνεια:

```php
Json::encode($value); // επιστρέφει JSON
Json::encode($value, pretty: true); // επιστρέφει πιο ξεκάθαρο JSON
```

Όταν έχει οριστεί το `$asciiSafe`, παράγει έξοδο ASCII, δηλαδή αντικαθιστά τους χαρακτήρες unicode με ακολουθίες `\uxxxx`:

```php
Json::encode('žluťoučký', asciiSafe: true);
// '"\u017elu\u0165ou\u010dk\u00fd"'
```

Η παράμετρος `$htmlSafe` διασφαλίζει ότι η έξοδος δεν περιέχει χαρακτήρες με ειδική σημασία στην HTML:

```php
Json::encode('one<two & three', htmlSafe: true);
// '"one\u003Ctwo \u0026 three"'
```

Με την παράμετρο `$forceObjects`, ακόμη και πίνακες με αριθμητικά κλειδιά θα κωδικοποιηθούν ως αντικείμενα JavaScript:

```php
Json::encode(['a', 'b', 'c']);
// '["a","b","c"]'
Json::encode(['a', 'b', 'c'], forceObjects: true);
// '{"0":"a","1":"b","2":"c"}'
```

 `Nette\Utils\JsonException` εξαίρεση σε περίπτωση σφάλματος.

```php
try {
	$json = Json::encode($value);
} catch (Nette\Utils\JsonException $e) {
	// Χειρισμός εξαιρέσεων
}
```


decode(string $json, bool $forceArray=false): mixed .[method]
-------------------------------------------------------------

Αναλύει JSON σε PHP.

Η ρύθμιση `$forceArray` επιβάλλει την επιστροφή πινάκων αντί για αντικείμενα:

```php
Json::decode('{"variable": true}'); // επιστρέφει ένα αντικείμενο τύπου stdClass
Json::decode('{"variable": true}', forceArray: true); // επιστρέφει έναν πίνακα
```

Εκπέμπει μια εξαίρεση `Nette\Utils\JsonException` σε περίπτωση σφάλματος.

```php
try {
	$value = Json::decode($json);
} catch (Nette\Utils\JsonException $e) {
	// Χειρισμός εξαιρέσεων
}
```


Πώς να στείλετε ένα JSON από έναν παρουσιαστή; .[#toc-how-to-send-a-json-from-a-presenter]
==========================================================================================

Μπορείτε να χρησιμοποιήσετε τη μέθοδο `$this->sendJson($data)`, η οποία μπορεί να κληθεί, για παράδειγμα, στη μέθοδο `action*()`, βλέπε [Αποστολή απάντησης |application:presenters#Sending a Response].
