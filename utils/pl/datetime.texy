Data i czas
***********

.[perex]
[api:Nette\Utils\DateTime] to klasa, która rozszerza natywną [php:DateTime] o dodatkowe funkcje.


Instalacja:

```shell
composer require nette/utils
```

Wszystkie przykłady zakładają utworzony alias:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Tworzy obiekt DateTime z ciągu znaków, znacznika czasu UNIX lub innego obiektu [php:DateTimeInterface]. Rzuca wyjątek `Exception`, jeśli data i czas nie są prawidłowe.

```php
DateTime::from(1138013640); // tworzy DateTime ze znacznika czasu UNIX z domyślną strefą czasową
DateTime::from(42); // tworzy DateTime z bieżącego czasu plus 42 sekundy
DateTime::from('1994-02-26 04:15:32'); // tworzy DateTime na podstawie ciągu znaków
DateTime::from('1994-02-26'); // tworzy DateTime na podstawie daty, czas będzie 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Tworzy obiekt DateTime lub rzuca wyjątek `Nette\InvalidArgumentException`, jeśli data i czas nie są prawidłowe.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, ?string|\DateTimeZone $timezone=null): DateTime|false .[method]
---------------------------------------------------------------------------------------------------------------------
Rozszerza [DateTime::createFromFormat()|https://www.php.net/manual/en/datetime.createfromformat.php] o możliwość podania strefy czasowej jako ciągu znaków.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Tworzy kopię ze zmodyfikowanym czasem.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Zwraca datę i czas w formacie `Y-m-d H:i:s`.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


implementuje JsonSerializable
-----------------------------
Zwraca datę i czas w formacie ISO 8601, który jest używany na przykład w JavaScript.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
