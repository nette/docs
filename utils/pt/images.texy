Funções de imagem
*****************

.[perex]
A classe [api:Nette\Utils\Image] simplifica a manipulação de imagens, tais como redimensionamento, corte, nitidez, desenho ou fusão de múltiplas imagens.

O PHP tem um extenso conjunto de funções para manipulação de imagens. Mas a API não é muito agradável. Não seria uma boa estrutura para se criar um API sexy.

Instalação:

```shell
composer require nette/utils
```

Os exemplos a seguir assumem que a seguinte classe está definida:

```php
use Nette\Utils\Image;
```


Criação de uma imagem .[#toc-creating-an-image]
===============================================

Vamos criar uma nova imagem colorida verdadeira, por exemplo, com dimensões de 100×200:

```php
$image = Image::fromBlank(100, 200);
```

Opcionalmente, você pode especificar uma cor de fundo (o padrão é preto):

```php
$image = Image::fromBlank(100, 200, Image::rgb(125, 0, 0));
```

Ou carregamos a imagem de um arquivo:

```php
$image = Image::fromFile('nette.jpg');
```

Necessidade de detectar o formato da imagem ao carregar? O formato de retorno do método no segundo parâmetro:

```php
$image = Image::fromFile('nette.jpg', $type);
// $type é Imagem::JPEG, Imagem::PNG, Imagem::GIF, Imagem::WEBP ou Imagem::BMP
```

A detecção sem carga é realizada por `Image::detectTypeFromFile()` pode ser utilizada.


Salvar a imagem .[#toc-save-the-image]
======================================

A imagem pode ser salva em um arquivo:

```php
$image->save('resampled.jpg');
```

Podemos especificar a qualidade de compressão na faixa 0..100 para JPEG (padrão 85) e WEBP (padrão 80) e 0..9 para PNG (padrão 9):

```php
$image->save('resampled.jpg', 80); // JPEG, qualidade 80%
```

Se o formato não for óbvio na extensão do arquivo, você pode especificá-lo com uma das constantes `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`:

```php
$image->save('resampled.tmp', null, Image::JPEG);
```

A imagem pode ser escrita em uma variável ao invés de em disco:

```php
$data = $image->toString(Image::JPEG, 80); // JPEG, qualidade 80%.
```

ou enviar diretamente para o navegador com o cabeçalho HTTP apropriado `Content-Type`:

```php
// envia cabeçalho Content-Type: imagem/png
$image->send(Image::PNG);
```


Redimensionamento de imagem .[#toc-image-resize]
================================================

Uma operação comum é redimensionar uma imagem. As dimensões atuais são devolvidas pelos métodos `getWidth()` e `getHeight()`.

O método `resize()` é utilizado para o redimensionamento. Este é um exemplo de mudança de tamanho proporcional para que não exceda 500×300 pixels (ou a largura será exatamente 500px ou a altura será exatamente 300px, uma das dimensões é calculada para manter a relação de aspecto):

```php
$image->resize(500, 300);
```

É possível definir apenas uma dimensão e a segunda será calculada:

```php
$image->resize(500, null); // largura 500px, altura auto

$image->resize(null, 300); // largura auto, altura 300px
```

Qualquer dimensão pode ser especificada em porcentagens:

```php
$image->resize('75%', 300); // 75 % × 300px
```

O comportamento de `resize` pode ser influenciado pelas seguintes bandeiras. Todos, exceto `Image::Stretch`, preservam a relação de aspecto.

|---------------------------------------------------------------------------------------
| Bandeira | Descrição
|---------------------------------------------------------------------------------------
| `Image::OrSmaller` (padrão) | as dimensões resultantes serão menores ou iguais, conforme especificado
| `Image::OrBigger` | preenche a área de destino e possivelmente a estende em uma direção
| `Image::Cover` | preenche toda a área e corta o que a excede
| `Image::ShrinkOnly` | apenas balança para baixo (não estende uma pequena imagem)
| `Image::Stretch` | não mantém a relação de aspecto


As bandeiras são passadas como o terceiro argumento da função:

```php
$image->resize(500, 300, Image::OrBigger);
```

As bandeiras podem ser combinadas:

```php
$image->resize(500, 300, Image::ShrinkOnly | Image::Stretch);
```

As imagens podem ser viradas verticalmente ou horizontalmente especificando uma das dimensões (ou ambas) como um número negativo:

```php
$flipped = $image->resize(null, '-100%'); // inverter vertical

$flipped = $image->resize('-100%', '-100%'); // girar em 180°

$flipped = $image->resize(-125, 500); // redimensionar e virar horizontal
```

Depois de reduzir a imagem, podemos melhorá-la através da nitidez:

```php
$image->sharpen();
```


Cultivo .[#toc-cropping]
========================

O método `crop()` é utilizado para o cultivo:

```php
$image->crop($left, $top, $width, $height);
```

Como em `resize()`, todos os valores podem ser especificados em porcentagens. As porcentagens para `$left` e `$top` são calculadas a partir do espaço restante, semelhante à propriedade do CSS `background-position`:

```php
$image->crop('100%', '50%', '80%', '80%');
```

[* crop.svg *]


A imagem também pode ser cortada automaticamente, por exemplo, bordas pretas cortadas:

```php
$image->cropAuto(IMG_CROP_BLACK);
```

O método `cropAuto()` é um encapsulamento de objeto da função `imagecropauto()`, veja [sua documentação |https://www.php.net/manual/en/function.imagecropauto] para mais informações.


Desenho e Edição .[#toc-drawing-and-editing]
============================================

Você pode desenhar, você pode escrever, você pode usar todas as funções PHP para trabalhar com imagens, tais como [imagefilledellipse() |https://www.php.net/manual/en/function.imagefilledellipse.php], mas usando o estilo de objeto:

```php
$image->filledEllipse($cx, $cy, $width, $height, Image::rgb(255, 0, 0, 63));
```

Veja [Visão geral dos métodos |#Overview of Methods].


Fundir várias imagens .[#toc-merge-multiple-images]
===================================================

Você pode facilmente colocar outra imagem dentro da imagem:

```php
$logo = Image::fromFile('logo.png');
$blank = Image::fromBlank(320, 240, Image::rgb(52, 132, 210));

// as coordenadas também podem ser definidas em porcentagem
$blank->place($logo, '80%', '80%'); // perto do canto inferior direito
```

Ao colar, o canal alfa é respeitado, além disso, podemos influenciar a transparência da imagem inserida (criaremos uma chamada marca d'água):

```php
$blank->place($image, '80%', '80%', 25); // transparência é 25
```

Tal API é realmente um prazer de usar, não é?


Visão geral dos métodos .[#toc-overview-of-methods]
===================================================


static fromBlank(int $width, int $height, array $color=null): Image .[method]
-----------------------------------------------------------------------------
Cria uma nova imagem colorida verdadeira das dimensões dadas. A cor padrão é o preto.


static fromFile(string $file, int &$detectedFormat=null): Image .[method]
-------------------------------------------------------------------------
Lê uma imagem de um arquivo e retorna seu tipo em `$detectedFormat`. Os tipos suportados são `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`.


static fromString(string $s, int &$detectedFormat=null): Image .[method]
------------------------------------------------------------------------
Lê uma imagem de uma corda e retorna seu tipo em `$detectedFormat`. Os tipos suportados são `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`.


static rgb(int $red, int $green, int $blue, int $transparency=0): array .[method]
---------------------------------------------------------------------------------
Cria uma cor que pode ser usada em outros métodos, tais como `ellipse()`, `fill()` e assim por diante.


static typeToExtension(int $type): string .[method]
---------------------------------------------------
Devolve a extensão do arquivo para a constante `Image::XXX` dada.


static typeToMimeType(int $type): string .[method]
--------------------------------------------------
Devolve o tipo de mímica para a constante `Image::XXX` dada.


static extensionToType(string $extension): int .[method]
--------------------------------------------------------
Retorna o tipo de imagem como uma constante `Image::XXX` de acordo com a extensão do arquivo.


static detectTypeFromFile(string $file, int &$width=null, int &$height=null): ?int .[method]
--------------------------------------------------------------------------------------------
Retorna o tipo de arquivo de imagem como constante `Image::XXX` e nos parâmetros `$width` e `$height` também suas dimensões.


static detectTypeFromString(string $s, int &$width=null, int &$height=null): ?int .[method]
-------------------------------------------------------------------------------------------
Retorna o tipo de imagem de corda como constante `Image::XXX` e nos parâmetros `$width` e `$height` também suas dimensões.


affine(array $affine, array $clip=null): Image .[method]
--------------------------------------------------------
Retorna uma imagem contendo a imagem src transformada afim, usando uma área de recorte opcional. ([mais |https://www.php.net/manual/en/function.imageaffine]).


affineMatrixConcat(array $m1, array $m2): array .[method]
---------------------------------------------------------
Retorna a concatenação de duas matrizes de transformação afins, que é útil se múltiplas transformações devem ser aplicadas à mesma imagem de uma só vez. ([mais |https://www.php.net/manual/en/function.imageaffinematrixconcat])


affineMatrixGet(int $type, mixed $options=null): array .[method]
----------------------------------------------------------------
Devolve uma matriz de transformação afim. ([mais |https://www.php.net/manual/en/function.imageaffinematrixget])


alphaBlending(bool $on): void .[method]
---------------------------------------
Permite dois modos diferentes de desenhar em imagens truecolor. No modo de mistura, o componente de canal alfa da cor fornecida a todas as funções de desenho, como `setPixel()`, determina quanto da cor subjacente deve ser permitido brilhar. Como resultado, ele mistura automaticamente a cor existente naquele ponto com a cor do desenho, e armazena o resultado na imagem. O pixel resultante é opaco. No modo sem mistura, a cor do desenho é copiada literalmente com suas informações do canal alfa, substituindo o pixel de destino. O modo de mistura não está disponível quando se desenha em imagens de paleta. ([mais |https://www.php.net/manual/en/function.imagealphablending])


antialias(bool $on): void .[method]
-----------------------------------
Ativar os métodos de desenho rápido antialiased para linhas e polígonos com fio. Ele não suporta componentes alfa. Funciona através de uma operação de mistura direta. Funciona apenas com imagens trégua-cores.

O uso de primitivos antialiased com cor de fundo transparente pode terminar com alguns resultados inesperados. O método de mistura utiliza a cor de fundo como qualquer outra cor. A falta de suporte de componentes alfa não permite um método antialiasing baseado em alfa. ([mais |https://www.php.net/manual/en/function.imageantialias])


arc(int $x, int $y, int $w, int $h, int $start, int $end, int $color): void .[method]
-------------------------------------------------------------------------------------
Desenha um arco de círculo centrado nas coordenadas dadas. ([mais |https://www.php.net/manual/en/function.imagearc])


char(int $font, int $x, int $y, string $char, int $color): void .[method]
-------------------------------------------------------------------------
Traça o primeiro caractere de `$char` na imagem com sua parte superior esquerda em `$x`,`$y` (parte superior esquerda é 0, 0) com a cor `$color`. ([mais |https://www.php.net/manual/en/function.imagechar])


charUp(int $font, int $x, int $y, string $char, int $color): void .[method]
---------------------------------------------------------------------------
Traça o caracter `$char` verticalmente na coordenada especificada na imagem dada. ([mais |https://www.php.net/manual/en/function.imagecharup])


colorAllocate(int $red, int $green, int $blue): int .[method]
-------------------------------------------------------------
Retorna um identificador de cor que representa a cor composta dos componentes RGB. Ela deve ser chamada para criar cada cor a ser usada na imagem. ([mais |https://www.php.net/manual/en/function.imagecolorallocate])


colorAllocateAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
------------------------------------------------------------------------------
Comportamento idêntico ao de `colorAllocate()` com a adição do parâmetro de transparência `$alpha`. ([mais |https://www.php.net/manual/en/function.imagecolorallocatealpha])


colorAt(int $x, int $y): int .[method]
--------------------------------------
Retorna o índice da cor do pixel no local especificado na imagem. Se a imagem for uma imagem verdadeira, esta função retorna o valor RGB daquele pixel como inteiro. Use bitshifting e mascaramento para acessar os distintos valores dos componentes vermelho, verde e azul: ([mais |https://www.php.net/manual/en/function.imagecolorat])


colorClosest(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Retorna o índice da cor na paleta da imagem que é "o mais próximo" do valor RGB especificado. A "distância" entre a cor desejada e cada cor da paleta é calculada como se os valores RGB representassem pontos no espaço tridimensional. ([mais |https://www.php.net/manual/en/function.imagecolorclosest])


colorClosestAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Retorna o índice da cor na paleta da imagem que é "mais próxima" do valor RGB especificado e do nível `$alpha`. ([mais |https://www.php.net/manual/en/function.imagecolorclosestalpha])


colorClosestHWB(int $red, int $green, int $blue): int .[method]
---------------------------------------------------------------
Obtenha o índice da cor que tem a tonalidade, branco e negro mais próximo da cor dada. ([mais |https://www.php.net/manual/en/function.imagecolorclosesthwb])


colorDeallocate(int $color): void .[method]
-------------------------------------------
Desaloca uma cor previamente alocada com `colorAllocate()` ou `colorAllocateAlpha()`. ([mais |https://www.php.net/manual/en/function.imagecolordeallocate])


colorExact(int $red, int $green, int $blue): int .[method]
----------------------------------------------------------
Retorna o índice da cor especificada na paleta da imagem. ([mais |https://www.php.net/manual/en/function.imagecolorexact])


colorExactAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
---------------------------------------------------------------------------
Retorna o índice da cor+alfa especificada na paleta da imagem. ([mais |https://www.php.net/manual/en/function.imagecolorexactalpha])


colorMatch(Image $image2): void .[method]
-----------------------------------------
Faz com que as cores da versão paleta de uma imagem correspondam mais de perto à versão de cor verdadeira. ([mais |https://www.php.net/manual/en/function.imagecolormatch])


colorResolve(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Retorna um índice de cor para uma cor solicitada, seja a cor exata ou a alternativa mais próxima possível. ([mais |https://www.php.net/manual/en/function.imagecolorresolve])


colorResolveAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Retorna um índice de cor para uma cor solicitada, seja a cor exata ou a alternativa mais próxima possível. ([mais |https://www.php.net/manual/en/function.imagecolorresolvealpha])


colorSet(int $index, int $red, int $green, int $blue): void .[method]
---------------------------------------------------------------------
Isto define o índice especificado na paleta para a cor especificada. ([mais |https://www.php.net/manual/en/function.imagecolorset])


colorsForIndex(int $index): array .[method]
-------------------------------------------
Obtém a cor para um índice especificado. ([mais |https://www.php.net/manual/en/function.imagecolorsforindex])


colorsTotal(): int .[method]
----------------------------
Retorna o número de cores em uma paleta de imagens ([mais |https://www.php.net/manual/en/function.imagecolorstotal]).


colorTransparent(int $color=null): int .[method]
------------------------------------------------
Obtém ou define a cor transparente na imagem. ([mais |https://www.php.net/manual/en/function.imagecolortransparent])


convolution(array $matrix, float $div, float $offset): void .[method]
---------------------------------------------------------------------
Aplica uma matriz de convolução sobre a imagem, usando o coeficiente dado e o offset. ([mais |https://www.php.net/manual/en/function.imageconvolution])

.[note]
Exige *extensão de GD fundida*, por isso não é certo que funcione em todos os lugares.


copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH): void .[method]
--------------------------------------------------------------------------------------------------
Copia uma parte de `$src` na imagem a partir das coordenadas `$srcX`, `$srcY` com uma largura de `$srcW` e uma altura de `$srcH`. A parte definida será copiada para as coordenadas, `$dstX` e `$dstY`. ([mais |https://www.php.net/manual/en/function.imagecopy])


copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
---------------------------------------------------------------------------------------------------------------------
Copia uma parte de `$src` na imagem a partir das coordenadas `$srcX`, `$srcY` com uma largura de `$srcW` e uma altura de `$srcH`. A parte definida será copiada para as coordenadas, `$dstX` e `$dstY`. ([mais |https://www.php.net/manual/en/function.imagecopymerge])


copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
-------------------------------------------------------------------------------------------------------------------------
Copia uma parte de `$src` na imagem a partir das coordenadas `$srcX`, `$srcY` com uma largura de `$srcW` e uma altura de `$srcH`. A parte definida será copiada para as coordenadas, `$dstX` e `$dstY`.

Esta função é idêntica a `copyMerge()` exceto que ao fundir preserva a tonalidade da fonte ao converter os pixels de destino em escala de cinza antes da operação de cópia. ([mais |https://www.php.net/manual/en/function.imagecopymergegray])


copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
---------------------------------------------------------------------------------------------------------------------------------
Copia uma porção retangular de uma imagem para outra imagem, interpolando suavemente os valores de pixels para que, em particular, a redução do tamanho de uma imagem ainda retenha uma grande quantidade de clareza.

Em outras palavras, `copyResampled()` tomará uma área retangular de `$src` de largura `$srcW` e altura `$srcH` na posição (`$srcX`,`$srcY`) e a colocará em uma área retangular de imagem de largura `$dstW` e altura `$dstH` na posição (`$dstX`,`$dstY`).

Se as coordenadas de origem e destino e a largura e altura diferirem, será realizado o estiramento ou encolhimento apropriado do fragmento de imagem. As coordenadas se referem ao canto superior esquerdo. Esta função pode ser usada para copiar regiões dentro da mesma imagem, mas se as regiões se sobrepuserem, os resultados serão imprevisíveis. ([mais |https://www.php.net/manual/en/function.imagecopyresampled])


copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
-------------------------------------------------------------------------------------------------------------------------------
Copia uma porção retangular de uma imagem para outra imagem. Em outras palavras, `copyResized()` tomará uma área retangular de `$src` de largura `$srcW` e altura `$srcH` na posição (`$srcX`,`$srcY`) e a colocará em uma área retangular de imagem de largura `$dstW` e altura `$dstH` na posição (`$dstX`,`$dstY`).

Se as coordenadas de origem e destino e a largura e altura diferirem, será realizado o estiramento ou encolhimento apropriado do fragmento de imagem. As coordenadas se referem ao canto superior esquerdo. Esta função pode ser usada para copiar regiões dentro da mesma imagem, mas se as regiões se sobrepuserem, os resultados serão imprevisíveis. ([mais |https://www.php.net/manual/en/function.imagecopyresized])


crop(int|string $left, int|string $top, int|string $width, int|string $height): Image .[method]
-----------------------------------------------------------------------------------------------
Cortar uma imagem para a área retangular dada. As dimensões podem ser passadas como números inteiros em pixels ou cadeias em porcentagem (ou seja, `'50%'`).


cropAuto(int $mode=-1, float $threshold=.5, int $color=-1): Image .[method]
---------------------------------------------------------------------------
Automaticamente cultiva uma imagem de acordo com o dado `$mode`. ([mais |https://www.php.net/manual/en/function.imagecropauto])


ellipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------
Desenha uma elipse centrada nas coordenadas especificadas. ([mais |https://www.php.net/manual/en/function.imageellipse])


fill(int $x, int $y, int $color): void .[method]
------------------------------------------------
Realiza um enchimento de inundação a partir da coordenada dada (no canto superior esquerdo é 0, 0) com o dado `$color` na imagem. ([mais |https://www.php.net/manual/en/function.imagefill])


filledArc(int $cx, int $cy, int $w, int $h, int $s, int $e, int $color, int $style): void .[method]
---------------------------------------------------------------------------------------------------
Desenha um arco parcial centrado na coordenada especificada na imagem. ([mais |https://www.php.net/manual/en/function.imagefilledarc])


filledEllipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------------
Desenha uma elipse centrada na coordenada especificada na imagem. ([mais |https://www.php.net/manual/en/function.imagefilledellipse])


filledPolygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------------
Cria um polígono cheio na imagem de $. ([mais |https://www.php.net/manual/en/function.imagefilledpolygon])


filledRectangle(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
-------------------------------------------------------------------------------
Cria um retângulo preenchido com `$color` na imagem começando no ponto 1 e terminando no ponto 2. 0, 0 é o canto superior esquerdo da imagem. ([mais |https://www.php.net/manual/en/function.imagefilledrectangle])


fillToBorder(int $x, int $y, int $border, int $color): void .[method]
---------------------------------------------------------------------
Realiza um enchimento de inundação cuja cor da borda é definida por `$border`. O ponto de partida para o preenchimento é `$x`, `$y` (canto superior esquerdo é 0, 0) e a região é preenchida com a cor `$color`. ([mais |https://www.php.net/manual/en/function.imagefilltoborder])


filter(int $filtertype, int ...$args): void .[method]
-----------------------------------------------------
Aplica o filtro dado `$filtertype` na imagem. ([mais |https://www.php.net/manual/en/function.imagefilter])


flip(int $mode): void .[method]
-------------------------------
Vira a imagem usando o dado `$mode`. ([mais |https://www.php.net/manual/en/function.imageflip])


ftText(int $size, int $angle, int $x, int $y, int $col, string $fontFile, string $text, array $extrainfo=null): array .[method]
-------------------------------------------------------------------------------------------------------------------------------
Escrever texto na imagem usando fontes usando FreeType 2. ([mais |https://www.php.net/manual/en/function.imagefttext])


gammaCorrect(float $inputgamma, float $outputgamma): void .[method]
-------------------------------------------------------------------
Aplica correção gama à imagem dada uma gama de entrada e uma gama de saída. ([mais |https://www.php.net/manual/en/function.imagegammacorrect])


getClip(): array .[method]
--------------------------
Recupera o atual retângulo de recorte, ou seja, a área além da qual nenhum pixel será desenhado. ([mais |https://www.php.net/manual/en/function.imagegetclip])


getHeight(): int .[method]
--------------------------
Retorna a altura da imagem.


getImageResource(): resource|GdImage .[method]
----------------------------------------------
Devolve o recurso original.


getWidth(): int .[method]
-------------------------
Retorna a largura da imagem.


interlace(int $interlace=null): int .[method]
---------------------------------------------
Liga ou desliga o fio entrelaçado. Se a parte entrelaçada for definida e a imagem for usada como uma imagem JPEG, a imagem é criada como um JPEG progressivo. ([mais |https://www.php.net/manual/en/function.imageinterlace])


isTrueColor(): bool .[method]
-----------------------------
Descobre se a imagem é uma verdadeira cor. ([mais |https://www.php.net/manual/en/function.imageistruecolor])


layerEffect(int $effect): void .[method]
----------------------------------------
Coloque a bandeira de mistura alfa para usar efeitos de camadas. ([mais |https://www.php.net/manual/en/function.imagelayereffect])


line(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
--------------------------------------------------------------------
Traça uma linha entre os dois pontos dados. ([mais |https://www.php.net/manual/en/function.imageline])


openPolygon(array $points, int $numPoints, int $color): void .[method]
----------------------------------------------------------------------
Desenha um polígono aberto sobre a imagem. Ao contrário de `polygon()`, nenhuma linha é traçada entre o último e o primeiro ponto. ([mais |https://www.php.net/manual/en/function.imageopenpolygon])


paletteCopy(Image $source): void .[method]
------------------------------------------
Copia a paleta do site `$source` para a imagem. ([mais |https://www.php.net/manual/en/function.imagepalettecopy])


paletteToTrueColor(): void .[method]
------------------------------------
Converte uma imagem baseada em paleta, criada por funções como `create()`, para uma imagem colorida verdadeira, como `createtruecolor()`. ([mais |https://www.php.net/manual/en/function.imagepalettetotruecolor])


place(Image $image, int|string $left=0, int|string $top=0, int $opacity=100): Image .[method]
---------------------------------------------------------------------------------------------
Copia `$image` para a imagem nas coordenadas `$left` e `$top`. As coordenadas podem ser passadas como números inteiros em pixels ou cadeias em porcentagem (ou seja, `'50%'`).


polygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------
Cria um polígono na imagem. ([mais |https://www.php.net/manual/en/function.imagepolygon])


rectangle(int $x1, int $y1, int $x2, int $y2, int $col): void .[method]
-----------------------------------------------------------------------
Cria um retângulo começando nas coordenadas especificadas. ([mais |https://www.php.net/manual/en/function.imagerectangle])


resize(int|string $width, int|string $height, int $flags=Image::OrSmaller): Image .[method]
-------------------------------------------------------------------------------------------
Escala uma imagem, veja [mais informações |#Image Resize]. As dimensões podem ser passadas como números inteiros em pixels ou cadeias em porcentagem (ou seja, `'50%'`).


resolution(int $resX=null, int $resY=null): mixed .[method]
-----------------------------------------------------------
Permite definir e obter a resolução de uma imagem em DPI (dots per inch). Se nenhum dos parâmetros opcionais for dado, a resolução atual é devolvida como matriz indexada. Se apenas `$resX` for dado, a resolução horizontal e vertical é definida para este valor. Se ambos os parâmetros opcionais são dados, a resolução horizontal e vertical são definidas para estes valores, respectivamente.

A resolução só é usada como meta informação quando as imagens são lidas e escritas em formatos que suportam este tipo de informação (curently PNG e JPEG). Não afeta nenhuma operação de desenho. A resolução padrão para novas imagens é 96 DPI. ([mais |https://www.php.net/manual/en/function.imageresolution])


rotate(float $angle, int $backgroundColor): Image .[method]
-----------------------------------------------------------
Gira a imagem usando o dado `$angle` em graus. O centro de rotação é o centro da imagem, e a imagem rodada pode ter dimensões diferentes das da imagem original. ([mais |https://www.php.net/manual/en/function.imagerotate])

.[note]
Exige *extensão de GD fundida*, por isso não é certo que funcione em todos os lugares.


save(string $file, int $quality=null, int $type=null): void .[method]
---------------------------------------------------------------------
Salva uma imagem em um arquivo.

A qualidade da compressão está na faixa de 0..100 para JPEG (padrão 85) e WEBP (padrão 80) e 0..9 para PNG (padrão 9). Se o tipo não for óbvio pela extensão do arquivo, você pode especificá-lo com uma das constantes `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`.


saveAlpha(bool $saveflag): void .[method]
-----------------------------------------
Define a bandeira que determina se deve reter informações completas do canal alfa (em oposição à transparência monocromática) ao salvar imagens PNG.

O alfabetização tem que ser desativado (`alphaBlending(false)`) para manter o canal alfa em primeiro lugar. ([mais |https://www.php.net/manual/en/function.imagesavealpha])


scale(int $newWidth, int $newHeight=-1, int $mode=IMG_BILINEAR_FIXED): Image .[method]
--------------------------------------------------------------------------------------
Escala uma imagem usando o algoritmo de interpolação dado. ([mais |https://www.php.net/manual/en/function.imagescale])


send(int $type=Image::JPEG, int $quality=null): void .[method]
--------------------------------------------------------------
Produz uma imagem para o navegador.

A qualidade da compressão está na faixa de 0..100 para JPEG (padrão 85) e WEBP (padrão 80) e 0..9 para PNG (padrão 9). O tipo é uma das constantes `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`.


setBrush(Image $brush): void .[method]
--------------------------------------
Define a imagem do pincel a ser utilizada por todas as funções de desenho de linhas (como `line()` e `polygon()`) ao desenhar com as cores especiais IMG_COLOR_BRUSHED ou IMG_COLOR_STYLEDBRUSHED. ([mais |https://www.php.net/manual/en/function.imagesetbrush])


setClip(int $x1, int $y1, int $x2, int $y2): void .[method]
-----------------------------------------------------------
Define o retângulo de recorte atual, ou seja, a área além da qual nenhum pixel será desenhado. ([mais |https://www.php.net/manual/en/function.imagesetclip])


setInterpolation(int $method=IMG_BILINEAR_FIXED): void .[method]
----------------------------------------------------------------
Define o método de interpolação que afeta os métodos `rotate()` e `affine()`. ([mais |https://www.php.net/manual/en/function.imagesetinterpolation])


setPixel(int $x, int $y, int $color): void .[method]
----------------------------------------------------
Traça um pixel na coordenada especificada. ([mais |https://www.php.net/manual/en/function.imagesetpixel])


setStyle(array $style): void .[method]
--------------------------------------
Define o estilo a ser usado por todas as funções de desenho de linhas (tais como `line()` e `polygon()`) ao desenhar com a cor especial IMG_COLOR_STYLED ou linhas de imagens com a cor IMG_COLOR_STYLEDBRUSHED. ([mais |https://www.php.net/manual/en/function.imagesetstyle])


setThickness(int $thickness): void .[method]
--------------------------------------------
Define a espessura das linhas desenhadas ao desenhar retângulos, polígonos, arcos, etc. para `$thickness` pixels. ([mais |https://www.php.net/manual/en/function.imagesetthickness])


setTile(Image $tile): void .[method]
------------------------------------
Define a imagem da telha a ser usada por todas as funções de preenchimento da região (como `fill()` e `filledPolygon()`) ao preencher com a cor especial IMG_COLOR_TILED.

Uma telha é uma imagem usada para preencher uma área com um padrão repetido. Qualquer imagem pode ser usada como azulejo, e ao definir o índice de cor transparente da imagem do azulejo com `colorTransparent()`, um azulejo permite que certas partes da área subjacente brilhem através dele podem ser criadas. ([mais |https://www.php.net/manual/en/function.imagesettile])


sharpen(): Image .[method]
--------------------------
Aguça um pouco a imagem.

.[note]
Requer uma extensão GD *Bundled GD, por isso não é certo que funcione em todos os lugares.


string(int $font, int $x, int $y, string $str, int $col): void .[method]
------------------------------------------------------------------------
Traça um fio nas coordenadas dadas. ([mais |https://www.php.net/manual/en/function.imagestring])


stringUp(int $font, int $x, int $y, string $s, int $col): void .[method]
------------------------------------------------------------------------
Traça um cordel verticalmente nas coordenadas dadas. ([mais |https://www.php.net/manual/en/function.imagestringup])


toString(int $type=Image::JPEG, int $quality=null): string .[method]
--------------------------------------------------------------------
Produz uma imagem a fio.

A qualidade da compressão está na faixa de 0..100 para JPEG (padrão 85) e WEBP (padrão 80) e 0..9 para PNG (padrão 9). O tipo é uma das constantes `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` e `Image::BMP`.


trueColorToPalette(bool $dither, int $ncolors): void .[method]
--------------------------------------------------------------
Converte uma imagem truecolor em uma imagem de paleta. ([mais |https://www.php.net/manual/en/function.imagetruecolortopalette])


ttfText(int $size, int $angle, int $x, int $y, int $color, string $fontfile, string $text): array .[method]
-----------------------------------------------------------------------------------------------------------
Escreve o texto dado na imagem usando fontes TrueType. ([mais |https://www.php.net/manual/en/function.imagettftext])
