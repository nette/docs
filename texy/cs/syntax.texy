Syntaxe
*******

.[perex]
Texy vznikl proto, aby nezkušeným uživatelům umožnil snadno editovat obsah webových stránek. Proto je i syntaxe intuitivní a přehledná.


Cheat Sheet
===========

| [#Formátování textu]                 |  Syntax
|-----------------------------------------------
| [Tučný text |#Formátování textu]     | .[text-code] ''**tučný text**''
| [Kurzíva  |#Formátování textu]       | ''*kurzíva*'' nebo ''//kurzíva//''
| [Inline code  |#Formátování textu]   | ''`kód`''
| [#Odkazy]                            | ''"text":URL'' nebo ''[text](URL)''
| [#Obrázky]                           | ''[* image.jpg *]''
| [#Vypnutí formátování]               | &apos;&apos;specialní znaky&apos;&apos;
|-----------------------------------------------
| Elementy
|-----------------------------------------------
| [#Podtržené nadpisy]                 | H1 <br> ===
| [#Ohraničené nadpisy]                | ''### H1'' <br> ## H2
| [#Odrážkové seznamy]                 | ''- první'' <br> ''- druhá''
| [#Číslované seznamy]                 | ''1) první'' <br> ''2) druhá''
| [#Seznamy definic]                   | term: <br> &nbsp; ''- první''
| [#Citace]                            | ''> blockquote''
| [#Horizontální čáry]                 | ''---''
| [#Tabulky]                           | ''\| buňka \| buňka \|''
| [Bloky kódu|#Předformátovaný text]   | ''/--'' <br> ... <br> ''\--''
|-----------------------------------------------
| Modifikátory .[#toc-modifikatory]
|--------------------------------------------------------
| titulek                              | ''.(titulek)''
| CSS třída                            | ''.[btn btn-primary]''
| ID                                   | ''.[#id]''
| CSS styl nebo HTML atribut           | ''.{color: blue}'' nebo ''.{target: _blank}''
| horizontální zarovnání               | ''.< .> .<> .=''
| vertikální zarovnání                 | ''.^ .- ._''


Odstavce textu
==============

Za odstavec považuje Texy jeden nebo více řádků textu, které následují těsně za sebou. Jakmile mezi nimi necháte **jeden prázdný řádek**, Texy automaticky pochopí, že má začít nový odstavec.

To znamená, že Texy spojí řádky, které patří k sobě. Nemusíte se tak bát, že se vám věta zalomí uprostřed, když si zmenšíte okno editoru.

```texy
Toto je první odstavec. Může mít klidně více řádků
a Texy je spojí do jednoho souvislého bloku textu.

Až tady, po prázdném řádku, začíná úplně nový, druhý odstavec.
```

Spojování řádků lze nicméně vypnout v konfiguraci a pak se každý řádek považuje za samostatný odstavec:

/--php
$texy->mergeLines = false;
\--


Zalomení řádků
--------------

Co když ale potřebujete text jen odřádkovat, aniž byste vytvářeli celý nový odstavec? To se typicky hodí u básní, textů písní nebo při psaní adresy. **Začněte nový řádek jednou mezerou**.

```texy
Karel Novák,
 U Tiché pošty 5
 150 00 Praha 5
```


Stylování odstavců
------------------

Někdy potřebujete celý odstavec nějak odlišit – například z něj udělat úvodní perex článku, vycentrovat ho nebo mu přiřadit specifický styl pro rámeček. K tomu slouží [#modifikátory], které můžete umístit buď na samostatný řádek **před** odstavec, nebo na konec jeho posledního řádku.

```texy
.[perex]
Toto je úvodní odstavec článku, který díky modifikátoru
dostane CSS třídu "perex" a může tak vypadat jinak než zbytek textu.

Tento odstavec má zase přiřazené unikátní ID. .[#sekce-uvod]

A tento odstavec bude vycentrován. .<>
```


Formátování textu
=================

| syntax                             |  výstup                     | ID syntaxe
|-----------------------------------------------------------------------------
| .[text-code] ''**tučný text**''    | **tučný text**              | `phrase/strong`
| ''*kurzíva* nebo //kurzíva//''     | *kurzíva*                   | `phrase/em-alt`, `phrase/em`
| ''***tučná kurzíva***''            | ***tučná kurzíva***         | `phrase/strong+em`
| ''`inline kód`''                   | `inline kód`                | `phrase/code`
| ''x^2 … O_2''                      | x^2 … O_2                   | `phrase/sup-alt`, `phrase/sub-alt`
| ''x^^2^^ … O__2__''                | x^2 … O_2                   | `phrase/sup`🔸, `phrase/sup`🔸
| ''++vložený text++''               | <ins>vložený text</ins>     | `phrase/ins`🔸
| ''--smazaný text--''               | <del>smazaný text</del>     | `phrase/del`🔸
| ''>>citovaný text<<''              | >>citovaný text<<           | `phrase/quote`
| ''"modrý text .{color: blue}"''    | "modrý text .{color: blue}" | `phrase/span`
| ''~modrý text .{color: blue}~''    | ~modrý text .{color: blue}~ | `phrase/span-alt`
| ''"et al."((a další))''            | "et al."((a další))         | `phrase/acronym`
| ''NBA((National Basketball Association))'' | NBA((National Basketball Association)) | `phrase/acronym-alt`

Syntaxe označené 🔸 nejsou ve výchozím stavu povolené a musíte je zapnout. Příklad:

/--php
$texy->allowed['phrase/ins'] = true;
\--

Pro jednoduché číselné indexy můžete použít zkrácenou syntaxi `x^2` a `O_2`, ale pro složitější případy je robustnější varianta s dvojitými znaky, nebo můžete použít HTML značky `<sup>` a `<sub>`.

Uvnitř syntaktických znaků **nesmí být mezery**:

```texy
Špatně: ** toto nebude tučné **
Správně: **toto bude tučné**
```


Stylování textu
---------------

Tohle je jedna z nejsilnějších vlastností Texy. Ke každému formátovanému textu můžete "přilepit" [#modifikátory] a přidat mu tak CSS třídu, ID nebo přímý styl. Modifikátor se vždy vkládá **těsně před uzavírací značku**:

```texy
Tento text je **silný a zelený .{color:green}** jako Hulk.

Upozornění: --Tato funkce je zastaralá .[deprecated]--
```

Pokud chcete aplikovat modifikátor na text, ale nechcete ho zároveň dělat tučným nebo kurzívou, použijte jako obalovací značku uvozovky `"` nebo vlnovky `~`. Texy z toho vytvoří univerzální HTML značku `<span>` s vašimi styly:

```texy
Běžný text, ale "tento kousek je červený .{color: red}", a zbytek už ne.
```


Formátování a odkazy v jednom
-----------------------------

Z formátovaného textu můžete udělat odkaz - jednoduše přidejte dvojtečku a URL adresu:

```texy
Navštivte naši **novou galerii**:https://example.com/gallery
```

Toto funguje pro tučný text, kurzívu, inline kód.


Psaní speciálních znaků
-----------------------

Co když chcete napsat doslova `**text**` včetně hvězdiček, aniž by se z něj stal tučný text? Máte tři možnosti:

- zpětné lomítko je nejrychlejší způsob, jak "zneplatnit" jeden speciální znak `\**text\**`
- dvojité apostrofy [vypnou Texy|#Vypnutí formátování] pro celou frázi `''**text**''`
- můžete použít standardní HTML entity `&ast;&ast;text&ast;&ast;`


Odkazy
======

Odkazy jsou duší internetu. V Texy je jejich tvorba navržena tak, aby byla co nejpřirozenější a nejpřehlednější přímo v textu.

Základní syntaxe pro odkaz je jednoduchá a skvěle čitelná. Odkazovaný text uzavřete do `"` (nebo jiných znaků pro [#formátování textu]) a hned připojíte dvojtečku a cílovou URL adresu:

```texy
Navštivte oficiální stránky projektu "Nette Framework":https://nette.org.

Pokud máte dotaz, "napište nám":info@example.com.
```

Výhodou je, že Texy je inteligentní a samo pozná, kde URL končí. Nemusíte se tedy bát, že by do odkazu omylem zahrnulo tečku nebo čárku na konci věty. Pokud ale URL obsahuje nestandardní znaky, můžete je uzavřít do hranatých závorek a tím přesně řeknete, kde adresa začíná a končí:

```texy
"Přečtěte si náš článek":[https://example.com/novinky?id=1&kategorie=články]
```

ID syntaxe `phrase/span`, `phrase/span-alt` | [PhraseModule |configuration#phrasemodule] a [LinkModule |configuration#linkmodule]


Alternativní syntaxe odkazů
---------------------------

Jste zvyklí na formát, který používá Markdown nebo Wikipedia? Texy rozumí i jim. Můžete si vybrat styl, který vám nejvíce vyhovuje.

```texy
[Text odkazu](https://adresa.cz)         // Styl známý z Markdownu
[Text odkazu | https://adresa.cz]        // Styl známý z MediaWiki
text:[cílová URL nebo reference]         // Jednoslovný odkaz
```

ID syntaxe `phrase/markdown`, `phrase/wikilink`, `phrase/quicklink` | [PhraseModule |configuration#phrasemodule]


Udržujte si pořádek s referencemi
---------------------------------

Při psaní delších textů může být nepohodlné vkládat dlouhé URL adresy přímo do odstavců – zhoršuje to čitelnost a přehlednost. Pro tyto případy má Texy **referenční odkazy**.

V textu použijete pouze krátký, snadno zapamatovatelný název reference. A na konci dokumentu pak všechny tyto reference přehledně definujete.

```texy
Doporučujeme si prostudovat "oficiální dokumentaci":[doc] a projít si "příklady syntaxe":[syntax].
Celý projekt je postaven na [Nette].

​[doc]: https://texy.nette.org/cs/ "Dokumentace Texy!"
​[syntax]: https://texy.nette.org/cs/syntax
​[Nette]: https://nette.org
```

ID syntaxe `link/reference`, `link/definition` | [LinkModule |configuration#linkmodule]


Automatické odkazy
------------------

Kdykoli do textu napíšete URL adresu (začínající na `http://`, `https://`, `www.`) nebo e-mail, Texy ji automaticky rozpozná a převede na klikatelný odkaz. Nemusíte dělat vůbec nic.

```texy
Náš web najdete na adrese www.example.com.
Pro podporu pište na support@example.com.
```

ID syntaxe `link/url`, `link/email` | [LinkModule |configuration#linkmodule]


Stylování odkazů
----------------

S [#modifikátory] můžete odkazům snadno přidávat další vlastnosti:

```texy
"Externí odkaz .[external](Otevře se v novém okně){target:_blank}":https://google.com
```

Speciální třída `nofollow` přidá odkazu atribut `rel="nofollow"`, čímž dáváte vyhledávačům signál, aby tento odkaz nesledovaly. To se hodí například u odkazů v komentářích.

```texy
"Odkaz, kterému nedůvěřuji .[nofollow]":https://example.com
```


Automatické maskování e-mailů
-----------------------------

Texy automaticky obfuskuje (maskuje) emailové adresy před spamboty:

```html
<a href="mailto:info&#64;example.com">info&#64;<!-- -->example.com</a>
```

Toto chování můžete vypnout:

/--php
$texy->obfuscateEmail = false;
\--


Přímé HTML
==========

Texy je navržen tak, abyste HTML nemuseli psát vůbec. Ale co když narazíte na situaci, kdy je přímé vložení HTML značky jednodušší, nebo potřebujete vytvořit něco, na co syntaxe Texy nestačí? Žádný problém. Texy vám dává naprostou svobodu kombinovat oba světy.

Můžete plynule přecházet mezi Texy syntaxí a čistým HTML, kdykoli se vám to hodí.

```texy
Toto je **tučný text** v Texy a toto je <strong>tučný text</strong> pomocí HTML.

<div class="info-box">
	<h3>Můžete vkládat i celé komplexní bloky</h3>
</div>
```

Možná si říkáte, že vkládání přímého HTML může být riskantní. Co když uděláte chybu nebo někdo vloží škodlivý kód? Texy na to myslí a funguje jako inteligentní filtr a pomocník:

- **Opravuje chyby:** Texy zajistí, aby byl výsledný kód vždy validní a nerozbil vám stránku.
- **Hlídá bezpečnost:** Texy má ve výchozím stavu seznam povolených značek a jejich atributů. Pokud se v kódu objeví neznámá značka nebo potenciálně nebezpečný atribut (např. `onclick`), Texy ho bezpečně odstraní. Chrání tak váš web před XSS útoky.
- **Zajišťuje konzistentní výstup:** Bez ohledu na to, jaký HTML kód vložíte, Texy se postará, aby byl výsledek vždy správně strukturovaný (well-formed).

Tento ochranný štít si můžete přizpůsobit. Pomocí konfigurace `$texy->allowedTags` můžete přesně definovat, které HTML značky a atributy jsou na vašem webu povoleny a které ne.

Máte tak plnou kontrolu nad tím, jaké HTML mohou například redaktoři používat, a zajišťujete tak konzistenci a bezpečnost celého webu. Více informací naleznete v sekci "konfigurace":configuration#allowedtags.

ID syntaxe `html/tag`, `html/comment` | [HtmlModule |configuration#htmlmodule]


Nadpisy
=======

Texy vám nabízí dva elegantní a intuitivní způsoby, jak nadpisy vytvářet: **podtržené** a **ohraničené**.


Podtržené nadpisy
-----------------

Tento styl připomíná psací stroj. Jednoduše pod nadpis vložte podtržení (alespoň 3 znaky). O důležitosti titulku rozhoduje podtrhávací znak. Od nejvyšší po nejnižší jsou to tyto: `#` `*` `=` `-`

```texy
Toto je nejdůležitější nadpis celého dokumentu
​################################################

A toto je nadpis druhé úrovně
​******************************
```

ID syntaxe `heading/underlined` | [HeadingModule |configuration#headingmodule]


Ohraničené nadpisy
------------------

Tento způsob je velmi rychlý na psaní. Text nadpisu "zabalíte" mezi znaky `#` nebo `=`. Zde o úrovni nadpisu rozhoduje **počet** použitých znaků (2 až 7). Čím více znaků, tím důležitější nadpis.

```texy
=== Nejdůležitější nadpis (H1)

== Méně důležitý (H2)

# Ještě méně důležitý (H3)
```

Můžete použít ohraničení na obou stranách (pro lepší vizuální přehlednost) nebo jen na začátku. Texy si s oběma variantami poradí.

ID syntaxe `heading/surrounded` | [HeadingModule |configuration#headingmodule]


Stylování nadpisů
-----------------

Ke každému nadpisu můžete přidat [#modifikátory]. To vám umožní přiřadit mu konkrétní CSS třídu pro stylování nebo unikátní ID, na které pak můžete odkazovat.

```texy
Nadpis s červenou barvou .[cerveny-nadpis]
​==========================================

### Nadpis s unikátním ID pro odkazování .[#kontakt]
```


Automatické kotvy pro snadnou navigaci
--------------------------------------

Nechcete vymýšlet ID pro každý nadpis ručně? Texy to umí udělat za vás! V konfiguraci můžete zapnout automatické generování ID pro všechny nadpisy. To je neuvěřitelně užitečné pro přímé odkazování na konkrétní sekce.

```php
// Povolit automatické generování ID
$texy->headingModule->generateID = true;

// Volitelně nastavit předponu pro generovaná ID (např. "sekce-")
$texy->headingModule->idPrefix = 'toc-';
```

S tímto nastavením nadpis `## Moje kapitola` automaticky dostane například ID `id="toc-moje-kapitola"`, aniž byste museli cokoliv psát navíc.


Seznamy
=======


Odrážkové seznamy
-----------------

Pro rychlý výčet položek, u kterých nezáleží na pořadí, se skvěle hodí odrážkový seznam. Stačí každý řádek začít pomlčkou `-`, hvězdičkou `*` nebo pluskem `+` a mezerou. Všechny tři znaky fungují stejně, takže si můžete vybrat ten, který je vám nejsympatičtější.

```texy
Co je potřeba nakoupit:

- Mléko
- Chleba
* Vejce
+ Máslo
```

ID syntaxe `list` | [ListModule |configuration#listmodule]


Číslované seznamy
-----------------

Texy podporuje různé styly číslování:

| `1.`    | Arabské číslice (s tečkou)
| `1)`    | Arabské číslice (se závorkou)
| `a)`    | Malá písmena abecedy
| `A)`    | Velká písmena abecedy
| `I)`    | Římské číslice

Kouzlo spočívá v tom, že se vůbec nemusíte starat o správné číslování. I když všechny řádky očíslujete jedničkou, Texy je automaticky přečísluje za vás. To je obrovská výhoda, když později potřebujete nějakou položku přidat, smazat nebo přesunout.


Vnořené a kombinované seznamy
-----------------------------

Síla seznamů se naplno projeví, když je začnete kombinovat a vnořovat. Můžete tak vytvářet přehledné, víceúrovňové struktury. Vnoření vytvoříte jednoduše tak, že daný řádek odsadíte alespoň o **dvě mezery** (nebo jeden tabulátor).

```texy
1) První kapitola
	a) Podkapitola 1.1
		- První bod
		- Druhý bod
	b) Podkapitola 1.2
2) Druhá kapitola
	- Hlavní myšlenka
	- Další poznámka
```


Seznamy definic
---------------

Pro případy, kdy potřebujete vytvořit slovníček pojmů nebo přehledně vysvětlit několik termínů, je ideální definiční seznam.

Na první řádek napište termín, který chcete definovat, a zakončete ho dvojtečkou.  Na další řádky pište jeho definici, přičemž každý řádek odsaďte a začněte pomlčkou `-`

```texy
HTML:
  - Značkovací jazyk pro tvorbu webových stránek.
  - Zkratka pro HyperText Markup Language.

CSS:
  - Jazyk pro popis způsobu zobrazení (stylování) stránek.
  - Zkratka pro Cascading Style Sheets.
```

ID syntaxe `list/definition` | [ListModule |configuration#listmodule]


Stylování seznamů
-----------------

Stejně jako u ostatních prvků v Texy, i seznamům můžete snadno přidávat [#modifikátory] pro změnu vzhledu.

**Celý seznam:** Modifikátor napište na řádek **před** začátkem seznamu.

```texy
.[barevny-seznam]
- První položka
- Druhá položka
```

**Jednotlivá položka:** Modifikátor přidejte na **konec** řádku dané položky nebo definičního termínu.

```texy
- Běžná položka
- Tato položka je důležitá! .{font-weight: bold}
- Další běžná položka
```


Obrázky
=======

Základní syntaxe je velmi jednoduchá. Cestu k obrázku (ať už lokálnímu souboru, nebo URL adrese) stačí uzavřít do hranatých závorek s hvězdičkou:

```texy
[* obrazek.jpg *]
[* https://domena.cz/logo.png *]
```

Často budete chtít, aby text obrázek obtékal. K tomu slouží jednoduché zarovnávací značky, které se vkládají před uzavírací závorku:

```texy
[* obrazek.jpg <] Tento text bude plynule obtékat obrázek z pravé strany.

[* obrazek.jpg >] V tomto případě bude text naopak obtékat obrázek z levé strany.

[* velky-obrazek.jpg <>]
Tento text bude pokračovat až pod vycentrovaným obrázkem.
```

Správně vložený obrázek by měl mít i tzv. "alternativní text", který se zobrazí, pokud se obrázek nenačte. Pomocí [modifikátoru|#modifikátory] můžete přidat tento text i další prvky pro stylování.

```texy
[* fotka-krajiny.jpg .(Krásná horská krajina při západu slunce)[main-photo] *]
```


Rozměry obrázků
---------------

Texy umí u lokálních obrázků automaticky zjistit jejich rozměry (pokud je nastavena cesta `$texy->imageModule->fileRoot`) a doplnit je do HTML, což zrychluje načítání stránky. Pokud ale chcete rozměry nastavit ručně, máte několik možností:

| `[* img.jpg 150x100 *]` | Přesná šířka 150px a výška 100px
| `[* img.jpg 150 *]`     | Šířka bude 150px, výška se automaticky dopočítá se zachováním poměru stran
| `[* img.jpg ?x100 *]`   | Výška bude 100px, šířka se automaticky dopočítá


Klikatelné obrázky
------------------

Chcete, aby se po kliknutí na malý náhled zobrazil velký obrázek? Nebo aby obrázek odkazoval na jinou stránku? Stačí za syntaxi obrázku přidat dvojtečku a cílovou URL.

```texy
[* nahled.jpg *]:velky.jpg
[* logo-nette.png *]:https://nette.org
```

Pro galerie existuje i šikovná zkratka `::`. Ta automaticky vytvoří odkaz na stejný soubor umístěný na `$texy->imageModule->linkedRoot`.


Viditelný popisek pod obrázkem
------------------------------

Pokud chcete pod obrázek přidat viditelný popisek (např. jméno autora nebo popis scény), napište za něj tři hvězdičky `***` a text popisku. Texy z toho automaticky vytvoří sémanticky správnou HTML strukturu `<figure>` a `<figcaption>`.

```texy
[* fotka.jpg <> *] *** Toto je popisek. Může obsahovat i **další formátování**.
```


Udržujte si pořádek s referencemi
---------------------------------

Pokud v textu používáte jeden obrázek vícekrát nebo chcete mít všechny definice obrázků přehledně na jednom místě, můžete použít reference. V textu použijete jen zástupný název a na konci souboru pak definujete, co tento název znamená.

```texy
V našem logu [* firemni-logo *] je vidět symbol naší vize.

​[* firemni-logo *]: /images/logo.svg 200x50 .(Logo naší společnosti)
```

Tento přístup výrazně zpřehledňuje hlavní text a usnadňuje správu obrázků.

ID syntaxe `image/definition` | [ImageModule |configuration#imagemodule]


Předformátovaný text
====================

V Texy můžete snadno vložit bloky kódu nebo jakýkoli předformátovaný text, u kterého chcete zajistit, aby se zobrazil přesně tak, jak ho napíšete – včetně všech mezer a konců řádků. To je ideální pro ukázky zdrojových kódů, logů nebo ASCII artu.

Pro vložení takového bloku použijte ohraničení `/--` a `\--`:

```texy
/--
function hello() {
	echo 'Hello World';
}
\--
```

Aby byl váš kód ještě čitelnější, můžete Texy sdělit, v jakém programovacím jazyce je napsaný a vytvořit si handler, který například obarví syntaxi, viz "ukázka":custom-handlers#syntax-highlighting. Stačí za úvodní značku `/--` přidat klíčové slovo `code` a název jazyka:

```texy
/--code javascript
console.log('JavaScript');
\--

/--code html
<div>Tohle je HTML kód</div>
\--
```


Obsahové bloky (divy)
=====================

Texy umožňuje vytvářet obecné `<div>` bloky, díky kterým můžete snadno seskupovat obsah do logických celků a následně je stylovat:.

Blok vytvoříte pomocí značek `/--div` a `\--`. Navíc můžete snadno přidat [#modifikátory]:

```texy
/--div .[important]
## Důležité upozornění

Tento text bude uzavřen v bloku `<div class="important">`.
Díky tomu ho můžete pomocí CSS nastylovat, aby byl výraznější.
\--
```

Síla `<div>` bloků spočívá také v možnosti je vnořovat do sebe. Tím můžete vytvářet i složitější struktury přímo v Texy, aniž byste museli psát HTML ručně.

```texy
/--div .[outer]
	Toto je vnější blok.

	/--div .[inner]
		A toto je vnořený, vnitřní blok.
	\--

	Zde jsme opět ve vnějším bloku.
\--
```
Díky této jednoduché syntaxi můžete udržovat svůj obsah přehledný a sémanticky správně strukturovaný.


Vypnutí formátování
===================

Někdy se může hodit Texy na chvíli "vypnout" a vložit kus textu, kde nemá Texy zpracovávat své značky.

Pokud potřebujete vložit komplexnější HTML strukturu bez parsování Texy značek, použijte blok `/--html`:

```texy
/--html
<em>Tento text bude zpracován jako HTML, takže bude kurzívou.</em>

**Ale tyto hvězdičky Texy ignoruje, takže tučné nebudou.**
\--
```

V případě, že chcete zobrazit text přesně tak, jak je napsán, a ignorovat veškeré značky (jak Texy, tak HTML), použijte blok `/--text`. Vše uvnitř tohoto bloku se zobrazí jako obyčejný text.

```texy
/--text
<em>Tento text se zobrazí i se značkami, kurzívou ale nebude.</em>

**Ani toto nebude tučné.**
\--
```

Co když ale nechcete vypínat Texy pro celý blok textu, ale jen pro krátkou frázi uprostřed věty? Pro tyto případy existuje elegantní a rychlé řešení: obalte daný text do **dvojitých apostrofů** `''`:

```texy
Pokud chcete ukázat, jak se píše tučný text, napíšete: Syntaxe je ''**tučný text**''.
```

Výsledkem nebude tučný text, ale doslova se vypíše řetězec `**tučný text**`.


Tabulky
=======

Pro vytvoření tabulky začněte každý řádek znakem `|` a jednotlivé buňky oddělujte také tímto znakem. Texy si už samo pohlídá zarovnání a správné HTML.

```texy
| Jan | Novák     | Praha
| Eva | Svobodová | Brno
```

Výsledek bude přehledná a správně naformátovaná tabulka.

ID syntaxe `table` | [TableModule |configuration#tablemodule]


Hlavička tabulky
----------------

Každá správná tabulka by měla mít hlavičku, která popisuje, co se v jednotlivých sloupcích nachází. Hlavičku vytvoříte tak, že ji od zbytku tabulky oddělíte řádkem obsahujícím pomlčky `-`.

```texy
| Jméno    | Věk | Město
|----------|-----|-------
| Jan      | 25  | Praha
| Eva      | 30  | Brno
```

Alternativně můžete definovat záhlaví pro jednotlivé řádky (například pokud máte v prvním sloupci popisky). Toho dosáhnete přidáním hvězdičky `*` hned za úvodní `|`.

```texy
|* Jméno   | Jan   | Eva
|* Věk     | 25    | 30
|* Město   | Praha | Brno
```


Sloučení buněk
--------------

Někdy je potřeba spojit několik buněk dohromady, ať už ve sloupcích nebo v řádcích.

**Sloučení sloupců:** Pro horizontální spojení buněk jednoduše vynechejte oddělovač a místo něj použijte zdvojenou svislou čáru `||`. Buňka napravo se tím sloučí s buňkou nalevo od ní.

```texy
| Jméno           || Věk
|----------------------------
| Jan  | Novák     | 25
```

**Sloučení řádků:** Pro vertikální spojení buněk použijte v buňce, kterou chcete připojit k té nad ní, symbol stříšky `^`. Ta Texy říká: "Tuto buňku spoj s tou nad ní."

```texy
| Měsíc   | Prodeje |
|---------|----------
| Leden   | 150 ks  |
| Únor    |        ^|
| Březen  | 210 ks  |
```

V tomto příkladu bude buňka s prodeji pro leden a únor spojená.

Takto lze sloučit několik buňek napříč řádky a sloupci:

```texy
| First Name | Last Name | Age
|----------------------------
| Bill                  || 50
|                       ^| 52
| Jim        | Beam      | 70
```


Stylování tabulek
-----------------

Stejně jako u jiných prvků v Texy můžete i tabulkám a jejich částem přidávat [#modifikátory] pro změnu vzhledu (např. CSS třídy, styly nebo ID).

**Celá tabulka:** Modifikátor pro celou tabulku umístěte na samostatný řádek těsně před ni.

```texy
.[data-table table-striped]
| Hlavička 1 | Hlavička 2
|------------|------------
| data       | data
```

**Jednotlivé řádky:** Chcete-li nastylovat konkrétní řádek, přidejte modifikátor na jeho konec.

```texy
| Jméno | Stav
|-------|--------------
| Petr  | Schváleno
| Jana  | Zamítnuto    | .{background: #ffdddd}
```

**Jednotlivé sloupce:** Pro nastylování celého sloupce vložte modifikátor na začátek první buňky daného sloupce.

```texy
| Jméno          | .>  Cena  | Skladem
|----------------|-----------|---------
| Produkt A      | 1 200 Kč  | Ano
| Produkt B      | 850 Kč    | Ne
```

**Konkrétní buňka:** Modifikátor pro jednu buňku napište přímo do ní, obvykle na konec jejího obsahu.

```texy
| Úkol                 | Status
|----------------------|-------------------------------------
| Připravit podklady   | Hotovo
| Zkontrolovat data    | Probíhá .{color: orange; font-weight: bold}
```


Citace
======

Potřebujete-li ve svém textu zdůraznit myšlenku někoho jiného, ocitovat zdroj nebo jen vizuálně oddělit blok textu, stačí začít řádek znakem `>`.

```texy
> Toto je citace. Slouží ke zvýraznění důležité myšlenky nebo úryvku z jiného zdroje.
```

Citace nemusí být jen jeden odstavec. Pokud chcete pokračovat dalším odstavcem v rámci stejné citace, jednoduše vložte prázdný řádek, který také začíná znakem `>`.

```texy
> Toto je první odstavec citace. Lorem ipsum dolor sit amet.
>
> A toto je druhý odstavec, který stále patří do stejné citace.
> Tímto způsobem můžete strukturovat i delší texty.
```

Texy dokonce podporuje vnořené citace, což se hodí, pokud citujete někoho, kdo sám někoho cituje. Pro každou další úroveň vnoření přidejte další znak `>`.

```texy
> Toto je vnější, hlavní citace.
>
> > A toto je už vnořená citace druhé úrovně.
>
> Zde se text vrací zpět do hlavní citace.
```

Uvnitř citací můžete samozřejmě používat i další formátování, jako je **tučný text** nebo *kurzíva*.


Horizontální čáry
=================

Někdy je potřeba text vizuálně rozdělit. K tomu skvěle slouží horizontální čára. Na samostatný řádek napište tři nebo více pomlček `---` nebo hvězdiček `***`.

```texy
První část textu o nějakém tématu.

***

Druhá část textu, která začíná po vizuálním oddělení.
```

Abyste vytvořili horizontální čáru, **musí jí předcházet prázdný řádek**. Pokud byste ji napsali hned pod text, Texy by si myslelo, že chcete vytvořit podtržený nadpis.

ID syntaxe `horizline` | [HorizLineModule |configuration#horizlinemodule]


Typografie
==========

Síla Texy nespočívá jen ve formátování, ale také v automatických typografických korekcích. Texy se postará o detaily, které dělají text profesionálním a dobře čitelným, a to vše podle českých typografických pravidel. Vy se tak můžete soustředit jen na obsah.

**Uvozovky:** Nemusíte řešit, jak na klávesnici napsat správné typografické uvozovky. Texy to udělá za vás.

Klasické ''"strojopisné uvozovky"'' automaticky převede na správné české „uvozovky“ a vnořené ‚uvozovky‘. Typ uvozovek závisí na nastavení locale:

```php
$texy->typographyModule->locale = 'cs'; // české
$texy->typographyModule->locale = 'en'; // anglické
```

**Pomlčky a spojovníky:** Inteligentně rozpozná, kdy použít krátký spojovník (v dělených slovech), a kdy delší pomlčku – například v rozsazích (10–15) nebo mezi slovy.

```texy
10-15           → 10–15            (en dash pro rozsahy)
česko-slovenský → česko-slovenský  (spojovník zůstává)
slovo -- slovo  → slovo – slovo    (en dash mezi slovy)
slovo --- slovo → slovo — slovo    (em dash)
```

**Nezlomitelné mezery**: Jednou z největších výhod je automatické vkládání pevných (nezlomitelných) mezer tam, kde je to potřeba. Tím zabraňuje, aby na konci řádku zůstala osamocená jednopísmenná slova (jako `k`, `s`, `v`, `z`), což je častý typografický prohřešek.

```texy
// Vy napíšete:
Navštívil jsem hrad v Praze.

// Texy zajistí, aby "v" nikdy nezůstalo na konci řádku:
Navštívil jsem hrad v&nbsp;Praze.
```

Stejně tak se postará o správné mezery v telefonních číslech nebo datech, aby se nezalamovala.

```texy
+420 776 552 046 → +420&nbsp;776&nbsp;552&nbsp;046  (všechny mezery pevné)
```

**Automatické symboly:** Texy vám usnadní i psaní často používaných symbolů.

| Napíšete | Texy vygeneruje | Popis
|-----
| `...`    | …               | Výpustka
| `(c)`    | ©               | Copyright
| `(r)`    | ®               | Registrovaná známka
| `(tm)`   | ™               | Trademark
| `10 x 5` | 10 × 5          | Znak násobení
| `+-`     | ±               | Plus-mínus
| `<-` `->` `<->`  | ← → ↔   | Šipky

Díky těmto automatickým úpravám bude váš text vždy vypadat profesionálně, aniž byste museli znát složité klávesové zkratky nebo HTML entity.


Dělení dlouhých slov
--------------------

Znáte to – v textu se objeví dlouhé slovo, jako například "nejneobhospodařovávatelnějšími", a na úzké obrazovce mobilního telefonu rozbije celý layout stránky. Texy naštěstí nabízí elegantní řešení: dokáže do slova vložit neviditelné "měkké rozdělovníky" (`&shy;`). Tyto rozdělovníky prohlížeči napoví, na kterých místech (mezi slabikami) může slovo bezpečně zalomit, pokud se na konec řádku nevejde. Pokud se slovo na řádek vejde celé, rozdělovníky zůstanou skryté a nic se nestane.

```html
nejneobhospoda&shy;řovávatelnějšími
```

Díky tomu se váš text vždy krásně přizpůsobí jakékoliv šířce obrazovky bez nechtěného horizontálního posouvání.

Protože se tato funkce nehodí pro všechny typy webů, je ve výchozím stavu vypnutá. Aktivovat ji můžete v konfiguraci:

```php
$texy->allowed['longwords'] = true;

// Nastavit minimální délku slova, od které se má dělit (např. 20 znaků)
$texy->longWordsModule->wordLimit = 20;
```

ID syntaxe `longwords` | [LongWordsModule |configuration#long-wordsmodule]


Emotikony
=========

Texy umí automaticky převádět klasické textové smajlíky na grafické emotikony. Jednoduše napište smajlíka tak, jak jste zvyklí, a Texy se postará o zbytek.

| Napíšete | Texy vygeneruje
|-----
| `:-)`    | 🙂
| `:-(`    | ☹
| `;-)`    | 😉
| `:-D`    | 😀
| `:-*`    | 😘

Podle konfigurace může Texy tyto zkratky převádět buď na moderní Unicode emoji (jako v tabulce výše), nebo na malé obrázky (`<img>`).

Aby se předešlo nechtěným převodům například v technických textech, je tato funkce ve výchozím nastavení vypnutá. Pokud ji chcete používat, stačí ji jednoduše povolit:

```php
$texy->allowed['emoticon'] = true;
```

Více informací o dostupných emotikonech a možnostech nastavení naleznete v [konfiguraci EmoticonModule |configuration#emoticonmodul].

ID syntaxe `emoticon` | [EmoticonModule |configuration#emoticonmodule]
