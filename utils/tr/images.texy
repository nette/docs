Resimlerle Çalışma
******************

.[perex]
[api:Nette\Utils\Image] sınıfı, yeniden boyutlandırma, kırpma, keskinleştirme, çizim yapma veya birden fazla resmi birleştirme gibi resim manipülasyonlarını basitleştirir.


PHP, resim manipülasyonu için kapsamlı bir fonksiyon setine sahiptir. Ancak API'leri pek kullanışlı değildir. Nette Framework olmasaydı, seksi bir API ile gelmezdi.

Kurulum:

```shell
composer require nette/utils
```

Tüm örnekler, bir takma ad oluşturulduğunu varsayar:

```php
use Nette\Utils\Image;
use Nette\Utils\ImageColor;
use Nette\Utils\ImageType;
```


Resim Oluşturma
===============

Örneğin 100x200 boyutlarında yeni bir true color resim oluşturalım:

```php
$image = Image::fromBlank(100, 200);
```

İsteğe bağlı olarak, arka plan rengi belirtilebilir (varsayılan siyahtır):

```php
$image = Image::fromBlank(100, 200, ImageColor::rgb(125, 0, 0));
```

Veya resmi bir dosyadan yükleyelim:

```php
$image = Image::fromFile('nette.jpg');
```


Resmi Kaydetme
==============

Resim bir dosyaya kaydedilebilir:

```php
$image->save('resampled.jpg');
```

JPEG (varsayılan 85), WEBP (varsayılan 80) ve AVIF (varsayılan 30) için 0..100 aralığında ve PNG (varsayılan 9) için 0..9 aralığında sıkıştırma kalitesini belirleyebiliriz:

```php
$image->save('resampled.jpg', 80); // JPEG, kalite %80
```

Dosya uzantısından format belli değilse, [sabit|#Formáty] ile belirtilebilir:

```php
$image->save('resampled.tmp', null, ImageType::JPEG);
```

Resim, diske yerine bir değişkene yazılabilir:

```php
$data = $image->toString(ImageType::JPEG, 80); // JPEG, kalite %80
```

veya uygun HTTP başlığı `Content-Type` ile doğrudan tarayıcıya gönderilebilir:

```php
// Content-Type: image/png başlığını gönderir
$image->send(ImageType::PNG);
```


Formatlar
=========

Desteklenen formatlar JPEG, PNG, GIF, WebP, AVIF ve BMP'dir, ancak PHP sürümünüzün de bunları desteklemesi gerekir, bunu [#isTypeSupported()] fonksiyonu ile doğrulayabilirsiniz. Animasyonlar desteklenmez.

Format, `ImageType::JPEG`, `ImageType::PNG`, `ImageType::GIF`, `ImageType::WEBP`, `ImageType::AVIF` ve `ImageType::BMP` sabitleri ile temsil edilir.

```php
$supported = Image::isTypeSupported(ImageType::JPEG);
```

Yükleme sırasında resim formatını tespit etmeniz mi gerekiyor? Metot, ikinci parametrede formatı döndürür:

```php
$image = Image::fromFile('nette.jpg', $type);
```

Resmi yüklemeden sadece tespit işlemini `Image::detectTypeFromFile()` yapar.


Yeniden Boyutlandırma
=====================

Sık yapılan bir işlem, resmin boyutlarını değiştirmektir. Mevcut boyutları `getWidth()` ve `getHeight()` metotları döndürür.

Değişiklik için `resize()` metodu kullanılır. 500x300 piksel boyutlarını aşmayacak şekilde orantılı yeniden boyutlandırma örneği (ya genişlik tam olarak 500 piksel olacak ya da yükseklik tam olarak 300 piksel olacak, en boy oranını korumak için boyutlardan biri hesaplanacaktır):

```php
$image->resize(500, 300);
```

Sadece bir boyut belirtmek ve diğerinin hesaplanmasını sağlamak mümkündür:

```php
$image->resize(500, null); // genişlik 500 piksel, yükseklik hesaplanır

$image->resize(null, 300); // genişlik hesaplanır, yükseklik 300 piksel
```

Herhangi bir boyut yüzde olarak da belirtilebilir:

```php
$image->resize('75%', 300); // %75 × 300 piksel
```

`resize` davranışını aşağıdaki bayraklarla etkileyebilirsiniz. `Image::Stretch` dışındaki tümü en boy oranını korur.

|---------------------------------------------------------------------------------------
| Bayrak                 | Açıklama
|---------------------------------------------------------------------------------------
| `Image::OrSmaller` (varsayılan) | sonuç boyutları istenen boyutlara eşit veya daha küçük olacaktır
| `Image::OrBigger`         | hedef alanı doldurur (ve muhtemelen bir boyutta aşar)
| `Image::Cover`            | hedef alanı doldurur ve aşan kısmı kırpar
| `Image::ShrinkOnly`       | sadece küçültme (küçük bir resmin büyütülmesini önler)
| `Image::Stretch`          | en boy oranını korumaz


Bayraklar, fonksiyonun üçüncü argümanı olarak belirtilir:

```php
$image->resize(500, 300, Image::OrBigger);
```

Bayraklar birleştirilebilir:

```php
$image->resize(500, 300, Image::ShrinkOnly | Image::Stretch);
```

Resimler, boyutlardan birini (veya her ikisini) negatif bir sayı olarak belirterek dikey veya yatay olarak çevrilebilir:

```php
$flipped = $image->resize(null, '-100%'); // dikey çevir

$flipped = $image->resize('-100%', '-100%'); // 180° döndür

$flipped = $image->resize(-125, 500); // yeniden boyutlandır ve yatay çevir
```

Resmi küçülttükten sonra, görünümünü hafif bir keskinleştirme ile iyileştirmek mümkündür:

```php
$image->sharpen();
```


Kırpma
======

Kırpma için `crop()` metodu kullanılır:

```php
$image->crop($left, $top, $width, $height);
```

`resize()` metodunda olduğu gibi, tüm değerler yüzde olarak belirtilebilir. `$left` ve `$top` için yüzdeler, CSS özelliği `background-position`'a benzer şekilde kalan alandan hesaplanır:

```php
$image->crop('100%', '50%', '80%', '80%');
```

[* crop.svg *]


Resim ayrıca otomatik olarak da kırpılabilir, örneğin siyah kenarları kırpma:

```php
$image->cropAuto(IMG_CROP_BLACK);
```

`cropAuto()` metodu, `imagecropauto()` fonksiyonunun nesneye yönelik bir alternatifidir, [dokümantasyonuna|https://www.php.net/manual/en/function.imagecropauto] daha fazla bilgi bulabilirsiniz.


Renkler .{data-version:4.0.2}
=============================

`ImageColor::rgb()` metodu, kırmızı, yeşil ve mavi (RGB) değerlerini kullanarak bir renk tanımlamanıza olanak tanır. İsteğe bağlı olarak, 0 (tamamen şeffaf) ile 1 (tamamen opak) arasında bir şeffaflık değeri de belirtebilirsiniz, yani CSS'deki gibi.

```php
$color = ImageColor::rgb(255, 0, 0); // Kırmızı
$transparentBlue = ImageColor::rgb(0, 0, 255, 0.5); // Yarı şeffaf mavi
```

`ImageColor::hex()` metodu, CSS'dekine benzer şekilde onaltılık format kullanarak bir renk tanımlamanıza olanak tanır. `#rgb`, `#rrggbb`, `#rgba` ve `#rrggbbaa` formatlarını destekler:

```php
$color = ImageColor::hex("#F00"); // Kırmızı
$transparentGreen = ImageColor::hex("#00FF0080"); // Yarı şeffaf yeşil
```

Renkler, `ellipse()`, `fill()` vb. gibi diğer metotlarda kullanılabilir.


Çizim ve Düzenleme
==================

Çizebilirsin, yazabilirsin ama yaprakları koparamazsın. Resimlerle çalışmak için tüm PHP fonksiyonları size sunulmuştur, bkz. [#Přehled metod |#Metotlara Genel Bakış], ancak nesneye yönelik bir biçimde:

```php
$image->filledEllipse($centerX, $centerY, $width, $height, ImageColor::rgb(255, 0, 0));
```

PHP'nin dikdörtgen çizme fonksiyonları koordinat belirleme nedeniyle pratik olmadığından, `Image` sınıfı [#rectangleWH()] ve [#filledRectangleWH()] fonksiyonları şeklinde bunların yerine geçenleri sunar.


Birden Fazla Resmi Birleştirme
==============================

Bir resme kolayca başka bir resim eklenebilir:

```php
$logo = Image::fromFile('logo.png');
$blank = Image::fromBlank(320, 240, ImageColor::rgb(52, 132, 210));

// koordinatlar yine yüzde olarak belirtilebilir
$blank->place($logo, '80%', '80%'); // sağ alt köşeye yakın bir yere ekleriz
```

Ekleme sırasında alfa kanalı dikkate alınır, ayrıca eklenen resmin şeffaflığını etkileyebiliriz (bir filigran oluştururuz):

```php
$blank->place($image, '80%', '80%', 25); // şeffaflık %25'tir
```

Böyle bir API kullanmak gerçekten bir zevktir!


Metotlara Genel Bakış
=====================


static fromBlank(int $width, int $height, ?ImageColor $color=null): Image .[method]
-----------------------------------------------------------------------------------
Verilen boyutlarda yeni bir true color resim oluşturur. Varsayılan renk siyahtır.


static fromFile(string $file, int &$detectedFormat=null): Image .[method]
-------------------------------------------------------------------------
Dosyadan bir resim yükler ve `$detectedFormat` içinde [tipini|#Formáty] döndürür.


static fromString(string $s, int &$detectedFormat=null): Image .[method]
------------------------------------------------------------------------
Bir karakter dizisinden bir resim yükler ve `$detectedFormat` içinde [tipini|#Formáty] döndürür.


static rgb(int $red, int $green, int $blue, int $transparency=0): array .[method][deprecated]
---------------------------------------------------------------------------------------------
Bu fonksiyonun yerini `ImageColor` sınıfı almıştır, bkz. [renkler|#Barvy].


static typeToExtension(int $type): string .[method]
---------------------------------------------------
Verilen [tip|#Formáty] için dosya uzantısını döndürür.


static typeToMimeType(int $type): string .[method]
--------------------------------------------------
Verilen [tip|#Formáty] için mime türünü döndürür.


static extensionToType(string $extension): int .[method]
--------------------------------------------------------
Dosya uzantısına göre resmin [tipini|#Formáty] döndürür.


static detectTypeFromFile(string $file, int &$width=null, int &$height=null): ?int .[method]
--------------------------------------------------------------------------------------------
Resmin [tipini|#Formáty] ve `$width` ve `$height` parametrelerinde boyutlarını döndürür.


static detectTypeFromString(string $s, int &$width=null, int &$height=null): ?int .[method]
-------------------------------------------------------------------------------------------
Bir karakter dizisinden resmin [tipini|#Formáty] ve `$width` ve `$height` parametrelerinde boyutlarını döndürür.


static isTypeSupported(int $type): bool .[method]
-------------------------------------------------
Verilen resim [tipinin|#Formáty] desteklenip desteklenmediğini kontrol eder.


static getSupportedTypes(): array .[method]{data-version:4.0.4}
---------------------------------------------------------------
Desteklenen resim [tiplerinin|#Formáty] bir dizisini döndürür.


static calculateTextBox(string $text, string $fontFile, float $size, float $angle=0, array $options=[]): array .[method]
------------------------------------------------------------------------------------------------------------------------
Belirli bir yazı tipi ve boyutunda metni çevreleyecek dikdörtgenin boyutlarını hesaplar. `left`, `top`, `width`, `height` anahtarlarını içeren ilişkisel bir dizi döndürür. Metin sol alt kesme ile başlıyorsa sol kenar negatif olabilir.


affine(array $affine, ?array $clip=null): Image .[method]
---------------------------------------------------------
İsteğe bağlı bir kırpma alanı kullanarak src'nin afin olarak dönüştürülmüş görüntüsünü içeren bir resim döndürün. ([daha fazla |https://www.php.net/manual/en/function.imageaffine]).


affineMatrixConcat(array $m1, array $m2): array .[method]
---------------------------------------------------------
Aynı resme aynı anda birden fazla dönüşüm uygulanacaksa kullanışlı olan iki afin dönüşüm matrisinin birleşimini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imageaffinematrixconcat])


affineMatrixGet(int $type, ?mixed $options=null): array .[method]
-----------------------------------------------------------------
Bir matris dönüşüm matrisi döndürür. ([daha fazla |https://www.php.net/manual/en/function.imageaffinematrixget])


alphaBlending(bool $on): void .[method]
---------------------------------------
Truecolor resimlerde iki farklı çizim moduna izin verir. Karıştırma modunda, `setPixel()` gibi tüm çizim fonksiyonlarında kullanılan rengin alfa kanalı bileşeni, alttaki rengin ne ölçüde görünmesine izin verilmesi gerektiğini belirler. Sonuç olarak, bu noktada mevcut renk otomatik olarak çizilen renkle karıştırılır ve sonuç resme kaydedilir. Sonuç piksel opaktır. Karıştırma olmayan modda, çizilen renk alfa kanalı bilgileriyle birlikte tam olarak kopyalanır ve hedef pikselin yerini alır. Palet resimlerine çizim yaparken karıştırma modu kullanılamaz. ([daha fazla |https://www.php.net/manual/en/function.imagealphablending])


antialias(bool $on): void .[method]
-----------------------------------
Yumuşatılmış çizgilerin ve çokgenlerin çizimini etkinleştirin. Alfa kanallarını desteklemez. Yalnızca truecolor resimlerde çalışır.

Kenarları yumuşatılmış ilkelleri şeffaf bir arka plan rengiyle kullanmak bazı beklenmedik sonuçlarla sonuçlanabilir. Karıştırma yöntemi, diğer tüm renkler gibi arka plan rengini kullanır. ([daha fazla |https://www.php.net/manual/en/function.imageantialias])


arc(int $centerX, int $centerY, int $width, int $height, int $startAngle, int $endAngle, ImageColor $color): void .[method]
---------------------------------------------------------------------------------------------------------------------------
Verilen koordinatlarda merkezlenmiş bir daire yayı çizer. ([daha fazla |https://www.php.net/manual/en/function.imagearc])


colorAllocate(int $red, int $green, int $blue): int .[method]
-------------------------------------------------------------
Verilen RGB bileşenlerinden oluşan rengi temsil eden bir renk tanımlayıcısı döndürür. Resimde kullanılacak her renk için oluşturulması gerekir. ([daha fazla |https://www.php.net/manual/en/function.imagecolorallocate])


colorAllocateAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
------------------------------------------------------------------------------
Şeffaflık parametresi `$alpha` eklenmesiyle `colorAllocate()` ile aynı şekilde davranır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorallocatealpha])


colorAt(int $x, int $y): int .[method]
--------------------------------------
Resimdeki belirtilen konumdaki pikselin renk indeksini döndürür. Resim truecolor ise, bu fonksiyon o pikselin RGB değerini bir tamsayı olarak döndürür. Ayrı kırmızı, yeşil ve mavi bileşen değerlerine erişmek için bit kaydırma ve bit maskeleme kullanın: ([daha fazla |https://www.php.net/manual/en/function.imagecolorat])


colorClosest(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Resim paletindeki, belirtilen RGB değerine "en yakın" olan rengin indeksini döndürür. İstenen renk ile paletteki her renk arasındaki "mesafe", RGB değerleri üç boyutlu uzaydaki noktaları temsil ediyormuş gibi hesaplanır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosest])


colorClosestAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Resim paletindeki, belirtilen RGB değerine ve `$alpha` seviyesine "en yakın" olan rengin indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosestalpha])


colorClosestHWB(int $red, int $green, int $blue): int .[method]
---------------------------------------------------------------
Tonu, beyazı ve siyahı verilen renge en yakın olan rengin indeksini alın. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosesthwb])


colorDeallocate(int $color): void .[method]
-------------------------------------------
Daha önce `colorAllocate()` veya `colorAllocateAlpha()` ile ayrılmış bir rengin ayrılmasını kaldırır. ([daha fazla |https://www.php.net/manual/en/function.imagecolordeallocate])


colorExact(int $red, int $green, int $blue): int .[method]
----------------------------------------------------------
Resim paletindeki belirtilen rengin indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorexact])


colorExactAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
---------------------------------------------------------------------------
Resim paletindeki belirtilen renk + alfa indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorexactalpha])


colorMatch(Image $image2): void .[method]
-----------------------------------------
Palet renklerini ikinci resme uyarlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolormatch])


colorResolve(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
İstenen renk için, ya tam rengi ya da mümkün olan en yakın alternatifi olan renk indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorresolve])


colorResolveAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
İstenen renk için, ya tam rengi ya da mümkün olan en yakın alternatifi olan renk indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorresolvealpha])


colorSet(int $index, int $red, int $green, int $blue): void .[method]
---------------------------------------------------------------------
Paletteki belirtilen indeksi belirtilen renge ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolorset])


colorsForIndex(int $index): array .[method]
-------------------------------------------
Belirtilen indeksin rengini alır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorsforindex])


colorsTotal(): int .[method]
----------------------------
Resim paletindeki renk sayısını döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorstotal])


colorTransparent(?int $color=null): int .[method]
-------------------------------------------------
Resimdeki şeffaf rengi alır veya ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolortransparent])


convolution(array $matrix, float $div, float $offset): void .[method]
---------------------------------------------------------------------
Verilen katsayı ve ofseti kullanarak resme bir konvolüsyon matrisi uygular. ([daha fazla |https://www.php.net/manual/en/function.imageconvolution])

.[note]
*Bundled GD extension*'ın varlığını gerektirir, bu nedenle her yerde çalışmayabilir.


copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH): void .[method]
--------------------------------------------------------------------------------------------------
`$src` öğesinin bir bölümünü, `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliği ve `$srcH` yüksekliği ile resme kopyalar. Tanımlanan bölüm `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopy])


copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
---------------------------------------------------------------------------------------------------------------------
`$src` öğesinin bir bölümünü, `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliği ve `$srcH` yüksekliği ile resme kopyalar. Tanımlanan bölüm `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopymerge])


copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
-------------------------------------------------------------------------------------------------------------------------
`$src` öğesinin bir bölümünü, `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliği ve `$srcH` yüksekliği ile resme kopyalar. Tanımlanan bölüm `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır.

Bu fonksiyon, birleştirme sırasında hedef pikselleri kopyalama işleminden önce gri tonlamaya dönüştürerek kaynağın tonunu koruması dışında `copyMerge()` ile aynıdır. ([daha fazla |https://www.php.net/manual/en/function.imagecopymergegray])


copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
---------------------------------------------------------------------------------------------------------------------------------
Bir resmin dikdörtgen bir bölümünü başka bir resme kopyalar, piksel değerlerini düzgün bir şekilde enterpole eder, böylece özellikle bir resmin boyutunu küçültmek hala büyük bir netliği korur.

Başka bir deyişle, `copyResampled()` `$src` öğesinden (`$srcX`, `$srcY`) konumunda `$srcW` genişliğinde ve `$srcH` yüksekliğinde dikdörtgen bir alan alır ve bunu (`$dstX`, `$dstY`) konumunda `$dstW` genişliğinde ve `$dstH` yüksekliğinde resmin dikdörtgen bir alanına yerleştirir.

Kaynak ve hedef koordinatları, genişlik ve yükseklik farklıysa, resim parçasının karşılık gelen bir genişletilmesi veya küçültülmesi gerçekleştirilir. Koordinatlar sol üst köşeye göredir. Bu fonksiyon aynı resimdeki alanları kopyalamak için kullanılabilir, ancak alanlar örtüşüyorsa sonuçlar öngörülemez olacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopyresampled])


copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
-------------------------------------------------------------------------------------------------------------------------------
Bir resmin dikdörtgen bir bölümünü başka bir resme kopyalar. Başka bir deyişle, `copyResized()` `$src` öğesinden (`$srcX`, `$srcY`) konumunda `$srcW` genişliğinde ve `$srcH` yüksekliğinde dikdörtgen bir alan alır ve bunu (`$dstX`, `$dstY`) konumunda `$dstW` genişliğinde ve `$dstH` yüksekliğinde resmin dikdörtgen bir alanına yerleştirir.

Kaynak ve hedef koordinatları, genişlik ve yükseklik farklıysa, resim parçasının karşılık gelen bir genişletilmesi veya küçültülmesi gerçekleştirilir. Koordinatlar sol üst köşeye göredir. Bu fonksiyon aynı resimdeki alanları kopyalamak için kullanılabilir, ancak alanlar örtüşüyorsa sonuçlar öngörülemez olacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopyresized])


crop(int|string $left, int|string $top, int|string $width, int|string $height): Image .[method]
-----------------------------------------------------------------------------------------------
Resmi verilen dikdörtgen alana kırpar. Boyutlar piksel cinsinden tamsayılar veya yüzde cinsinden karakter dizileri (örneğin `'50%'`) olarak belirtilebilir.


cropAuto(int $mode=-1, float $threshold=.5, ?ImageColor $color=null): Image .[method]
-------------------------------------------------------------------------------------
Resmi verilen `$mode`'a göre otomatik olarak kırpar. ([daha fazla |https://www.php.net/manual/en/function.imagecropauto])


ellipse(int $centerX, int $centerY, int $width, int $height, ImageColor $color): void .[method]
-----------------------------------------------------------------------------------------------
Belirtilen koordinatlarda merkezlenmiş bir elips çizer. ([daha fazla |https://www.php.net/manual/en/function.imageellipse])


fill(int $x, int $y, ImageColor $color): void .[method]
-------------------------------------------------------
Verilen koordinattan başlayarak (sol üst 0, 0) alanı verilen `$color` ile doldurur. ([daha fazla |https://www.php.net/manual/en/function.imagefill])


filledArc(int $centerX, int $centerY, int $width, int $height, int $startAngle, int $endAngle, ImageColor $color, int $style): void .[method]
---------------------------------------------------------------------------------------------------------------------------------------------
Belirtilen koordinatlarda merkezlenmiş kısmi bir yay çizer. ([daha fazla |https://www.php.net/manual/en/function.imagefilledarc])


filledEllipse(int $centerX, int $centerY, int $width, int $height, ImageColor $color): void .[method]
-----------------------------------------------------------------------------------------------------
Belirtilen koordinatlarda merkezlenmiş bir elips çizer. ([daha fazla |https://www.php.net/manual/en/function.imagefilledellipse])


filledPolygon(array $points, ImageColor $color): void .[method]
---------------------------------------------------------------
Resimde doldurulmuş bir çokgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagefilledpolygon])


filledRectangle(int $x1, int $y1, int $x2, int $y2, ImageColor $color): void .[method]
--------------------------------------------------------------------------------------
Resimde `$x1` & `$y1` noktasından başlayıp `$x2` & `$y2` noktasında biten `$color` ile doldurulmuş bir dikdörtgen oluşturur. 0, 0 noktası resmin sol üst köşesidir. ([daha fazla |https://www.php.net/manual/en/function.imagefilledrectangle])


filledRectangleWH(int $left, int $top, int $width, int $height, ImageColor $color): void .[method]
--------------------------------------------------------------------------------------------------
Resimde `$left` & `$top` noktasından başlayarak `$width` genişliğinde ve `$height` yüksekliğinde `$color` ile doldurulmuş bir dikdörtgen oluşturur. 0, 0 noktası resmin sol üst köşesidir.


fillToBorder(int $x, int $y, int $border, ImageColor $color): void .[method]
----------------------------------------------------------------------------
Kenar rengi `$border` ile tanımlanan bir dolgu çizer. Dolgunun başlangıç noktası `$x`, `$y`'dir (sol üst 0, 0) ve alan `$color` rengiyle doldurulur. ([daha fazla |https://www.php.net/manual/en/function.imagefilltoborder])


filter(int $filtertype, int ...$args): void .[method]
-----------------------------------------------------
Verilen `$filtertype` filtresini resme uygular. ([daha fazla |https://www.php.net/manual/en/function.imagefilter])


flip(int $mode): void .[method]
-------------------------------
Resmi verilen `$mode` kullanarak çevirir. ([daha fazla |https://www.php.net/manual/en/function.imageflip])


ftText(float $size, float $angle, int $x, int $y, ImageColor $color, string $fontFile, string $text, array $options=[]): array .[method]
----------------------------------------------------------------------------------------------------------------------------------------
Metni resme yazdırır. ([daha fazla |https://www.php.net/manual/en/function.imagefttext])


gammaCorrect(float $inputgamma, float $outputgamma): void .[method]
-------------------------------------------------------------------
Giriş ve çıkış gammalarına göre resme gama düzeltmesi uygular. ([daha fazla |https://www.php.net/manual/en/function.imagegammacorrect])


getClip(): array .[method]
--------------------------
Mevcut kırpmayı, yani hiçbir pikselin çizilmeyeceği alanı döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagegetclip])


getHeight(): int .[method]
--------------------------
Resmin yüksekliğini döndürür.


getImageResource(): resource|GdImage .[method]
----------------------------------------------
Orijinal kaynağı döndürür.


getWidth(): int .[method]
-------------------------
Resmin genişliğini döndürür.


interlace(?int $interlace=null): int .[method]
----------------------------------------------
Geçişli modu açar veya kapatır. Geçişli mod ayarlanmışsa ve resim JPEG olarak kaydedilmişse, aşamalı JPEG olarak kaydedilir. ([daha fazla |https://www.php.net/manual/en/function.imageinterlace])


isTrueColor(): bool .[method]
-----------------------------
Resmin truecolor olup olmadığını belirler. ([daha fazla |https://www.php.net/manual/en/function.imageistruecolor])


layerEffect(int $effect): void .[method]
----------------------------------------
Katman efektlerini kullanmak için alfa karıştırma bayrağını ayarlayın. ([daha fazla |https://www.php.net/manual/en/function.imagelayereffect])


line(int $x1, int $y1, int $x2, int $y2, ImageColor $color): void .[method]
---------------------------------------------------------------------------
Verilen iki nokta arasına bir çizgi çizer. ([daha fazla |https://www.php.net/manual/en/function.imageline])


openPolygon(array $points, ImageColor $color): void .[method]
-------------------------------------------------------------
Resme açık bir çokgen çizer. `polygon()`'un aksine, son ve ilk nokta arasına çizgi çizilmez. ([daha fazla |https://www.php.net/manual/en/function.imageopenpolygon])


paletteCopy(Image $source): void .[method]
------------------------------------------
Paleti `$source` öğesinden resme kopyalar. ([daha fazla |https://www.php.net/manual/en/function.imagepalettecopy])


paletteToTrueColor(): void .[method]
------------------------------------
Palet tabanlı bir resmi tam renkli bir resme dönüştürür. ([daha fazla |https://www.php.net/manual/en/function.imagepalettetotruecolor])


place(Image $image, int|string $left=0, int|string $top=0, int $opacity=100): Image .[method]
---------------------------------------------------------------------------------------------
`$image` öğesini `$left` ve `$top` koordinatlarında resme kopyalar. Koordinatlar piksel cinsinden tamsayılar veya yüzde cinsinden karakter dizileri (örneğin `'50%'`) olarak belirtilebilir.


polygon(array $points, ImageColor $color): void .[method]
---------------------------------------------------------
Resimde bir çokgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagepolygon])


rectangle(int $x1, int $y1, int $x2, int $y2, ImageColor $color): void .[method]
--------------------------------------------------------------------------------
Belirtilen koordinatlarda bir dikdörtgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagerectangle])


rectangleWH(int $left, int $top, int $width, int $height, ImageColor $color): void .[method]
--------------------------------------------------------------------------------------------
Belirtilen koordinatlarda bir dikdörtgen oluşturur.


resize(int|string $width, int|string $height, int $flags=Image::OrSmaller): Image .[method]
-------------------------------------------------------------------------------------------
Resmi yeniden boyutlandırır, [daha fazla bilgi|#Změna velikosti]. Boyutlar piksel cinsinden tamsayılar veya yüzde cinsinden karakter dizileri (örneğin `'50%'`) olarak belirtilebilir.


resolution(?int $resX=null, ?int $resY=null): mixed .[method]
-------------------------------------------------------------
Resmin çözünürlüğünü DPI (inç başına nokta) cinsinden ayarlar veya döndürür. İsteğe bağlı parametrelerden hiçbiri belirtilmezse, mevcut çözünürlük indekslenmiş bir dizi olarak döndürülür. Yalnızca `$resX` belirtilirse, yatay ve dikey çözünürlük bu değere ayarlanır. Her iki isteğe bağlı parametre de belirtilirse, yatay ve dikey çözünürlük bu değerlere ayarlanır.

Çözünürlük yalnızca, bu tür bilgileri destekleyen formatlarda (şu anda PNG ve JPEG) resimler okunurken ve yazılırken meta bilgi olarak kullanılır. Herhangi bir çizim işlemini etkilemez. Yeni görüntülerin varsayılan çözünürlüğü 96 DPI'dır. ([daha fazla |https://www.php.net/manual/en/function.imageresolution])


rotate(float $angle, int $backgroundColor): Image .[method]
-----------------------------------------------------------
Resmi belirtilen `$angle` ile derece cinsinden döndürür. Döndürme merkezi resmin merkezidir ve döndürülen resim orijinal resimden farklı boyutlara sahip olabilir. ([daha fazla |https://www.php.net/manual/en/function.imagerotate])

.[note]
*Bundled GD extension*'ın varlığını gerektirir, bu nedenle her yerde çalışmayabilir.


save(string $file, ?int $quality=null, ?int $type=null): void .[method]
-----------------------------------------------------------------------
Resmi bir dosyaya kaydeder.

Sıkıştırma kalitesi JPEG (varsayılan 85), WEBP (varsayılan 80) ve AVIF (varsayılan 30) için 0..100 aralığında ve PNG (varsayılan 9) için 0..9 aralığındadır. Tür dosya uzantısından belli değilse, `ImageType` sabitlerinden birini kullanarak belirtebilirsiniz.


saveAlpha(bool $saveflag): void .[method]
-----------------------------------------
PNG görüntülerini kaydederken tam alfa kanalı bilgilerini (tek renkli şeffaflığın aksine) koruyup korumayacağını belirleyen bayrağı ayarlar.

Alfa kanalını ilk etapta korumak için alfablending devre dışı bırakılmalıdır (`alphaBlending(false)`). ([daha fazla |https://www.php.net/manual/en/function.imagesavealpha])


scale(int $newWidth, int $newHeight=-1, int $mode=IMG_BILINEAR_FIXED): Image .[method]
--------------------------------------------------------------------------------------
Verilen interpolasyon algoritmasını kullanarak resmi ölçeklendirir. ([daha fazla |https://www.php.net/manual/en/function.imagescale])


send(int $type=ImageType::JPEG, ?int $quality=null): void .[method]
-------------------------------------------------------------------
Resmi tarayıcıya yazdırır.

Sıkıştırma kalitesi JPEG (varsayılan 85), WEBP (varsayılan 80) ve AVIF (varsayılan 30) için 0..100 aralığında ve PNG (varsayılan 9) için 0..9 aralığındadır.


setBrush(Image $brush): void .[method]
--------------------------------------
Özel renkler IMG_COLOR_BRUSHED veya IMG_COLOR_STYLEDBRUSHED ile çizim yaparken tüm çizgi çizim fonksiyonlarında (örneğin `line()` ve `polygon()`) kullanılacak fırça görüntüsünü ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetbrush])


setClip(int $x1, int $y1, int $x2, int $y2): void .[method]
-----------------------------------------------------------
Mevcut kırpmayı, yani hiçbir pikselin çizilmeyeceği alanı ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetclip])


setInterpolation(int $method=IMG_BILINEAR_FIXED): void .[method]
----------------------------------------------------------------
`rotate()` ve `affine()` metotlarını etkileyen interpolasyon yöntemini ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetinterpolation])


setPixel(int $x, int $y, ImageColor $color): void .[method]
-----------------------------------------------------------
Belirtilen koordinata bir piksel çizer. ([daha fazla |https://www.php.net/manual/en/function.imagesetpixel])


setStyle(array $style): void .[method]
--------------------------------------
Özel renk IMG_COLOR_STYLED veya renk IMG_COLOR_STYLEDBRUSHED ile resim çizgileri çizerken tüm çizgi çizim fonksiyonları (örneğin `line()` ve `polygon()`) tarafından kullanılacak stili ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetstyle])


setThickness(int $thickness): void .[method]
--------------------------------------------
Dikdörtgenler, çokgenler, yaylar vb. çizerken çizgilerin kalınlığını `$thickness` piksel olarak ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetthickness])


setTile(Image $tile): void .[method]
------------------------------------
Özel renk IMG_COLOR_TILED ile doldururken tüm bölge doldurma fonksiyonlarında (örneğin `fill()` ve `filledPolygon()`) kullanılacak döşeme görüntüsünü ayarlar.

Döşeme, bir alanı tekrarlayan bir desenle doldurmak için kullanılan bir resimdir. Herhangi bir resim döşeme olarak kullanılabilir ve döşeme resminin şeffaf renk indeksini `colorTransparent()` ile ayarlayarak, alttaki alanın belirli bölümlerinin görüneceği bir döşeme oluşturulabilir. ([daha fazla |https://www.php.net/manual/en/function.imagesettile])


sharpen(): Image .[method]
--------------------------
Resmi keskinleştirir.

.[note]
*Bundled GD extension*'ın varlığını gerektirir, bu nedenle her yerde çalışmayabilir.


toString(int $type=ImageType::JPEG, ?int $quality=null): string .[method]
-------------------------------------------------------------------------
Resmi bir karakter dizisine kaydeder.

Sıkıştırma kalitesi JPEG (varsayılan 85), WEBP (varsayılan 80) ve AVIF (varsayılan 30) için 0..100 aralığında ve PNG (varsayılan 9) için 0..9 aralığındadır.


trueColorToPalette(bool $dither, int $ncolors): void .[method]
--------------------------------------------------------------
Truecolor bir resmi palet resmine dönüştürür. ([daha fazla |https://www.php.net/manual/en/function.imagetruecolortopalette])


ttfText(float $size, float $angle, int $x, int $y, ImageColor $color, string $fontFile, string $text, array $options=[]): array .[method]
-----------------------------------------------------------------------------------------------------------------------------------------
Verilen metni resme yazdırır. ([daha fazla |https://www.php.net/manual/en/function.imagettftext])
