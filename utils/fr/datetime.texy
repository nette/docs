Date et heure
*************

.[perex]
[api:Nette\Utils\DateTime] est une classe qui étend la classe native [php:DateTime] avec des fonctionnalités supplémentaires.


Installation :

```shell
composer require nette/utils
```

Tous les exemples supposent qu'un alias a été créé :

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Crée un objet DateTime à partir d'une chaîne, d'un timestamp UNIX ou d'un autre objet [php:DateTimeInterface]. Lève une exception `Exception` si la date et l'heure ne sont pas valides.

```php
DateTime::from(1138013640); // crée un DateTime à partir d'un timestamp UNIX avec le fuseau horaire par défaut
DateTime::from(42); // crée un DateTime à partir de l'heure actuelle plus 42 secondes
DateTime::from('1994-02-26 04:15:32'); // crée un DateTime selon la chaîne
DateTime::from('1994-02-26'); // crée un DateTime selon la date, l'heure sera 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Crée un objet DateTime ou lève une exception `Nette\InvalidArgumentException` si la date et l'heure ne sont pas valides.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, ?string|\DateTimeZone $timezone=null): DateTime|false .[method]
---------------------------------------------------------------------------------------------------------------------
Étend [DateTime::createFromFormat()|https://www.php.net/manual/en/datetime.createfromformat.php] avec la possibilité de spécifier le fuseau horaire sous forme de chaîne.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Crée une copie avec l'heure modifiée.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Retourne la date et l'heure au format `Y-m-d H:i:s`.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


implémente JsonSerializable
---------------------------
Retourne la date et l'heure au format ISO 8601, qui est utilisé par exemple en JavaScript.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
