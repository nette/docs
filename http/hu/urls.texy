URL elemző és építő
*******************

.[perex]
Az [Url |#Url], [UrlImmutable |#UrlImmutable] és [UrlScript |#UrlScript] osztályok megkönnyítik az URL-ek kezelését, elemzését és manipulálását.

→ [Telepítés és követelmények |@home#Installation]

Url
===

A [api:Nette\Http\Url] osztály megkönnyíti az URL-rel és annak egyes összetevőivel való munkát, amelyeket ez az ábra vázol fel:

/--pre
 scheme  user  password  host   port    path        query  fragment
   |      |      |        |      |       |            |       |
 /--\   /--\ /------\ /-------\ /--\/----------\ /--------\ /----\
 <b>http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer</b>
 \______\__________________________/
     |               |
  hostUrl        authority
\--

Az URL generálása intuitív:

```php
use Nette\Http\Url;

$url = new Url;
$url->setScheme('https')
	->setHost('localhost')
	->setPath('/edit')
	->setQueryParameter('foo', 'bar');

echo $url; // 'https://localhost/edit?foo=bar'
```

Az URL-t is elemezheti, majd manipulálhatja:

```php
$url = new Url(
	'http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer',
);
```

A következő módszerek állnak rendelkezésre az egyes URL-komponensek lekérdezéséhez vagy módosításához:

.[language-php]
| Setter | Getter | Visszatérő érték
|--------------------------------------------------------------------------------------------
| `setScheme(string $scheme)`| `getScheme(): string`| `'http'`
| `setUser(string $user)`| `getUser(): string`| `'john'`
| `setPassword(string $password)`| `getPassword(): string`| `'xyz*12'`
| `setHost(string $host)`| `getHost(): string`| `'nette.org'`
| `setPort(int $port)`| `getPort(): ?int`| `8080`
| | `getDefaultPort(): ?int`| `80`
| `setPath(string $path)`| `getPath(): string`| `'/en/download'`
| `setQuery(string\|array $query)`| `getQuery(): string`| `'name=param'`
| `setFragment(string $fragment)`| `getFragment(): string`| `'footer'`
| | `getAuthority(): string`| `'nette.org:8080'`
| | `getHostUrl(): string`| `'http://nette.org:8080'`
| | `getAbsoluteUrl(): string` | teljes URL

Az egyes lekérdezési paraméterekkel is operálhatunk a következőkkel:

.[language-php]
| Setter | Getter
|---------------------------------------------------
| `setQuery(string\|array $query)` | `getQueryParameters(): array`
| `setQueryParameter(string $name, $val)`| `getQueryParameter(string $name)`

A `getDomain(int $level = 2)` metódus a gazdatest jobb vagy bal oldalát adja vissza. Így működik, ha az állomás a `www.nette.org`:

.[language-php]
| `getDomain(1)` | `'org'`
| `getDomain(2)` | `'nette.org'`
| `getDomain(3)` | `'www.nette.org'`
| `getDomain(0)` | `'www.nette.org'`
| `getDomain(-1)` | `'www.nette'`
| `getDomain(-2)` | `'www'`
| `getDomain(-3)` | `''`


A `Url` osztály megvalósítja a `JsonSerializable` interfészt, és rendelkezik egy `__toString()` metódussal, hogy az objektumot ki lehessen nyomtatni, vagy felhasználni a `json_encode()`-nak átadott adatokban.

```php
echo $url;
echo json_encode([$url]);
```

A `isEqual(string|Url $anotherUrl): bool` metódus azt vizsgálja, hogy a két URL azonos-e.

```php
$url->isEqual('https://nette.org');
```


UrlImmutable .[#toc-urlimmutable]
=================================

A [api:Nette\Http\UrlImmutable] osztály a `Url` osztály megváltoztathatatlan alternatívája (ahogyan a PHP-ben a `DateTimeImmutable` a `DateTime` megváltoztathatatlan alternatívája). Setterek helyett úgynevezett witherekkel rendelkezik, amelyek nem változtatják meg az objektumot, hanem új példányokat adnak vissza a módosított értékkel:

```php
use Nette\Http\UrlImmutable;

$url = new UrlImmutable(
	'http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer',
);

$newUrl = $url
	->withUser('')
	->withPassword('')
	->withPath('/en/');

echo $newUrl; // 'http://nette.org:8080/en/?name=param#footer'
```

A következő metódusok állnak rendelkezésre az egyes URL-összetevők kinyerésére vagy megváltoztatására:

.[language-php]
| Wither | Getter | Visszaadott érték
|--------------------------------------------------------------------------------------------
| `withScheme(string $scheme)`| `getScheme(): string`| `'http'`
| `withUser(string $user)`| `getUser(): string`| `'john'`
| `withPassword(string $password)`| `getPassword(): string`| `'xyz*12'`
| `withHost(string $host)`| `getHost(): string`| `'nette.org'`
| `withPort(int $port)`| `getPort(): ?int`| `8080`
| | `getDefaultPort(): ?int`| `80`
| `withPath(string $path)`| `getPath(): string`| `'/en/download'`
| `withQuery(string\|array $query)`| `getQuery(): string`| `'name=param'`
| `withFragment(string $fragment)`| `getFragment(): string`| `'footer'`
| | `getAuthority(): string`| `'nette.org:8080'`
| | `getHostUrl(): string`| `'http://nette.org:8080'`
| | `getAbsoluteUrl(): string` | teljes URL

Az egyes lekérdezési paraméterekkel is operálhatunk a következőkkel:

.[language-php]
| Wither | Getter
|-----------------------------------------------
| `withQuery(string\|array $query)` | `getQueryParameters(): array`
| `withQueryParameter(string $name, $val)` | `getQueryParameter(string $name)`

A `getDomain(int $level = 2)` módszer ugyanúgy működik, mint a `Url` módszer. A `withoutUserInfo()` módszer eltávolítja a `user` és a `password` címet.

A `UrlImmutable` osztály megvalósítja a `JsonSerializable` interfészt, és rendelkezik egy `__toString()` metódussal, hogy az objektumot ki lehessen nyomtatni, vagy fel lehessen használni a `json_encode()`-nak átadott adatokban.

```php
echo $url;
echo json_encode([$url]);
```

A `isEqual(string|Url $anotherUrl): bool` metódus azt vizsgálja, hogy a két URL azonos-e.


UrlScript .[#toc-urlscript]
===========================

A [api:Nette\Http\UrlScript] osztály a `UrlImmutable` leszármazottja, és ezen felül megkülönbözteti az URL ezen logikai részeit:

/--pre
      baseUrl    basePath  relativePath  relativeUrl
         |          |        |               |
 /---------------/-----\/--------\---------------------------\
 <b>http://nette.org/admin/script.php/pathinfo/?name=param#footer</b>
                 \_______________/\________/
                        |              |
                   scriptPath       pathInfo
\--

A következő metódusok állnak rendelkezésre ezen részek lekérdezéséhez:

.[language-php]
| Getter | Visszaadott érték
|------------------------------------------------
| `getScriptPath(): string`| `'/admin/script.php'`
| `getBasePath(): string`| `'/admin/'`
| `getBaseUrl(): string`| `'http://nette.org/admin/'`
| `getRelativePath(): string`| `'script.php'`
| `getRelativeUrl(): string`| `'script.php/pathinfo/?name=param#footer'`
| `getPathInfo(): string`| `'/pathinfo/'`


A `UrlScript` objektumokat nem közvetlenül hozzuk létre, hanem a [Nette\Http\Request::getUrl() |request] metódus adja vissza.
