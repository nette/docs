Éditeurs & Outils
*****************

.[perex]
Vous pouvez être un programmeur compétent, mais ce n'est qu'avec de bons outils que vous deviendrez un maître. Dans ce chapitre, vous trouverez des conseils sur les outils, éditeurs et plugins importants.


Éditeur IDE
===========

Nous recommandons vivement d'utiliser un IDE complet pour le développement, tel que PhpStorm, NetBeans, VS Code, et pas seulement un éditeur de texte avec prise en charge PHP. La différence est vraiment fondamentale. Il n'y a aucune raison de se contenter d'un simple éditeur qui colore la syntaxe mais n'atteint pas les capacités d'un IDE de pointe, qui suggère précisément, surveille les erreurs, peut refactoriser le code et bien plus encore. Certains IDE sont payants, d'autres sont même gratuits.

**NetBeans IDE** intègre déjà la prise en charge de Nette, Latte et NEON.

**PhpStorm** : installez ces plugins dans `Settings > Plugins > Marketplace`
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code** : trouvez le plugin "Nette Latte + Neon" dans le marketplace.

Connectez également Tracy à votre éditeur. Lorsque la page d'erreur s'affiche, vous pourrez cliquer sur les noms de fichiers et ils s'ouvriront dans l'éditeur avec le curseur sur la ligne correspondante. Lisez [comment configurer le système|tracy:open-files-in-ide].


PHPStan
=======

PHPStan est un outil qui détecte les erreurs logiques dans le code avant même de l'exécuter.

Nous l'installons à l'aide de Composer :

```shell
composer require --dev phpstan/phpstan-nette
```

Nous créons un fichier de configuration `phpstan.neon` dans le projet :

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Et ensuite, nous le laissons analyser les classes dans le dossier `app/` :

```shell
vendor/bin/phpstan analyse app
```

Vous trouverez une documentation exhaustive directement sur le [site web de PHPStan |https://phpstan.org].


Code Checker
============

[Code Checker|code-checker:] vérifie et corrige éventuellement certaines erreurs formelles dans vos codes sources :

- supprime le [BOM |nette:glossary#bom]
- vérifie la validité des templates [Latte |latte:]
- vérifie la validité des fichiers `.neon`, `.php` et `.json`
- vérifie la présence de [caractères de contrôle |nette:glossary#kontrolní znaky]
- vérifie si le fichier est encodé en UTF-8
- vérifie les `/* @annotations */` mal écrites (manque une étoile)
- supprime les `?>` de fin dans les fichiers PHP
- supprime les espaces de fin de ligne et les lignes vides inutiles à la fin du fichier
- normalise les séparateurs de ligne en séparateurs système (si vous spécifiez l'option `-l`)


Composer
========

[Composer |Composer] est un outil de gestion des dépendances en PHP. Il nous permet de déclarer des dépendances arbitrairement complexes de différentes bibliothèques et les installe ensuite pour nous dans notre projet.


Requirements Checker
====================

C'était un outil qui testait l'environnement d'exécution du serveur et informait si (et dans quelle mesure) le framework pouvait être utilisé. Actuellement, Nette peut être utilisé sur n'importe quel serveur disposant de la version minimale requise de PHP.

{{sitename: Best Practices}}
