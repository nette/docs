Začínáme
********

.[perex]
Seznamte se s Nette Frameworkem a vytvořte si svoji první aplikaci.

Úplně první věc, kterou byste měli udělat, je zkontrolovat, zda váš server splňuje [požadavky|/requirements] pro běh Nette Frameworku. To by s největší pravděpodobností mělo být v pořádku, ale jen pro jistotu, nechceme začínat na nefunkčním prostředí.

Nette Framework můžete stáhnout [manuálně |www:download], ale doporučená cesta je zažít nový projekt s využitím [Composeru |/composer]. Pokud Composer neznáte, určitě byste měli začít s tím. Je to opravdu jednoduché, podívejte se na [dokumentaci |http://getcomposer.org/doc/] Composeru.

S Composerem si můžete velmi jednoduše stáhnout a nainstalovat základní skeleton aplikace, znám spíše pod názvem Sandbox, který již obsahuje Nette Framework. Chcete-li tak učinit, naleznete svůj kořenový adresář (např. `/var/www` nebo `C:\InetPub`) pomocí příkazové řádky a spusťte následující příkaz.

/--code
composer create-project nette/sandbox nette-blog
\--

Sanbox se následně stáhne to složky `nette-blog`.

Pokud vyvíjíte na Mac OS X nebo na Linuxu (nebo na jakémkoliv jiném systému založeném na Unixu), budete muset ještě nastavit práva zápisu webovému serveru.

/--code
cd nette-blog && chmod -R a+rw temp log
\--


Úvodní stránka
====

V tento okamžik by měla již úvodní stránka Sandboxu fungovat. Pokud otevřete váš prohlížeč na následující URL adrese:

/--
http://localhost/nette-blog/www/
\--

a uvidíte úvodní stránku Nette Frameworku:

[* welcome-620.jpg *]

pak aplikace funguje a můžete začít dělat úpravy.


Obsah Sandboxu
====

Sandbox má následující strukturu:

/--pre
<b>www/</b>                      ← kořenový adresář webu
└── <b>nette-blog/</b>
    ├── <b>app/</b>              ← adresář webové aplikace
    │   ├── <b>config/</b>       ← konfigurační soubory
    │   ├── <b>model/</b>        ← třídy modelové vrstvy
    │   ├── <b>presenters/</b>   ← třídy presenterů
    │   ├── <b>templates/</b>    ← šablony
    │   └── <b>bootstrap.php</b> ← spouštěcí soubor
    │
    ├── <b>libs/</b>             ← knihovny pro vaší aplikaci
    │   └── <b>Nette/</b>        ← jako například váš oblíbený framework :-)
    │
    ├── <b>log/</b>              ← zde naleznete chybové logy
    ├── <b>temp/</b>             ← místo pro dočasné soubory (cache, sessiony, atd.)
    ├── <b>test/</b>             ← adresář pro unit testy
    └── <b>www/</b>              ← místní kořenový sdresář webu - pouze tento adresář je přístupný z internetu
\--

Adresář `www` je určen pro ukládání obrázků, JavaScript souborů, CSS stylů a dalších veřejně přístupných souborů. Pouze tento adresář je přístupný z internetu, takže můžete nastavit kořenový sdresář vaší aplikace tak, aby směřoval právě sem (to můžete nastavit v nastavení Apache, ale můžete to udělat později, momentálně to není podstatné).

The most important directory for you is `app`. You can find `bootstrap.php` file there, which loads the framework and configures the application. It activates [autoloading |/auto-loading] and sets up the [debugger |/debugging] and [routes |/routing].

Nejdůležitější složka je pro vás `app`. Zde naleznete soubor `bootstrap.php`, který slouží k načtení celého frameworku a nastavení aplikace. Aktivuje se zde [autoloading |/auto-loading] a nastaví se zde [debugger |/debugging] a [routy |/routing].



Úklid
=======

Sandox obsahuje ukázkový kód, který můžete bez obav smazat. Bez obav můžete smazat soubor `app/templates/Homepage/default.latte`. Zanedlouho přidáme vlastní obsah.


Tracy
=====

Extrémně důležitý nástroj pro vývoj je [debugger s názvem Tracy |/cs/debugging]. Vyzkoušejte si vytvořit několik chyb v souboru `app/presenters/HomepagePresenter.php` (např. odstranění písmena ze slova `class` na začátku třídy) a podívejte se co se stane. Vyskočí červená stránka, která chybu pochopitelně popisuje.

[* debugger-620.png .(debugger screen) *]

Tracy vám významným způsobem pomůže odladit chyby aplikace. Také si všimněte plovoucího debug panelu v pravém dolním rohu obrazovky, který vás informuje o důležitých datech ohledně běžící aplikace.

V produkčním módu je Tracy samozřejmě vypnuta a nezobrazuje žádné citlivé informace. Všechny errory jsou v tomto případě uloženy ve složce `log`. Vyzkoušejte si v souboru `app/bootstrap.php` odkomentovat následující kus kódu stejně tak, jako je to zde:

/--php
// Enable Nette Debugger for error visualization & logging
$configurator->setDebugMode(FALSE);
$configurator->enableDebugger(__DIR__ . '/../log');
\--

Po obnovení stránky se Tracy již nezobrazí. Zobrazí se uživatelsky přívětivá zpráva:

[* server-error-620.png .(error screen) *]

Nyní se podívejte do adresáře `log`. Zde naleznete chybové logy a také již zmíněné červené chybové stránky jako HTML soubory s názvem začínající na `exception`.

Zakomentujte zpět řádku `$configurator->setDebugMode(FALSE);`. Tracy automaticky rozpozná a povolí debug režim na localhostu a zakáže ho všude jinde.

Po tomto krátkém úvodu již můžeme začít navrhovat vlastní aplikaci.