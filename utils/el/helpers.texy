Βοηθητικές λειτουργίες
**********************

.[perex]
[api:Nette\Utils\Helpers] είναι μια στατική κλάση με χρήσιμες λειτουργίες.


Εγκατάσταση:

```shell
composer require nette/utils
```

Όλα τα παραδείγματα προϋποθέτουν ότι έχει οριστεί το ακόλουθο ψευδώνυμο κλάσης:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Εκτελεί ένα callback και επιστρέφει την καταγεγραμμένη έξοδο ως συμβολοσειρά.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Επιστρέφει την τιμή που έχει περιοριστεί στο εύρος των min και max.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

Συγκρίνει δύο τιμές με τον ίδιο τρόπο που το κάνει η PHP. Διακρίνει μεταξύ των τελεστών `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>`.
Η συνάρτηση είναι χρήσιμη σε περιπτώσεις όπου ο τελεστής είναι μεταβλητός.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

Μετατρέπει το `false` σε `null`, δεν αλλάζει άλλες τιμές.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

Επιστρέφει το τελευταίο σφάλμα PHP ή μια κενή συμβολοσειρά αν δεν έχει συμβεί κανένα σφάλμα. Σε αντίθεση με το `error_get_last()`, δεν επηρεάζεται από την οδηγία PHP `html_errors` και επιστρέφει πάντα κείμενο, όχι HTML.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Ψάχνει για ένα αλφαριθμητικό από το `$possibilities` που είναι πιο παρόμοιο με το `$value`, αλλά όχι το ίδιο. Υποστηρίζει μόνο κωδικοποιήσεις 8-bit.

Είναι χρήσιμο αν μια συγκεκριμένη επιλογή δεν είναι έγκυρη και θέλουμε να προτείνουμε στο χρήστη μια παρόμοια (αλλά διαφορετική, οπότε το ίδιο αλφαριθμητικό αγνοείται). Με αυτόν τον τρόπο, η Nette δημιουργεί τα μηνύματα `did you mean ...?`.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', ne 'baz'
```
