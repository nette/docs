Funkcije JSON
*************

.[perex]
[api:Nette\Utils\Json] je statični razred s funkcijami kodiranja in dekodiranja JSON. Obravnava ranljivosti v različnih različicah PHP in ob napakah vrže izjeme.

Namestitev:

```shell
composer require nette/utils
```

Vsi primeri predpostavljajo, da je definiran naslednji vzdevek razreda:

```php
use Nette\Utils\Json;
```


Uporaba .[#toc-usage]
=====================


encode(mixed $value, bool $pretty=false, bool $asciiSafe=false, bool $htmlSafe=false, bool $forceObjects=false): string .[method]
---------------------------------------------------------------------------------------------------------------------------------

Pretvori `$value` v obliko JSON.

Če je nastavljena vrednost `$pretty`, se za lažje branje in preglednost oblikuje JSON:

```php
Json::encode($value); // vrne JSON
Json::encode($value, pretty: true); // vrne jasnejši JSON
```

Ko je nastavljena vrednost `$asciiSafe`, ustvari izhod ASCII, tj. zamenja znake unicode z zaporedji `\uxxxx`:

```php
Json::encode('žluťoučký', asciiSafe: true);
// '"\u017elu\u0165ou\u010dk\u00fd"'
```

Parameter `$htmlSafe` zagotavlja, da izpis ne vsebuje znakov s posebnim pomenom v jeziku HTML:

```php
Json::encode('one<two & three', htmlSafe: true);
// '"one\u003Ctwo \u0026 three"'
```

S parametrom `$forceObjects` bodo tudi polja s številčnimi ključi kodirana kot objekti JavaScript:

```php
Json::encode(['a', 'b', 'c']);
// '["a","b","c"]'
Json::encode(['a', 'b', 'c'], forceObjects: true);
// '{"0":"a","1":"b","2":"c"}'
```

Ob napaki vrže izjemo `Nette\Utils\JsonException`.

```php
try {
	$json = Json::encode($value);
} catch (Nette\Utils\JsonException $e) {
	// Ravnanje z izjemami
}
```


decode(string $json, bool $forceArray=false): mixed .[method]
-------------------------------------------------------------

Razčleni JSON v PHP.

Z nastavitvijo `$forceArray` se namesto objektov vrnejo polja:

```php
Json::decode('{"variable": true}'); // vrne predmet tipa stdClass
Json::decode('{"variable": true}', forceArray: true); // vrne polje
```

Ob napaki vrže izjemo `Nette\Utils\JsonException`.

```php
try {
	$value = Json::decode($json);
} catch (Nette\Utils\JsonException $e) {
	// Ravnanje z izjemami
}
```


Kako poslati JSON iz predvajalnika? .[#toc-how-to-send-a-json-from-a-presenter]
===============================================================================

Uporabite lahko metodo `$this->sendJson($data)`, ki jo lahko prikličete na primer v metodi `action*()`, glejte poglavje [Pošiljanje odgovora |application:presenters#Sending a Response].
