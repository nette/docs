Конфігурація Трейсі
*******************

Наступні приклади припускають, що визначено такий псевдонім класу:

```php
use Tracy\Debugger;
```


Протоколювання помилок .[#toc-error-logging]
--------------------------------------------

```php
$logger = Debugger::getLogger();

// если произошла ошибка, то уведомление отправляется на этот email
$logger->email = 'dev@example.com'; // (string|string[]) defaults to unset

// отправитель электронной почты
$logger->fromEmail = 'me@example.com'; // (string) defaults to unset

// процедура отправки электронной почты
$logger->mailer = /* ... */; // (вызываемая) по умолчанию отправка почтой mail()

// через какое наименьшее время отправить еще одно письмо?
$logger->emailSnooze = /* ... */; // (строка) по умолчанию '2 дня'

// для каких уровней ошибок BlueScreen также ведется журнал?
Debugger::$logSeverity = E_WARNING | E_NOTICE; // по умолчанию 0 (уровень ошибок отсутствует)
```


`dump()` Поведінка .[#toc-dump-behavior]
----------------------------------------

```php
// максимальная длина строки
Debugger::$maxLength = 150; // (int) по умолчанию согласно Трейси

// насколько глубоким будет список
Debugger::$maxDepth = 10; // (int) по умолчанию согласно Tracy

// скрывать значения этих ключей (начиная с версии Tracy 2.8)
Debugger::$keysToHide = ['password', /* ... */]; // (string[]) по умолчанию []

// визуальная тема (начиная с версии Tracy 2.8)
Debugger::$dumpTheme = 'dark'; // (light|dark) по умолчанию 'light'

// отображает место, где был вызван dump()?
Debugger::$showLocation = /* ... */; // (bool) по умолчанию в соответствии с Tracy
```


Інші .[#toc-others]
-------------------

```php
// в режиме разработки вы будете видеть уведомления или предупреждения об ошибках как BlueScreen
Debugger::$strictMode = /* ... */; // (bool|int) по умолчанию false, вы можете выбрать только определенные уровни ошибок (например, E_USER_DEPRECATED | E_DEPRECATED)

// отображает беззвучные (@) сообщения об ошибках
Debugger::$scream = /* ... */; // (bool|int) по умолчанию false, с версии 2.9 можно выбрать только определенные уровни ошибок (например, E_USER_DEPRECATED | E_DEPRECATED)

// формат ссылки для открытия в редакторе
Debugger::$editor = /* ... */; // (string|null) по умолчанию 'editor://open/?file=%file&line=%line'

// путь к шаблону с пользовательской страницей для ошибки 500
Debugger::$errorTemplate = /* ... */; // (строка) по умолчанию не задана

// показывать панель трейсов?
Debugger::$showBar = /* ... */; // (bool) по умолчанию true

Debugger::$editorMapping = [
	// original => new
	'/var/www/html' => '/data/web',
	'/home/web' => '/srv/html',
];
```


Nette Framework .[#toc-nette-framework]
---------------------------------------

Якщо ви використовуєте Nette Framework, ви також можете налаштувати Tracy і додати нові панелі на панель Tracy Bar за допомогою файлу конфігурації.
У конфігурації можна задати параметри Tracy, а також додати нові панелі на панель Tracy. Ці параметри застосовуються тільки після створення контейнера DI, тому помилки, що виникли раніше, не можуть їх відобразити.

Конфігурація реєстрації помилок:

```neon
tracy:
	# если произошла ошибка, уведомление отправляется на этот email
	email: dev@example.com # (string|string[]) по умолчанию unset

	# отправитель электронной почты
	fromEmail: robot@example.com # (string) по умолчанию unset

	# период отсрочки отправки писем (начиная с версии Tracy 2.8.8)
	emailSnooze: ...                 # (строка) по умолчанию '2 дня'

	# использовать почтовик, определенный в конфигурации? (начиная с Tracy 2.5)
	netteMailer: ...                 # (bool) по умолчанию true

	# для каких уровней ошибок BlueScreen также записывается в журнал?
	logSeverity: [E_WARNING, E_NOTICE] # по умолчанию []
```

Конфігурація для функції `dump()`:

```neon
tracy:
	# максимальная длина строки
	maxLength: 150 # (int) по умолчанию в соответствии с Tracy

	# насколько глубоким будет список
	maxDepth: 10 # (int) по умолчанию согласно Tracy

	# скрывать значения этих ключей (начиная с Tracy 2.8)
	keysToHide: [password, pass] # (string[]) по умолчанию []

	# визуальная тема (начиная с Tracy 2.8)
	dumpTheme: dark # (light|dark) по умолчанию 'light'

	# отображает место, где была вызвана функция dump()?
	showLocation: ...          # (bool) по умолчанию согласно Tracy
```

Щоб встановити розширення Tracy:

```neon
tracy:
	# appends bars to Tracy Bar
	bar:
		- Nette\Bridges\DITracy\ContainerPanel
		- IncludePanel
		- XDebugHelper('myIdeKey')
		- MyPanel(@MyService)

	# append panels to BlueScreen
	blueScreen:
		- DoctrinePanel::renderException
```

Інші варіанти:

```neon
tracy:
	# в режиме разработки вы увидите уведомления или предупреждения об ошибках как BlueScreen
	strictMode: ...           # по умолчанию true

	# отображает беззвучные (@) сообщения об ошибках
	scream: ...               # по умолчанию false

	# формат ссылки для открытия в редакторе
	editor: ...               # (строка) по умолчанию 'editor://open/?file=%file&line=%line'

	# путь к шаблону с пользовательской страницей для ошибки 500
	errorTemplate: ...        # (строка) по умолчанию unset

	# показывает панель трейсинга?
	showBar: ...              # (bool) по умолчанию true

	editorMapping:
		# original: new
		/var/www/html: /data/web
		/home/web: /srv/html
```

Значення опцій `logSeverity`, `strictMode` і `scream` можуть бути записані у вигляді масиву рівнів помилок (наприклад. `[E_WARNING, E_NOTICE]`) або як вираз, що використовується в PHP (наприклад, `E_ALL & ~E_NOTICE`).
