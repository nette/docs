Tłumaczenie formularzy i szablonów
**********************************

.[perex]
Jeśli programujesz wielojęzyczną aplikację, prawdopodobnie będziesz musiał renderować tę samą stronę lub formularz w różnych językach.

Aby to zrobić, Nette Framework definiuje interfejs tłumaczeniowy [api:Nette\Localization\Translator], który ma jedną metodę `translate()`. Akceptuje ona komunikat `$message`, który jest zwykle łańcuchem, oraz dowolne inne parametry. Zadanie polega na zwróceniu przetłumaczonego ciągu znaków.

W Nette nie ma domyślnej implementacji, można wybrać według swoich potrzeb z kilku gotowych rozwiązań, które można znaleźć na [Componette |https://componette.org/search/localization]. Ich dokumentacja mówi, jak skonfigurować tłumacza.

Następnie możesz uzyskać dostęp do obiektu tłumacza w swoim kodzie, przekazując go za pomocą [wtrysku zależności |dependency-injection:passing-dependencies].


Tłumaczenie formularzy .[#toc-form-translation]
-----------------------------------------------

[Formularze |forms:] obsługują wyjście tekstowe poprzez translator. Przekazujemy im ją za pomocą metody `setTranslator()`:

```php
$form->setTranslator($translator);
```

Od tej pory nie tylko wszystkie etykiety, ale także wszystkie komunikaty o błędach lub wpisy w polach wyboru będą tłumaczone na inny język.

Możliwe jest ustawienie innego tłumacza dla poszczególnych elementów formularza lub całkowite wyłączenie tłumaczenia za pomocą `null`:

```php
$form->addSelect('carModel', 'Model:', $cars)
	->setTranslator(null);
```

W przypadku [reguł walidacji |forms:validation] do tłumacza przekazywane są również określone parametry, na przykład dla reguły:

```php
$form->addPassword('password', 'Heslo:')
	->addCondition($form::MinLength, 'Heslo musí mít alespoň %d znaků', 8);
```

translator jest wywoływany z następującymi parametrami:

```php
$translator->translate('Heslo musí mít alespoň %d znaků', 8);
```

i tym samym potrafi wybrać poprawną formę liczby mnogiej dla słowa `znaky` przez liczenie.


Tłumaczenie szablonów .[#toc-template-translation]
--------------------------------------------------

Szablony [latte |latte:] można ustawić metodą `setTranslator()`:

```php
protected function beforeRender(): void
{
	// ...
	$this->template->setTranslator($translator);
}
```

Następnie kompilator może być użyty jako filtr `|translate`:

```latte
<a href="basket">{='Košík'|translate}</a>
<span>{$item|translate}</span>
```

Dostępny jest znacznik podkreślenia:

```latte
<a href="basket">{_'Košík'}</a>
<span>{_$item}</span>
```

Istnieje sparowany tag `{translate}` do tłumaczenia części szablonu (od wersji Latte 2.11, wcześniej używany był tag `{_}`):

```latte
<a href="order">{translate}Objednávka{/translate}</a>
```

{{priority: -1}}
{{sitename: Najlepsze praktyki}}
