Edytory i narzędzia
*******************

.[perex]
Możesz być biegłym programistą, ale dopiero z dobrymi narzędziami staniesz się mistrzem. W tym rozdziale znajdziesz wskazówki dotyczące ważnych narzędzi, edytorów i wtyczek.


Edytor IDE
==========

Zdecydowanie zalecamy używanie do programowania pełnoprawnego IDE, takiego jak PhpStorm, NetBeans, VS Code, a nie tylko edytora tekstu z obsługą PHP. Różnica jest naprawdę zasadnicza. Nie ma powodu zadowalać się zwykłym edytorem, który co prawda potrafi kolorować składnię, ale nie dorównuje możliwościom zaawansowanego IDE, które precyzyjnie podpowiada, pilnuje błędów, potrafi refaktoryzować kod i wiele więcej. Niektóre IDE są płatne, inne nawet darmowe.

**NetBeans IDE** ma wbudowane wsparcie dla Nette, Latte i NEON.

**PhpStorm**: zainstaluj te wtyczki w `Settings > Plugins > Marketplace`
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: znajdź w marketplace wtyczkę "Nette Latte + Neon".

Połącz również Tracy z edytorem. Podczas wyświetlania strony błędu będzie można kliknąć na nazwy plików, a te otworzą się w edytorze z kursorem na odpowiedniej linii. Przeczytaj, [jak skonfigurować system|tracy:open-files-in-ide].


PHPStan
=======

PHPStan to narzędzie, które wykrywa błędy logiczne w kodzie, zanim go uruchomisz.

Zainstalujemy go za pomocą Composera:

```shell
composer require --dev phpstan/phpstan-nette
```

Utworzymy w projekcie plik konfiguracyjny `phpstan.neon`:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

A następnie zlecimy mu analizę klas w folderze `app/`:

```shell
vendor/bin/phpstan analyse app
```

Wyczerpującą dokumentację znajdziesz bezpośrednio na [stronie PHPStan |https://phpstan.org].


Code Checker
============

[Code Checker|code-checker:] sprawdza i ewentualnie poprawia niektóre błędy formalne w twoich kodach źródłowych:

- usuwa [BOM |nette:glossary#bom]
- sprawdza poprawność szablonów [Latte |latte:]
- sprawdza poprawność plików `.neon`, `.php` i `.json`
- sprawdza występowanie [znaków kontrolnych |nette:glossary#kontrolní znaky]
- sprawdza, czy plik jest kodowany w UTF-8
- sprawdza błędnie zapisane `/* @anotace */` (brakuje gwiazdki)
- usuwa kończące `?>` w plikach PHP
- usuwa spacje na końcu linii i zbędne linie na końcu pliku
- normalizuje separatory linii do systemowych (jeśli podasz opcję `-l`)


Composer
========

[Composer] to narzędzie do zarządzania zależnościami w PHP. Pozwala nam deklarować dowolnie złożone zależności poszczególnych bibliotek, a następnie instaluje je za nas w naszym projekcie.


Requirements Checker
====================

Było to narzędzie, które testowało środowisko uruchomieniowe serwera i informowało, czy (i w jakim stopniu) można używać frameworka. Obecnie Nette można używać na każdym serwerze, który ma minimalną wymaganą wersję PHP.

{{sitename: Best Practices}}
