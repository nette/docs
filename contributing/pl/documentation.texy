Pisanie dokumentacji
********************

.[perex]
Wkład w dokumentację jest jednym z wielu sposobów, w jaki możesz pomóc Nette. Jest to również jedno z najbardziej satysfakcjonujących zajęć, ponieważ pomagasz innym zrozumieć ramy.


Jak pisać? .[#toc-how-to-write]
-------------------------------

Dokumentacja przeznaczona jest głównie dla osób, które dopiero zapoznają się z tematem. Dlatego powinien on spełniać kilka ważnych punktów:

- **Pisząc, zacznij od tego, co proste i ogólne, a na końcu przejdź do bardziej zaawansowanych tematów**.
- Dostarczaj tylko te informacje, które użytkownik naprawdę potrzebuje wiedzieć na dany temat.
- Zweryfikuj, czy Twoje informacje są rzeczywiście prawdziwe. Przetestuj najpierw przykład przed podaniem kodu.
- Bądź zwięzły - skróć to, co piszesz o połowę. A potem nie krępuj się zrobić tego ponownie.
- Postaraj się wyjaśnić sprawę najlepiej jak potrafisz. Na przykład spróbuj najpierw wyjaśnić temat koledze.

Pamiętajcie o tych punktach w trakcie procesu pisania. Więcej wskazówek znajdziesz w artykule [Pisanie dla |https://www.lupa.cz/clanky/piseme-pro-web/] sieci. Dokumentacja jest napisana w [Texy! |https://texy.info], więc naucz się jej [składni |syntax]. Możesz użyć edytora dokumentacji na stronie https://editor.nette.org/, aby wyświetlić podgląd artykułu w trakcie jego pisania.

Oprócz powyższych punktów prosimy również o przestrzeganie następujących wskazówek:

- Angielski jest językiem podstawowym, więc Twoje zmiany powinny być w obu językach. Jeśli język angielski nie jest Twoją mocną stroną, skorzystaj z [DeepL Translator |https://www.deepl.com/translator], a inni dokonają korekty Twojego tekstu.
- W tekście dokumentacji mamy tendencję do "machania" i bycia grzecznym.
- W przykładach postępuj zgodnie ze [Standardem Kodowania |Coding Standard].
- Pisz nazwy zmiennych, klas i metod w języku angielskim.
- Przestrzenie nazw powinny być podawane przy pierwszej wzmiance.
- Spróbuj sformatować swój kod, aby paski przewijania nie pojawiały się.
- Daruj sobie wszelkiego rodzaju zakreślacze, od pogrubień po obramowania. `.[note]`.
- Z dokumentacji należy odnosić się tylko do dokumentacji lub `www`.


Struktura dokumentacji .[#toc-documentation-structure]
------------------------------------------------------

Cała dokumentacja jest hostowana na GitHubie w repozytorium [nette/docs |https://github.com/nette/docs]. To repozytorium jest podzielone na gałęzie w zależności od wersji dokumentacji, na przykład gałąź `doc-3.1` zawiera dokumentację dla wersji 3.1. Następnie jest gałąź `nette.org`, która zawiera zawartość pozostałych subdomen nette.org.

Każdy oddział jest następnie podzielony na kilka folderów:

* `cs` i `en`: zawiera pliki dokumentacji dla każdej wersji językowej.
* `files`: obrazy, które mogą być osadzone na stronach dokumentacji

Ścieżka do pliku bez rozszerzenia odpowiada adresowi URL strony w dokumentacji. W ten sposób plik `cs/quickstart/single-post.texy` będzie miał adres `doc.nette.org/en/quickstart/single-post`.


Wkład w dokumentację .[#toc-contributing]
-----------------------------------------

Aby wnieść wkład w dokumentację, musisz mieć konto na [GitHubie |https://github.com] i podstawowe zrozumienie systemu wersjonowania Git. Jeśli nie jesteś zaznajomiony z git, możesz sprawdzić ten szybki przewodnik: [git - prosty przewodnik |https://rogerdudler.github.io/git-guide/], lub użyć jednego z wielu graficznych narzędzi: [GIT - klienci GUI |https://git-scm.com/downloads/guis].

Możesz wprowadzić proste zmiany bezpośrednio w interfejsie GitHub. Wygodniej jest jednak stworzyć fork repozytorium [nette/docs |https://github.com/nette/docs] i sklonować go na swój komputer. Następnie wprowadź zmiany w odpowiedniej gałęzi, popełnij zmianę, popchnij do swojego repozytorium GitHub i wyślij pull request do oryginalnego repozytorium `nette/docs`. Zauważ, że głównym językiem dokumentacji jest angielski, więc dokonaj zmian w obu językach.

Przed każdym pull requestem warto uruchomić [Code-Checker |code-checker:], aby sprawdzić czy w tekście nie ma dodatkowych spacji.

{{priority: -1}}
