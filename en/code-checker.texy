Code Checker
************

.[perex]
The tool called [Code Checker |https://github.com/nette/code-checker] checks and possibly repairs some of the formal errors in your source code.

Installation
============

Code Checker should be installed as project, don't use it as dependency.

```shell
composer create-project nette/code-checker
```

Usage
=====

```
Usage: php code-checker [options]

Options:
    -d <path>             Folder or file to scan (default: current directory)
    -i | --ignore <mask>  Files to ignore
    -f | --fix            Fixes files
    -l | --eol            Convert newline characters
    --no-progress         Do not show progress dots
    --strict-types        Checks whether PHP 7.0 directive strict_types is enabled
```

Without parameters, it checks the current working directory in a read-only mode, with `-f` parameter it fixes files.

Before you get to know the tool, be sure to backup your files first.

You can create a batch file, e.g. `code.bat`, for easier execution of Code-Checker under Windows:

```shell
php path_to\Nette_tools\Code-Checker\code-checker %*
```

What Code-Checker Does?
=======================

- removes [BOM |glossary#bom]
- checks validity of [Latte |latte:] templates
- checks validity of  `.neon`, `.php` and `.json` files
- checks for [control characters |glossary#control characters]
- checks whether the file is encoded in UTF-8
- controls misspelled `/* @annotations */` (second asterisk missing)
- removes PHP ending tags `?>` in PHP files
- removes trailing whitespace and unnecessary blank lines from the end of a file
- normalizes line endings to system-default (with the `-l` parameter)
