Date et heure
*************

.[perex]
[api:Nette\Utils\DateTime] is a class extends native [php:DateTime].

Installation :

```shell
composer require nette/utils
```

Tous les exemples supposent que l'alias de classe suivant est défini :

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Crée un objet DateTime à partir d'une chaîne de caractères, d'un timestamp UNIX, ou d'un autre objet [php:DateTimeInterface]. Throws an `Exception` si la date et l'heure ne sont pas valides.

```php
DateTime::from(1138013640); // crée un DateTime à partir du timestamp UNIX avec un timzamp par défaut
DateTime::from(42); // crée un DateTime à partir de l'heure actuelle plus 42 secondes
DateTime::from('1994-02-26 04:15:32'); // crée une DateTime à partir d'une chaîne de caractères
DateTime::from('1994-02-26'); // crée une DateTime à partir de la date, l'heure sera 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Creates DateTime object or throws an `Nette\InvalidArgumentException` exception if the date and time are not valid.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, string|\DateTimeZone $timezone=null): DateTime|false .[method]
--------------------------------------------------------------------------------------------------------------------
Extends [DateTime::createFromFormat() |https://www.php.net/manual/en/datetime.createfromformat.php] avec la possibilité de spécifier un fuseau horaire comme une chaîne de caractères.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London'); // créer avec un fuseau horaire personnalisé
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Crée une copie avec une heure modifiée.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Renvoie la date et l'heure au format `Y-m-d H:i:s`.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


Implements JsonSerializable .[#toc-implements-jsonserializable]
---------------------------------------------------------------
Renvoie la date et l'heure au format ISO 8601, utilisé en JavaScript, par exemple.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
