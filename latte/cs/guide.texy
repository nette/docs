Začínáme s Latte
****************

<div class=perex>

Latte je šablonovací systém pro PHP, který vám ušetří a zpříjemní práci a zabezpečí výstup před zranitelnostmi jako je XSS.

- **Latte je rychlé:** překládá šablony na jednoduchý optimalizovaný PHP kód.
- **Latte je bezpečné:** je prvním PHP engineem, který přichází s [Kontextově sensitivním escapováním|safety-first#Kontextově sensitivní escapování] a [kontrolou odkazů|safety-first#Kontrola odkazů].
- **Latte mluví vaším jazykem:** má intuitivní syntaxi a pomáhá vám snadno vytvářet lepší webové stránky.

</div>


Ačkoliv je PHP původem šablonovací jazyk, k jejich kódování se příliš nehodí. Podívejme se, jak v šablonovacím PHP vypsat pole prvků `$items` jako seznam:

```php
<?php if ($items): ?>
	<?php $counter = 1 ?>
	<ul>
	<?php foreach ($items as $item): ?>
		<li id="item-<?php echo $counter++ ?>"><?php
		echo htmlSpecialChars(mb_convert_case($item, MB_CASE_TITLE)) ?>
		</li>
	<?php endforeach ?>
	</ul>
<?php endif?>
```

Zápis je poměrně nepřehledný a nesmí se zapomínat na volání `htmlSpecialChars`. Proto vznikají v PHP nejrůznější šablonovací systémy. Jeden z nejskvělejších šablonovacích systémů je součástí Nette Framework a nese název **Latte**. Budete ho milovat!


V Latte se stejná šablona napíše řádově jednodušeji:

```latte
<ul n:if="$items">
{foreach $items as $item}
	<li id="item-{$iterator->counter}">{$item|capitalize}</li>
{/foreach}
</ul>
```


Jak vidno, v Latte se používají dva druhy direktiv:

- **[tagy |syntax#tagy]** ve složených závorkách, například `{foreach …}`
- **[n:atributy |syntax#n:atributy]**, například `n:if="…"`


Rychlost
========

Latte je nesmírně rychlé. Překládá totiž šablony do nativního PHP kódu a ukládá do cache na disk. Díky tomu mají stejný výkon, jako bychom psali šablony v čistém PHP. Nicméně v přehlednosti, bezpečnosti a efektivitě jsou o několik řádů dál.

Šablona se automaticky regeneruje pokaždé, když změníme zdrojový soubor. Během vývoje si tedy pohodlně editujeme šablony v Latte a změny okamžitě vidíme v prohlížeči.

Při nasazení na produkčním serveru může prvotní vygenerování cache, zejména u rozsáhlejších aplikací, pochopitelně chviličku trvat. Latte má vestavěnou prevenci před "cache stampede":https://en.wikipedia.org/wiki/Cache_stampede.
Jde o situaci, kdy se sejde větší počet souběžných požadavků, které spustí Latte, a protože cache ještě neexistuje, začaly by ji všechny generovat současně. Což by neúměrně zatížilo server.
Naštěstí Latte funguje tak, že při více souběžných požadavcích generuje cache pouze první vlákno, ostatní čekají a následně ji využíjí.


Debuggování
===========

O jakékoliv chybě v šabloně nebo překlepu vás bude informovat [Laděnka|tracy:] s plnou parádou. Zobrazí zdrojový kód šablony a červeně označí řádek, na kterém je chyba, společně s výstižnou chybovou zprávou. Jedním kliknutím pak otevřeme šablonu ve svém oblíbeném editoru a chybu můžeme okamžitě opravit. Snadnější to už být nemůže. Leda, že by se chyby opravovaly samy (inspirace pro budoucí verze? ;-) ).

Pokud používáte IDE s možností krokování kódu, můžete takto procházet i vygenerovaný PHP kód šablon.


Použitelnost
============

Syntax Latte nebyla vymyšlena inženýry od stolu, ale vzešla z ryze praktických požadavků webdesignerů. Hledali jsme tu nejpřívětivější syntax, se kterou elegantně zapíšete i konstrukce, které jinak představují skutečný oříšek. Budete překvapeni, jak moc vám Latte zjednoduší práci.

Najdete tu značky pro pokročilou tvorbu [layoutů |template-inheritance], pro tzv. **dědičnost šablon,** vnořené bloky a podobně. Přitom syntaxe vychází přímo z PHP, nebudete se tedy muset učit něco zcela nového a zúročíte své knowhow.


Hezký výstup
============

Puntičkáře potěší podoba HTML výstupu, který Latte generuje. Všechny značky budou odsazeny přesně tak, jak jsme zamýšleli. Kód bude vypadat, jako by byl zpracován nějakým *HTML code beautifierem* :-)


{{composer: latte/latte}}
{{description: Latte je nejbezpečnější šablonovací systém pro PHP. Zabraňuje spoustě bezpečnostních zranitelností. Oceníte jeho intuitivní syntaxi a oceníte spoustu užitečných vychytávek.}}
