Tarih ve Saat
*************

.[perex]
[api:Nette\Utils\DateTime], yerel [php:DateTime]'ı ek fonksiyonlarla genişleten bir sınıftır.


Kurulum:

```shell
composer require nette/utils
```

Tüm örnekler, oluşturulmuş bir takma ad varsayar:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Bir karakter dizisi, UNIX zaman damgası veya başka bir [php:DateTimeInterface] nesnesinden bir DateTime nesnesi oluşturur. Tarih ve saat geçerli değilse `Exception` istisnası fırlatır.

```php
DateTime::from(1138013640); // varsayılan zaman dilimiyle UNIX zaman damgasından DateTime oluşturur
DateTime::from(42); // geçerli zamandan artı 42 saniye ile DateTime oluşturur
DateTime::from('1994-02-26 04:15:32'); // karakter dizisine göre DateTime oluşturur
DateTime::from('1994-02-26'); // tarihe göre DateTime oluşturur, saat 00:00:00 olur
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Bir DateTime nesnesi oluşturur veya tarih ve saat geçerli değilse `Nette\InvalidArgumentException` istisnası fırlatır.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, ?string|\DateTimeZone $timezone=null): DateTime|false .[method]
---------------------------------------------------------------------------------------------------------------------
[DateTime::createFromFormat()|https://www.php.net/manual/en/datetime.createfromformat.php]'ı, zaman dilimini bir karakter dizisi olarak belirtme yeteneğiyle genişletir.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Değiştirilmiş zamanla bir kopya oluşturur.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Tarih ve saati `Y-m-d H:i:s` formatında döndürür.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


JsonSerializable uygular
------------------------
Tarih ve saati, örneğin JavaScript'te kullanılan ISO 8601 formatında döndürür.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
