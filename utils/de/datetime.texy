Datum und Zeit
**************

.[perex]
[api:Nette\Utils\DateTime] ist eine Klasse, die die native [php:DateTime] um zusätzliche Funktionen erweitert.


Installation:

```shell
composer require nette/utils
```

Alle Beispiele setzen voraus, dass ein Alias erstellt wurde:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Erstellt ein DateTime-Objekt aus einem String, UNIX-Zeitstempel oder einem anderen [php:DateTimeInterface]-Objekt. Wirft eine Ausnahme `Exception`, wenn Datum und Uhrzeit ungültig sind.

```php
DateTime::from(1138013640); // erstellt DateTime aus UNIX-Zeitstempel mit Standard-Zeitzone
DateTime::from(42); // erstellt DateTime aus der aktuellen Zeit plus 42 Sekunden
DateTime::from('1994-02-26 04:15:32'); // erstellt DateTime gemäß dem String
DateTime::from('1994-02-26'); // erstellt DateTime gemäß dem Datum, Zeit wird 00:00:00 sein
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Erstellt ein DateTime-Objekt oder wirft eine Ausnahme `Nette\InvalidArgumentException`, wenn Datum und Uhrzeit ungültig sind.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, ?string|\DateTimeZone $timezone=null): DateTime|false .[method]
---------------------------------------------------------------------------------------------------------------------
Erweitert [DateTime::createFromFormat()|https://www.php.net/manual/en/datetime.createfromformat.php] um die Möglichkeit, die Zeitzone als String anzugeben.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Erstellt eine Kopie mit modifizierter Zeit.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Gibt Datum und Uhrzeit im Format `Y-m-d H:i:s` zurück.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


implementiert JsonSerializable
------------------------------
Gibt Datum und Uhrzeit im Format ISO 8601 zurück, das z.B. in JavaScript verwendet wird.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
