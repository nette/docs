ヘルパー関数
******

.[perex]
[api:Nette\Utils\Helpers]は、便利な関数を含む静的クラスです。


インストール:

```shell
composer require nette/utils
```

すべての例では、エイリアスが作成されていることを前提としています。

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

コールバックを実行し、キャプチャされた出力を文字列として返します。

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

値を指定された包括的な範囲minとmaxに制限します。

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

PHPが行うのと同じ方法で2つの値を比較します。演算子`>`、`>=`、`<`、`<=`、`=`、`==`、`===`、`!=`、`!==`、`<>`を区別します。
この関数は、演算子が変数である場合に便利です。

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

`false`を`null`に変換し、他の値は変更しません。

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

PHPの最後のエラーを返すか、エラーが発生しなかった場合は空の文字列を返します。`error_get_last()`とは異なり、PHPディレクティブ`html_errors`の影響を受けず、常にテキストを返し、HTMLは返しません。

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

提供されたオプション`$possibilities`から、`$value`に最も似ているが同じではない文字列を検索します。8ビットエンコーディングのみをサポートします。

特定のオプションが無効であり、ユーザーに類似した（ただし異なる、したがって同じ文字列は無視される）オプションを提案したい場合に便利です。このようにして、Netteは`did you mean ...?`メッセージを作成します。

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', not 'baz'
```
