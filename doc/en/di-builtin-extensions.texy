DI: Built-in Extensions
***********************

.[perex]
Package `nette/di` contains a few built-in extension to DI container.


Decorator Extension
===================

Using [Decorator|configuring#Decorator] extensions we can add tags or add `setup` (eg call methods) to all services of given class or implementing given interface.


DI Extension
============

The [DI |configuring#DI] extension is in charge of the meta-settings of the DI container.


Extensions Extension
====================

Using [this extension|configuring#Extensions] we can add a more extensions defined in NEON configuration files.


Inject Extension
================

This extension allows us to use option `inject: true`, which enables passing dependencies via variables with [@inject |di-usage#toc-inject-annotations] annotation and [inject* | di-usage#toc-passing-by-an-inject-method] methods.

```neon
services:
	blog.articles:
		factory: App\Model\Articles
		inject: true
```

```php
namespace App\Model;

use Nette\Database\Connection;

class Articles
{
	/** @var Connection @inject */
	public $connection;
}
```

By default is `inject` attribute enabled only for presenters.


Search Extension
================

[Search extension|configuring#search] walks through given directories and registers found classes as services automatically.


{{composer: nette/di}}
