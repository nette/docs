Práce s formátem JSON - Nette\Utils\Json
****************************************

.[perex]
[Nette\Utils\Json |api:] je statická třída s užitečnými funkcemi pro práci s formátem JSON. Ošetřuje chyby v různých verzí PHP a při chybě vyhazuje výjimky.

Všechny příklady předpokládají vytvořený alias:

/--php
use Nette\Utils\Json;
use Nette\Utils\JsonException;
\--


encode($value, $flags = 0)
==========================

Vrací JSON reprezentaci předané hodnoty `$value`. Flag může být `Json::PRETTY`, který umí JSON naformátovat pro snažší čtení a přehlednost.

/--php
Json::encode($value); // Vrací JSON reprezentaci hodnoty $value
Json::encode($value, Json::PRETTY); // Vrací naformátovanou JSON reprezentaci hodnoty $value
\--

Při chybě vyhazuje volání funkce `encode()` výjimku `JsonException`.

/--php
try {
	$json = Json::encode($value);
} catch (JsonException $e) {
	// Ošetření výjimky
}
\--


decode($json, $flags = 0)
=========================

Převede daný JSON do objektu nebo pole. Flag může být `Json::FORCE_ARRAY`, který vynutí vrácení pole namísto objektu.

/--php
Json::decode('{"variable": true}'); // Vrací objekt typu stdClass s atributem $variable
Json::decode('{"variable": true}', Json::FORCE_ARRAY); // Vrací pole s klíčem "variable" a hodnotou true
\--

Při chybě vyhazuje volání funkce `decode()` výjimku `JsonException`.

/--php
try {
	$value = Json::decode($json);
} catch (JsonException $e) {
	// Ošetření výjimky
}
\--
