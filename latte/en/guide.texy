Getting Started with Latte
**************************

<div class=perex>

Latte is an extraordinary templating system for PHP. You will be surprised how much it will save you work and make it more enjoyable.

- **Latte is secure:** is the first PHP templating engine that comes with effective protection against critical vulnerabilities
- **Latte speaks your language:** it has an intuitive syntax that you already know
- **Latte is fast:** translates templates into optimized PHP code

</div>


[Latte is secure |safety-first]
===============================

Latte is synonymous with safety. It is the only PHP templating system with [truly effective protection |safety-first] against the critical Cross-site Scripting (XSS) vulnerability. This is thanks to so-called *context-sensitive escaping*.
It also has a number of other security mechanisms, such as [link checking|safety-first#Link-checking].


[Latte speaks your language |syntax]
====================================

The design of Latte was born out of purely practical requirements of web designers. We were looking for the [most user-friendly syntax |syntax], which allows you to write elegantly constructs that are otherwise a real challenge.
You will find all [important tags |tags] in the basic equipment.

Did you know that you can already write expressions in Latte? Because they are written in exactly the **same way as in PHP**. So you don't have to think about how to write what in Latte. You don't have to look in the documentation. You don't have to learn another language. You just take your know-how and write like PHP.

Why not actually write templates directly in PHP? Although PHP is originally a templating language, it is not well suited to coding them today. Let's see how to write out an array of `$items` elements as a list in templating PHP:

```php
<?php if ($items): ?>
	<?php $counter = 1 ?>
	<ul>
	<?php foreach ($items as $item): ?>
		<li id="item-<?php echo $counter++ ?>"><?php
		echo htmlSpecialChars(mb_convert_case($item, MB_CASE_TITLE)) ?>
		</li>
	<?php endforeach ?>
	</ul>
<?php endif?>
```

In Latte, the same template is an order of magnitude easier to write (and read):

```latte
<ul n:if="$items">
{foreach $items as $item}
	<li id="item-{$iterator->counter}">{$item|capitalize}</li>
{/foreach}
</ul>
```


Latte is fast
=============

Latte is extremely fast. It compiles templates to native PHP code and caches them on disk. This gives the same performance as if we were writing templates in pure PHP. However, they are several orders of magnitude further in terms of clarity, security and efficiency.

The template automatically regenerates every time we change the source file. So we can conveniently edit our templates in Latte during development and see the changes immediately in the browser.

When used on a production server, the initial cache generation, especially for larger applications, can understandably take a while. Latte has built-in prevention against "cache stampede":https://en.wikipedia.org/wiki/Cache_stampede.
This is a situation where server receives a large number of concurrent requests and because Latte's cache does not yet exist, they would all generate it at the same time. Which spikes CPU.
Fortunately, Latte works in such a way that for multiple concurrent requests, only the first thread generates cache, the others wait, and then use the cache.


[Latte debugging is great |develop#Debugging and Tracy]
=======================================================

It will inform you of any template error or typo with all the luxury. It will display the source code of the template and highlight the line with the error in red, along with a concise error message. With one click, you can then open the template in your favorite editor and fix the error immediately. It couldn't be easier. Unless the errors fix themselves (inspiration for future versions? ;-) ).

If you use an IDE with code stepping, you can also go through the generated PHP template code this way, which is clear and easy to navigate.


Latte comes fully equipped
==========================

- Sophisticated reuse and [template inheritance] mechanisms will increase your productivity because each template contains only its unique content and repeated elements and structures are reused.
- Latte has an armor bunker right under the hood. It's called [sandbox mode |sandbox] and it isolates templates from untrusted sources, such as those edited by users themselves. It gives them limited access to tags, filters, functions, methods, etc.
- Pundits will be pleased with the appearance of the HTML output that Latte generates. All tags will be indented exactly as we intended. The code will look like it was processed by some *HTML code beautifier* :-)


{{composer: latte/latte}}
{{description: Latte je nejbezpečnější šablonovací systém pro PHP. Zabraňuje spoustě bezpečnostních zranitelností. Oceníte jeho intuitivní syntaxi a oceníte spoustu užitečných vychytávek.}}
