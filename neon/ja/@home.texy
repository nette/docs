Nette NEON
**********

<div class=perex>

NEONは、人間が理解しやすいデータシリアライズ言語です。Netteでは設定ファイルに使用されます。[api:Nette\Neon\Neon]は、NEONを操作するための静的クラスです。

[NEON 形式|format]について学び、[試してみてください |https://ne-on.org]。

</div>

すべての例は、エイリアスが作成されていることを前提としています：

```php
use Nette\Neon\Neon;
```


インストール
------

ライブラリは[Composer|best-practices:composer]ツールを使用してダウンロードおよびインストールします：

```shell
composer require nette/neon
```

`*.neon`ファイルの構文エラーは、コンソールコマンド`neon-lint`を使用して確認できます：

```shell
vendor/bin/neon-lint <path>
```


encode(mixed $value, bool $blockMode=false, string $indentation="\t"): string .[method]
---------------------------------------------------------------------------------------

`$value`をNEONに変換して返します。パラメータ`$blockMode`にtrueを渡すと、複数行の出力が作成されます。パラメータ`$indentation`は、インデントに使用される文字を指定します（デフォルトはタブ）。

```php
Neon::encode($value); // $value を NEON に変換して返します
Neon::encode($value, true); // $value を複数行の NEON に変換して返します
```

`encode()`メソッドは、エラー時に`Nette\Neon\Exception`をスローします。

```php
try {
	$neon = Neon::encode($value);
} catch (Nette\Neon\Exception $e) {
	// 例外処理
}
```


decode(string $neon): mixed .[method]
-------------------------------------

NEON形式の文字列をPHPに変換します。

スカラー、配列、[日付 |format#日付]をDateTimeImmutableオブジェクトとして、[エンティティ |format#エンティティ]を[api:Nette\Neon\Entity]オブジェクトとして返します。

```php
Neon::decode('hello: world'); // 配列 ['hello' => 'world'] を返します
```

`decode()`メソッドは、エラー時に`Nette\Neon\Exception`をスローします。

```php
try {
	$value = Neon::decode($neon);
} catch (Nette\Neon\Exception $e) {
	// 例外処理
}
```


decodeFile(string $file): mixed .[method]
-----------------------------------------

ファイルの内容をNEONからPHPに変換し、BOMがあれば削除します。

```php
Neon::decodeFile('config.neon');
```

`decodeFile()`メソッドは、エラー時に`Nette\Neon\Exception`をスローします。
