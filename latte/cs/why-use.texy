Proč používat šablony?
**********************


Proč bych měl použít šablonovací systém v PHP?
----------------------------------------------

Nejprve si stručně připomeňme historii jazyka PHP, která je plná zajímavých zvratů. Jedním z prvních programovacích jazyků používaných pro šablonování HTML byl jazyk C. Brzy se však ukázalo, že jeho použití je pro tento účel nevhodné. Rasmus Lerdorf proto vytvořil PHP, které usnadnilo generování dynamického HTML s jazykem C na backendu. PHP tedy bylo původně navržené jako šablonovací jazyk, ale postupem času získalo další funkce a nakonec se stalo plnohodnotným programovacím jazykem.

Nicméně, stále funguje i jako šablonovací jazyk. Soubory PHP lze použít jako HTML stránky, kde pomocí `<?= $foo ?>` vypíšete proměnnou.

Přesto se již na počátku historie PHP objevil šablonovací systém Smarty, jehož účelem bylo striktně oddělit vzhled (HTML/CSS) od aplikační logiky. Jeho schopnosti byly oproti PHP záměrně omezené, aby vývojář nemohl například provést dotaz do databáze ze šablony apod. Na druhou stranu přinášely do projektů další závislost, zvyšovaly jejich složitost a programátoři se museli učit nový jazyk Smarty. Jejich přínos byl sporný a nadále se pro šablony používalo prosté PHP.

V průběhu času se začaly šablonovací systémy stávat užitečnější. Stále více programátorů a firem si uvědomovalo důležitost bezpečnosti. Že existují [zranitelnosti jako XSS|safety-first]. Že správný způsob vypsání proměnné není `<?= $foo ?>` ale `<?= htmlspecialchars($foo) ?>` a opomenutí escapování, tedy funkce `htmlspecialchars()`, může způsobit vážnou bezpečnostní díru. Šablonovací systémy přišly s autoescapováním, takže stačilo napsat jen `{$foo}` a proměnná se vypsala včetně escapování.

Šablonovací systémy přinesly podporu pro dědičnost, sandbox a další užitečné funkce, díky nimž bylo psaní šablon mnohem jednodušší než přímo v PHP. Od určité chvíle tak přínosy šablonovacích systémů výrazně převážily obavy spojené s vnášením nové závislosti.


Proč bych měl použít šablonovací systém Latte?
----------------------------------------------

Zasadní důvody jsou bezpečnost a syntax.

Všechny šablonovací systémy, jako Twig, Blade nebo Smarty, přišly v průběhu své existence s ochranou proti XSS v podobě automatického escapování. Latte však šlo dál, protože si uvědomilo, že aby bylo automatické escapování opravdu funkční, je nutné, aby systém rozuměl HTML. Aby nevnímal šablonu jen jako řetězec znaků, ale chápal, co jsou to značky, atributy atd. A to proto, že jiným způsobem se escapuje v HTML textu, jinak uvnitř HTML značky, jinak uvnitř JavaScriptu atd. Latte se naučilo HTML chápat a escapuje v každém z těchto kontextů [odpovídajícím způsobem|safety-first#Kontextově sensitivní escapování]. Stalo se tak prvním a dosud jediným šablonovacím systémem v PHP, který má kontextově citlivé escapování.

Latte tak představuje skutečně bezpečný šablonovací systém, zatímco ostatní systémy spíše vytvářejí falešný pocit bezpečí.

Další významnou předností Latte je používání syntaxe PHP, takže programátor/kodér se nemusí učit nový jazyk, ale využije to, co již dobře zná.


Jaké jsou hlavní rozdíly mezi šablonovacími systémy jako Latte, Twig a Blade?
-----------------------------------------------------------------------------

Rozdíly mezi šablonovacími systémy Latte, Twig a Blade spočívají hlavně v syntaxi, zabezpečení a způsobu integrace do frameworků

- Latte: používá syntaxi jazyka PHP, což usnadňuje učení a používání. Poskytuje špičkovou ochranu proti XSS útokům.
- Twig: používá syntax jazyka Python, která se od PHP dosti liší. Escapuje bez rozlišení kontextu. Je dobře integrován do Symfony frameworku.
- Blade: používá směs PHP a vlastní syntaxe. Escapuje bez rozlišení kontextu. Je těsně integrován s Laravel funkcemi a ekosystémem.


Vyplatí se firmám používat šablonovací systém?
----------------------------------------------

Předně, náklady spojené se zaškolením, používáním a celkovým přínosem, se významně liší podle systému. Šablonovací systém Latte díky tomu, že používá syntaxi PHP, velice zjednodušuje učení pro programátory již obeznámené s tímto jazykem. Obvykle trvá několik hodin, než se programátor s Latte dostatečně seznámí. Snižuje tedy náklady na školení. Zároveň zrychluje osvojení technologie a především efektivitu při každodenním používání.

Dále Latte poskytuje vysokou úroveň ochrany proti zranitelnosti XSS díky unikátní technologii kontextově citlivého escapování. Tato ochrana je klíčová pro zajištění bezpečnosti webových aplikací a minimalizaci rizika útoků, které by mohly ohrozit uživatele či firemní data. Ochrana bezpečnosti webových aplikací je důležitá také pro udržení dobré pověsti firmy. Bezpečnostní problémy mohou způsobit ztrátu důvěry ze strany zákazníků a poškodit reputaci firmy na trhu.

Použití Latte také snižuje celkové náklady na vývoj a údržbu aplikace tím, že obojí usnadňují. Použití šablonovacího systému se tedy jednoznačně vyplatí.


Jak Latte ovlivňuje výkon webových aplikací a zdroje serveru?
-------------------------------------------------------------

Ačkoliv šablony Latte jsou zpracovávány rychle, na tomto aspektu vlastně nezáleží. Důvodem je, že parsování souborů proběhne pouze jednou při prvním zobrazení. Následně jsou zkompilovány do PHP kódu, uloženy na disk a spouštěny při každém dalším požadavku, aniž by bylo nutné provádět opětovnou kompilaci.

Toto je způsob fungování v produkčním prostředí. Během vývoje se Latte šablony překompilují pokaždé, když dojde ke změně jejich obsahu, aby vývojář viděl vždy aktuální podobu.
