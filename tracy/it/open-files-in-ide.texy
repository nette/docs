Come aprire un file nell'editor da Tracy? (Integrazione IDE)
************************************************************

.[perex]
Quando viene visualizzata la pagina degli errori, è possibile fare clic sui nomi dei file e questi si apriranno nell'editor con il cursore sulla riga corrispondente. È anche possibile creare file (azione `create file`) o correggere bug in essi (azione `fix it`). Per fare ciò, è necessario configurare il browser e il sistema.

Tracy apre i file tramite URL della forma `editor://open/?file=%file&line=%line`, cioè con il protocollo `editor://`. Per questo registreremo il nostro gestore. Questo può essere un qualsiasi file eseguibile che elabora i parametri e avvia il nostro editor preferito.

È possibile modificare l'URL nella variabile `Tracy\Debugger::$editor` o disabilitare il click-through impostando `Tracy\Debugger::$editor = null`.


Windows .[#toc-windows]
=======================

1. Scaricate su disco i file appropriati "dal repository Tracy:https://github.com/nette/tracy/tree/master/tools/open-in-editor/windows ".

2. Modificare `open-editor.js` e decommentare o modificare il percorso del proprio editor in `settings`:

```js
var settings = {

	// PhpStorm
	editor: '"C:\\Program Files\\JetBrains\\PhpStorm 2018.1.2\\bin\\phpstorm64.exe" --line %line% "%file%"',
	title: 'PhpStorm',

	// NetBeans
	// editor: '"C:\\Program Files\\NetBeans 8.1\\bin\\netbeans.exe" "%file%:%line%" --console suppress',

	// Sublime Text 2
	// editor: '"C:\\Program Files\\Sublime Text 2\\sublime_text.exe" "%file%:%line%"',

	...
}

...
```

Fate attenzione a mantenere le doppie barre nei percorsi.

3. Registrate il gestore del protocollo `editor://` nel sistema.

Questo si fa eseguendo `install.cmd`. **Lo script `open-editor.js` servirà ora il protocollo `editor://`.


Linux .[#toc-linux]
===================

1. Scaricare i file appropriati "dal repository Tracy":https://github.com/nette/tracy/tree/master/tools/open-in-editor/linux nella directory `~/bin`.

2. Modificare `open-editor.sh` e decommentare o modificare il percorso del proprio editor nella variabile `editor`:

```shell
#!/bin/bash

# Emacs
#editor='emacs +$LINE "$FILE"'

# gVim
#editor='gvim +$LINE "$FILE"'

# gEdit
#editor='gedit +$LINE "$FILE"'

# Pluma
#editor='pluma +$LINE "$FILE"'

...
```

Rendetelo eseguibile:

```shell
chmod +x ~/bin/open-editor.sh
```

Se l'editor che si sta usando non è installato nel pacchetto, il binario probabilmente non avrà un percorso in `$PATH`. Questo può essere facilmente corretto. Nella cartella `~/bin`, creare un link simbolico al binario dell'editor. .[note]


3. Registrare il gestore del protocollo `editor://` nel sistema.

Ciò avviene eseguendo `install.sh`. Lo script `open-editor.js` servirà ora il protocollo `editor://`.


macOS .[#toc-macos]
===================

Gli editor come PhpStorm, TextMate, ecc. consentono di aprire i file tramite un URL speciale, che è sufficiente impostare:

```php
// PhpStorm
Tracy\Debugger::$editor = 'phpstorm://open?file=%file&line=%line';
// TextMate
Tracy\Debugger::$editor = 'txmt://open/?url=file://%file&line=%line';
// MacVim
Tracy\Debugger::$editor = 'mvim://open/?url=file://%file&line=%line';
// Visual Studio Code
Tracy\Debugger::$editor = 'vscode://file/%file:%line';
```

Se si utilizza Tracy standalone, inserire la riga prima di `Tracy\Debugger::enable()`, se Nette, prima di `$configurator->enableTracy()` in `Bootstrap.php`.

Purtroppo, le azioni `create file` o `fix it` non funzionano su macOS.


Dimostrazioni .[#toc-demos]
===========================

Correzione di un bug:

<iframe width="560" height="315" src="https://www.youtube.com/embed/3ITT4mC0Eq4?rel=0&amp;showinfo=0" frameborder="0" allow="encrypted-media" allowfullscreen></iframe>

Creazione di un nuovo file:

<iframe width="560" height="315" src="https://www.youtube.com/embed/AJ_FUivAGZQ?rel=0&amp;showinfo=0" frameborder="0" allow="encrypted-media" allowfullscreen></iframe>


Risoluzione dei problemi .[#toc-troubleshooting]
================================================

- In Firefox potrebbe essere necessario [consentire l' |http://kb.mozillazine.org/Register_protocol#Firefox_3.5_and_above] esecuzione del protocollo personalizzato in about:config impostando `network.protocol-handler.expose.editor` su `false` e `network.protocol-handler.expose-all` su `true`. Tuttavia, dovrebbe essere consentito per impostazione predefinita.
- Se non funziona tutto immediatamente, niente panico. Provate ad aggiornare la pagina, a riavviare il browser o il computer. Questo dovrebbe aiutare.
- Errore di input: Non esiste un motore di script per l'estensione del file ".js" Forse avete associato il file ".js" a un'altra applicazione e non al motore JScript. Per risolvere il problema, vedere [qui |https://www.winhelponline.com/blog/error-there-is-no-script-engine-for-file-extension-when-running-js-files/]

A partire dalla versione 77 di Google Chrome non verrà più visualizzata la casella di controllo "Apri sempre questi tipi di collegamenti nell'applicazione associata" quando l'editor viene aperto tramite un collegamento. Soluzione per Windows: creare il file `fix.reg`:

```
Windows Registry Editor Version 5.00
[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Google\Chrome\URLWhitelist]
"123"="editor://*"
```
Importarlo con un doppio clic e riavviare Chrome.


In caso di ulteriori problemi o domande, chiedere al [forum |https://forum.nette.org].
