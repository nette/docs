Editores y herramientas
***********************

.[perex]
Puedes ser un programador experto, pero sólo con buenas herramientas llegarás a ser un maestro. En este capítulo encontrarás consejos sobre herramientas, editores y plugins importantes.


Editor IDE .[#toc-ide-editor]
=============================

Recomendamos encarecidamente el uso de un IDE con todas las funciones para el desarrollo, como PhpStorm, NetBeans, VS Code, y no sólo un editor de texto con soporte PHP. La diferencia es realmente crucial. No hay razón para conformarse con un editor clásico con resaltado de sintaxis, porque no alcanza las capacidades de un IDE con sugerencia de código precisa, que puede refactorizar código, y más. Algunos IDE son de pago, otros son gratuitos.

**NetBeans IDE** tiene soporte incorporado para Nette, Latte y NEON.

**PhpStorm**: instala estos plugins en `Settings > Plugins > Marketplace`:
- Nette framework helpers
- Latte
- Soporte NEON
- Comprobador Nette

**Código VS**: encuentra el plugin "Nette Latte + Neon" en el mercado.

Conecta también Tracy con el editor. Cuando aparezca la página de error, puede hacer clic en los nombres de los archivos y se abrirán en el editor con el cursor en la línea correspondiente. Aprende [a configurar el sistema |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan es una herramienta que detecta errores lógicos en su código antes de ejecutarlo.

Instálelo a través de Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Cree un archivo de configuración `phpstan.neon` en el proyecto:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Y luego deja que analice las clases en la carpeta `app/`:

```shell
vendor/bin/phpstan analyse app
```

Puede encontrar documentación completa directamente en [PHPStan |https://phpstan.org].


Comprobador de código .[#toc-code-checker]
==========================================

[Code Checker |code-checker:] comprueba y posiblemente repara algunos de los errores formales de su código fuente.

- elimina [la lista de materiales |nette:glossary#bom]
- comprueba la validez de las plantillas [Latte |latte:]
- comprueba la validez de los archivos `.neon`, `.php` y `.json`
- comprueba los [caracteres de control |nette:glossary#control characters]
- comprueba si el fichero está codificado en UTF-8
- controla los errores ortográficos `/* @annotations */` (falta el segundo asterisco)
- elimina las etiquetas finales de PHP `?>` en los archivos PHP
- elimina los espacios en blanco finales y las líneas en blanco innecesarias al final de un archivo
- normaliza los finales de línea a los predeterminados por el sistema (con el parámetro `-l` )


Compositor .[#toc-composer]
===========================

[Composer] es una herramienta para gestionar tus dependencias en PHP. Nos permite declarar dependencias de librerías y las instalará por nosotros, en nuestro proyecto.


Verificador de Requisitos .[#toc-requirements-checker]
======================================================

Se trata de una herramienta que comprueba el entorno de ejecución del servidor e informa de si se puede utilizar el framework (y en qué medida). Actualmente, Nette puede utilizarse en cualquier servidor que tenga la versión mínima requerida de PHP.

{{sitename: Buenas prácticas}}
