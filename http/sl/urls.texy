Razhroščevalnik in graditelj URL-jev
************************************

.[perex]
Razredi [Url |#Url], [UrlImmutable |#UrlImmutable] in [UrlScript |#UrlScript] omogočajo enostavno upravljanje, razčlenjevanje in manipuliranje z naslovi URL.

→ [Namestitev in zahteve |@home#Installation]


Url
===

Razred [api:Nette\Http\Url] omogoča enostavno delo z naslovom URL in njegovimi posameznimi sestavnimi deli, ki so opisani v tem diagramu:

/--pre
 scheme  user  password  host   port    path        query  fragment
   |      |      |        |      |       |            |       |
 /--\   /--\ /------\ /-------\ /--\/----------\ /--------\ /----\
 <b>http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer</b>
 \______\__________________________/
     |               |
  hostUrl        authority
\--

Ustvarjanje URL je intuitivno:

```php
use Nette\Http\Url;

$url = new Url;
$url->setScheme('https')
	->setHost('localhost')
	->setPath('/edit')
	->setQueryParameter('foo', 'bar');

echo $url; // 'https://localhost/edit?foo=bar'
```

URL lahko tudi razčlenite in ga nato obdelate:

```php
$url = new Url(
	'http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer',
);
```

Razred `Url` implementira vmesnik `JsonSerializable` in zagotavlja metodo `__toString()`, ki omogoča tiskanje predmeta ali njegovo uporabo z `json_encode()`.

```php
echo $url;
echo json_encode([$url]);
```


URL Components .[method]
------------------------

Za pridobivanje ali spreminjanje posameznih komponent URL so na voljo naslednje metode:

.[language-php]
| Setter | Getter | Vrnjena vrednost
|--------------------------------------------------------------------------------------------
| `setScheme(string $scheme)`| `getScheme(): string`| `'http'`
| `setUser(string $user)`| `getUser(): string`| `'john'`
| `setPassword(string $password)`| `getPassword(): string`| `'xyz*12'`
| `setHost(string $host)`| `getHost(): string`| `'nette.org'`
| `setPort(int $port)`| `getPort(): ?int`| `8080`
| | `getDefaultPort(): ?int`| `80`
| `setPath(string $path)`| `getPath(): string`| `'/en/download'`
| `setQuery(string\|array $query)`| `getQuery(): string`| `'name=param'`
| `setFragment(string $fragment)`| `getFragment(): string`| `'footer'`
| | `getAuthority(): string`| `'nette.org:8080'`
| | `getHostUrl(): string`| `http://nette.org:8080'`
| | `getAbsoluteUrl(): string` | polni URL

Opozorilo: Pri delu z URL-jem, pridobljenim z [zahtevo HTTP |request], upoštevajte, da ne bo vseboval fragmenta, saj ga brskalnik ne pošlje strežniku.

S posameznimi parametri poizvedbe lahko operiramo tudi z uporabo:

.[language-php]
| Setter | Getter
|---------------------------------------------------
| `setQuery(string\|array $query)` | `getQueryParameters(): array`
| `setQueryParameter(string $name, $val)`| `getQueryParameter(string $name)`


getDomain(int $level = 2): string .[method]
-------------------------------------------
Vrne desni ali levi del gostitelja. Če je gostitelj `www.nette.org`, je prikazano naslednje delovanje:

.[language-php]
| `getDomain(1)` | `'org'`
| `getDomain(2)` | `'nette.org'`
| `getDomain(3)` | `'www.nette.org'`
| `getDomain(0)` | `'www.nette.org'`
| `getDomain(-1)` | `'www.nette'`
| `getDomain(-2)` | `'www'`
| `getDomain(-3)` | `''`


isEqual(string|Url $anotherUrl): bool .[method]
-----------------------------------------------
Preveri, ali sta dva naslova URL enaka.

```php
$url->isEqual('https://nette.org');
```


Url::isAbsolute(string $url): bool .[method]{data-version:3.3.2}
----------------------------------------------------------------
Preveri, ali je naslov URL absoluten. URL se šteje za absolutnega, če se začne s shemo (npr. http, https, ftp), ki ji sledi dvopičje.

```php
Url::isAbsolute('https://nette.org');    // true
Url::isAbsolute('//nette.org');          // false
```


Url::removeDotSegments(string $path): string .[method]{data-version:3.3.2}
--------------------------------------------------------------------------
Normalizira pot URL z odstranitvijo posebnih segmentov `.` in `..`. Ta metoda odstrani odvečne elemente poti na enak način kot brskalniki.

```php
Url::removeDotSegments('/path/../subtree/./file.txt');  // '/subtree/file.txt'
Url::removeDotSegments('/../foo/./bar');                // '/foo/bar'
Url::removeDotSegments('./today/../file.txt');          // 'file.txt'
```


UrlImmutable .[#toc-urlimmutable]
=================================

Razred [api:Nette\Http\UrlImmutable] je nespremenljiva alternativa razredu `Url` (tako kot je v PHP `DateTimeImmutable` nespremenljiva alternativa `DateTime`). Namesto setterjev ima tako imenovane witherje, ki ne spreminjajo objekta, temveč vračajo nove instance s spremenjeno vrednostjo:

```php
use Nette\Http\UrlImmutable;

$url = new UrlImmutable(
	'http://john:xyz%2A12@nette.org:8080/en/download?name=param#footer',
);

$newUrl = $url
	->withUser('')
	->withPassword('')
	->withPath('/en/');

echo $newUrl; // 'http://nette.org:8080/en/?name=param#footer'
```

Razred `UrlImmutable` implementira vmesnik `JsonSerializable` in zagotavlja metodo `__toString()`, ki omogoča tiskanje predmeta ali njegovo uporabo z `json_encode()`.

```php
echo $url;
echo json_encode([$url]);
```


URL Components .[method]
------------------------

Za pridobivanje ali spreminjanje posameznih komponent URL so na voljo naslednje metode:

.[language-php]
| Wither | Getter | Vrnjena vrednost
|--------------------------------------------------------------------------------------------
| `withScheme(string $scheme)`| `getScheme(): string`| `'http'`
| `withUser(string $user)`| `getUser(): string`| `'john'`
| `withPassword(string $password)`| `getPassword(): string`| `'xyz*12'`
| `withHost(string $host)`| `getHost(): string`| `'nette.org'`
| `withPort(int $port)`| `getPort(): ?int`| `8080`
| | `getDefaultPort(): ?int`| `80`
| `withPath(string $path)`| `getPath(): string`| `'/en/download'`
| `withQuery(string\|array $query)`| `getQuery(): string`| `'name=param'`
| `withFragment(string $fragment)`| `getFragment(): string`| `'footer'`
| | `getAuthority(): string`| `'nette.org:8080'`
| | `getHostUrl(): string`| `http://nette.org:8080'`
| | `getAbsoluteUrl(): string` | polni URL

Metoda `withoutUserInfo()` odstrani `user` in `password`.

S posameznimi parametri poizvedbe lahko operiramo tudi z uporabo:

.[language-php]
| Wither | Getter
|-----------------------------------------------
| `withQuery(string\|array $query)` | `getQueryParameters(): array`
| `withQueryParameter(string $name, $val)` | `getQueryParameter(string $name)`


getDomain(int $level = 2): string .[method]
-------------------------------------------
Vrne desni ali levi del gostitelja. Če je gostitelj `www.nette.org`, je prikazano naslednje delovanje:

.[language-php]
| `getDomain(1)` | `'org'`
| `getDomain(2)` | `'nette.org'`
| `getDomain(3)` | `'www.nette.org'`
| `getDomain(0)` | `'www.nette.org'`
| `getDomain(-1)` | `'www.nette'`
| `getDomain(-2)` | `'www'`
| `getDomain(-3)` | `''`


resolve(string $reference): UrlImmutable .[method]{data-version:3.3.2}
----------------------------------------------------------------------
Absolutni naslov URL rešuje na enak način, kot brskalnik obdeluje povezave na strani HTML:
- Če je povezava absolutni URL (vsebuje shemo), se uporabi nespremenjena.
- Če se povezava začne s `//`, se uporabi samo shema iz trenutnega URL-ja.
- Če se povezava začne s `/`, se ustvari absolutna pot iz korena domene.
- V drugih primerih se URL ustvari relativno glede na trenutno pot.

```php
$url = new UrlImmutable('https://example.com/path/page');
echo $url->resolve('../foo');           // 'https://example.com/foo'
echo $url->resolve('/bar');             // 'https://example.com/bar'
echo $url->resolve('sub/page.html');    // 'https://example.com/path/sub/page.html'
```


isEqual(string|Url $anotherUrl): bool .[method]
-----------------------------------------------
Preveri, ali sta dva naslova URL enaka.

```php
$url->isEqual('https://nette.org');
```


UrlScript .[#toc-urlscript]
===========================

Razred [api:Nette\Http\UrlScript] je potomec razreda `UrlImmutable` in dodatno razlikuje te logične dele URL-ja:

/--pre
      baseUrl    basePath  relativePath  relativeUrl
         |          |        |               |
 /---------------/-----\/--------\---------------------------\
 <b>http://nette.org/admin/script.php/pathinfo/?name=param#footer</b>
                 \_______________/\________/
                        |              |
                   scriptPath       pathInfo
\--

Za pridobitev teh delov so na voljo naslednje metode:

.[language-php]
| Getter | Vrnjena vrednost
|------------------------------------------------
| `getScriptPath(): string`| `'/admin/script.php'`
| `getBasePath(): string`| `'/admin/'`
| `getBaseUrl(): string`| `http://nette.org/admin/'`
| `getRelativePath(): string`| `'script.php'`
| `getRelativeUrl(): string`| `'script.php/pathinfo/?name=param#footer'`
| `getPathInfo(): string`| `'/pathinfo/'`


Ne ustvarjamo predmetov `UrlScript` neposredno, ampak jih vrne metoda [Nette\Http\Request::getUrl() |request].
