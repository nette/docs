Configurazione del controllo degli accessi
******************************************

.[perex]
Panoramica delle opzioni di configurazione di Nette Security.

Se non si utilizza l'intero framework, ma solo questa libreria, leggere [come caricare la configurazione |bootstrap:].

È possibile definire un elenco di utenti nella configurazione per creare un [semplice autenticatore |authentication] (`Nette\Security\SimpleAuthenticator`). Poiché le password sono leggibili nella configurazione, questa soluzione è solo a scopo di test.

```neon
security:
	# shows user panel in Tracy Bar?
	debugger: ...  # (bool) defaults to true

	users:
		# name: password
		johndoe: secret123

		# name, password, role and other data available in the identity
		janedoe:
			password: secret123
			roles: [admin]
			data: ...
```

Si possono anche definire ruoli e risorse per creare una base per l'[autorizzatore |authorization] (`Nette\Security\Permission`):

```neon
security:
	roles:
		guest:
		registered: [guest]  # registered inherits from guest
		admin: [registered]  # and admin inherits from registered

	resources:
		article:
		comment: [article]   # resource inherits from article
		poll:
```


Memorizzazione degli utenti .[#toc-user-storage]
------------------------------------------------

È possibile configurare la modalità di memorizzazione delle informazioni sull'utente connesso:

```neon
security:
	authentication:
		# after how long of inactivity the user will be logged out
		expiration: 30 minutes        # (string) default is not set

		# where to store information about the logged in user
		storage: session              # (session|cookie) default is session
```

Se si sceglie `cookie` come repository, si possono impostare anche le seguenti opzioni:

```neon
security:
	authentication:
		# name of cookie
		cookieName: userId            # (string) výchozí je userid

		# which hosts are allowed to receive the cookie
		cookieDomain: 'example.com'  # (string|domain)

		# restrictions when accessing cross-origin request
		cookieSamesite: None          # (Strict|Lax|None) defaults to Lax
```
