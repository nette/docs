Görüntü Fonksiyonları
*********************

.[perex]
[api:Nette\Utils\Image] sınıfı, yeniden boyutlandırma, kırpma, keskinleştirme, çizim veya birden fazla görüntüyü birleştirme gibi görüntü manipülasyonunu basitleştirir.

PHP, görüntüleri işlemek için kapsamlı bir işlev setine sahiptir. Ancak API pek hoş değil. Seksi bir API ile ortaya çıkmak için Neat Framework olmazdı.

Kurulum:

```shell
composer require nette/utils
```

Aşağıdaki örneklerde, aşağıdaki sınıf takma adının tanımlandığı varsayılmaktadır:

```php
use Nette\Utils\Image;
```


Görüntü Oluşturma .[#toc-creating-an-image]
===========================================

Örneğin 100×200 boyutlarında yeni bir gerçek renkli görüntü oluşturacağız:

```php
$image = Image::fromBlank(100, 200);
```

İsteğe bağlı olarak bir arka plan rengi belirtebilirsiniz (varsayılan renk siyahtır):

```php
$image = Image::fromBlank(100, 200, Image::rgb(125, 0, 0));
```

Ya da görüntüyü bir dosyadan yükleriz:

```php
$image = Image::fromFile('nette.jpg');
```

Yükleme sırasında görüntü formatını tespit etmeniz mi gerekiyor? Yöntem, ikinci parametrede biçimi döndürür:

```php
$image = Image::fromFile('nette.jpg', $type);
// $type Image::JPEG, Image::PNG, Image::GIF, Image::WEBP veya Image::BMP ise
```

Yükleme yapılmadan algılama `Image::detectTypeFromFile()` tarafından gerçekleştirilebilir.


Görüntüyü Kaydet .[#toc-save-the-image]
=======================================

Görüntü bir dosyaya kaydedilebilir:

```php
$image->save('resampled.jpg');
```

Sıkıştırma kalitesini JPEG (varsayılan 85) ve WEBP (varsayılan 80) için 0..100 ve PNG (varsayılan 9) için 0..9 aralığında belirleyebiliriz:

```php
$image->save('resampled.jpg', 80); // JPEG, kalite %80
```

Format dosya uzantısından anlaşılmıyorsa, `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP` sabitlerinden biriyle belirtebilirsiniz:

```php
$image->save('resampled.tmp', null, Image::JPEG);
```

Görüntü disk yerine bir değişkene yazılabilir:

```php
$data = $image->toString(Image::JPEG, 80); // JPEG, kalite %80.
```

veya uygun HTTP başlığıyla doğrudan tarayıcıya gönderin `Content-Type`:

```php
// başlık gönderir Content-Type: image/png
$image->send(Image::PNG);
```


Görüntü Yeniden Boyutlandırma .[#toc-image-resize]
==================================================

Yaygın bir işlem, bir görüntüyü yeniden boyutlandırmaktır. Geçerli boyutlar `getWidth()` ve `getHeight()` yöntemleri tarafından döndürülür.

Yeniden boyutlandırma için `resize()` yöntemi kullanılır. Bu, 500×300 pikseli aşmayacak şekilde orantılı boyut değişikliği örneğidir (genişlik tam olarak 500 piksel veya yükseklik tam olarak 300 piksel olacaktır, boyutlardan biri en boy oranını korumak için hesaplanır):

```php
$image->resize(500, 300);
```

Yalnızca bir boyut ayarlamak mümkündür ve ikincisi hesaplanacaktır:

```php
$image->resize(500, null); // genişlik 500px, yükseklik otomatik

$image->resize(null, 300); // genişlik otomatik, yükseklik 300px
```

Herhangi bir boyut yüzde olarak belirtilebilir:

```php
$image->resize('75%', 300); // 75 % × 300px
```

`resize` adresinin davranışı aşağıdaki bayraklardan etkilenebilir. `Image::Stretch` hariç hepsi en boy oranını korur.

|---------------------------------------------------------------------------------------
| Bayrak | Açıklama
|---------------------------------------------------------------------------------------
| `Image::OrSmaller` (varsayılan) | sonuçta elde edilen boyutlar belirtilenden küçük veya eşit olacaktır
| `Image::OrBigger` | hedef alanı doldurur ve muhtemelen bir yönde genişletir
| `Image::Cover` | tüm alanı doldurur ve onu aşanları keser
| `Image::ShrinkOnly` | sadece aşağı ölçeklendirir (küçük bir görüntüyü genişletmez)
| `Image::Stretch` | en boy oranını korumaz


Bayraklar fonksiyonun üçüncü argümanı olarak aktarılır:

```php
$image->resize(500, 300, Image::OrBigger);
```

Bayraklar birleştirilebilir:

```php
$image->resize(500, 300, Image::ShrinkOnly | Image::Stretch);
```

Boyutlardan biri (veya her ikisi) negatif sayı olarak belirtilerek görüntüler dikey veya yatay olarak çevrilebilir:

```php
$flipped = $image->resize(null, '-100%'); // dikey çevir

$flipped = $image->resize('-100%', '-100%'); // 180° döndür

$flipped = $image->resize(-125, 500); // yeniden boyutlandır ve yatay çevir
```

Görüntüyü küçülttükten sonra keskinleştirerek iyileştirebiliriz:

```php
$image->sharpen();
```


Kırpma .[#toc-cropping]
=======================

Kırpma için `crop()` yöntemi kullanılır:

```php
$image->crop($left, $top, $width, $height);
```

`resize()` adresinde olduğu gibi, tüm değerler yüzde olarak belirtilebilir. `$left` ve `$top` için yüzdeler, `background-position` CSS özelliğine benzer şekilde kalan alandan hesaplanır:

```php
$image->crop('100%', '50%', '80%', '80%');
```

[* crop.svg *]


Görüntü otomatik olarak da kırpılabilir, örneğin siyah kenarlar kırpılabilir:

```php
$image->cropAuto(IMG_CROP_BLACK);
```

`cropAuto()` yöntemi, `imagecropauto()` işlevinin bir nesne kapsüllemesidir, daha fazla bilgi için [belgelerine |https://www.php.net/manual/en/function.imagecropauto] bakın.


Çizim ve Düzenleme .[#toc-drawing-and-editing]
==============================================

Çizebilir, yazabilir, [imagefilledellipse() |https://www.php.net/manual/en/function.imagefilledellipse.php] gibi resimlerle çalışmak için tüm PHP işlevlerini kullanabilirsiniz, ancak nesne stilini kullanarak:

```php
$image->filledEllipse($cx, $cy, $width, $height, Image::rgb(255, 0, 0, 63));
```

[Yöntemlere Genel Bakış |#Overview of Methods] bölümüne bakınız.


Birden Fazla Görüntüyü Birleştirme .[#toc-merge-multiple-images]
================================================================

Görüntünün içine kolayca başka bir görüntü yerleştirebilirsiniz:

```php
$logo = Image::fromFile('logo.png');
$blank = Image::fromBlank(320, 240, Image::rgb(52, 132, 210));

// koordinatlar yüzde olarak da ayarlanabilir
$blank->place($logo, '80%', '80%'); // sağ alt köşeye yakın
```

Yapıştırırken, alfa kanalına saygı duyulur, ayrıca eklenen görüntünün şeffaflığını etkileyebiliriz (sözde bir filigran oluşturacağız):

```php
$blank->place($image, '80%', '80%', 25); // şeffaflık %25
```

Böyle bir API'yi kullanmak gerçekten bir zevk, değil mi?


Yöntemlere Genel Bakış .[#toc-overview-of-methods]
==================================================


static fromBlank(int $width, int $height, array $color=null): Image .[method]
-----------------------------------------------------------------------------
Verilen boyutlarda yeni bir gerçek renkli görüntü oluşturur. Varsayılan renk siyahtır.


static fromFile(string $file, int &$detectedFormat=null): Image .[method]
-------------------------------------------------------------------------
Bir dosyadan bir görüntü okur ve türünü `$detectedFormat` olarak döndürür. Desteklenen türler `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP`'dir.


static fromString(string $s, int &$detectedFormat=null): Image .[method]
------------------------------------------------------------------------
Bir dizeden bir görüntü okur ve türünü `$detectedFormat` olarak döndürür. Desteklenen türler `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP`'dir.


static rgb(int $red, int $green, int $blue, int $transparency=0): array .[method]
---------------------------------------------------------------------------------
`ellipse()`, `fill()` gibi diğer yöntemlerde kullanılabilecek bir renk oluşturur.


static typeToExtension(int $type): string .[method]
---------------------------------------------------
Verilen `Image::XXX` sabiti için dosya uzantısını döndürür.


static typeToMimeType(int $type): string .[method]
--------------------------------------------------
Verilen `Image::XXX` sabiti için mime türünü döndürür.


static extensionToType(string $extension): int .[method]
--------------------------------------------------------
Dosya uzantısına göre görüntü türünü sabit `Image::XXX` olarak döndürür.


static detectTypeFromFile(string $file, int &$width=null, int &$height=null): ?int .[method]
--------------------------------------------------------------------------------------------
Görüntü dosyasının türünü `Image::XXX` sabiti olarak ve `$width` ve `$height` parametrelerinde de boyutlarını döndürür.


static detectTypeFromString(string $s, int &$width=null, int &$height=null): ?int .[method]
-------------------------------------------------------------------------------------------
Resmin türünü dizeden `Image::XXX` sabiti olarak ve `$width` ve `$height` parametrelerinde de boyutlarını döndürür.


affine(array $affine, array $clip=null): Image .[method]
--------------------------------------------------------
İsteğe bağlı bir kırpma alanı kullanarak, afin dönüşümü yapılmış src görüntüsünü içeren bir görüntü döndürür. ([daha fazla |https://www.php.net/manual/en/function.imageaffine]).


affineMatrixConcat(array $m1, array $m2): array .[method]
---------------------------------------------------------
İki afin dönüşüm matrisinin birleştirilmesini döndürür; bu, aynı görüntüye tek seferde birden fazla dönüşüm uygulanması gerektiğinde kullanışlıdır. ([daha fazla |https://www.php.net/manual/en/function.imageaffinematrixconcat])


affineMatrixGet(int $type, mixed $options=null): array .[method]
----------------------------------------------------------------
Bir afin dönüşüm matrisi döndürür. ([daha fazla |https://www.php.net/manual/en/function.imageaffinematrixget])


alphaBlending(bool $on): void .[method]
---------------------------------------
Gerçek renkli görüntüler üzerinde iki farklı çizim moduna izin verir. Karıştırma modunda, `setPixel()` gibi tüm çizim işlevlerine sağlanan rengin alfa kanalı bileşeni, altta yatan rengin ne kadarının parlamasına izin verilmesi gerektiğini belirler. Sonuç olarak, o noktadaki mevcut rengi çizim rengiyle otomatik olarak karıştırır ve sonucu görüntüde saklar. Ortaya çıkan piksel opaktır. Karışımsız modda, çizim rengi alfa kanalı bilgisiyle birlikte tam anlamıyla kopyalanır ve hedef pikselin yerini alır. Palet görüntüleri üzerinde çizim yaparken karıştırma modu kullanılamaz. ([daha fazla |https://www.php.net/manual/en/function.imagealphablending])


antialias(bool $on): void .[method]
-----------------------------------
Çizgiler ve kablolu çokgenler için hızlı çizim antialiased yöntemlerini etkinleştirin. Alfa bileşenlerini desteklemez. Doğrudan harmanlama işlemi kullanılarak çalışır. Yalnızca gerçek renkli görüntülerle çalışır.

Şeffaf arka plan rengiyle kenar yumuşatılmış ilkel öğelerin kullanılması bazı beklenmedik sonuçlara yol açabilir. Karışım yöntemi, arka plan rengini diğer renkler gibi kullanır. Alfa bileşeni desteğinin olmaması, alfa tabanlı bir kenar yumuşatma yöntemine izin vermez. ([daha fazla |https://www.php.net/manual/en/function.imageantialias])


arc(int $x, int $y, int $w, int $h, int $start, int $end, int $color): void .[method]
-------------------------------------------------------------------------------------
Verilen koordinatları merkez alan bir daire yayı çizer. ([daha fazla |https://www.php.net/manual/en/function.imagearc])


char(int $font, int $x, int $y, string $char, int $color): void .[method]
-------------------------------------------------------------------------
Görüntüdeki `$char` öğesinin ilk karakterini sol üst köşesi `$x`,`$y` (sol üst köşesi 0, 0) olacak şekilde `$color` rengiyle çizer. ([daha fazla |https://www.php.net/manual/en/function.imagechar])


charUp(int $font, int $x, int $y, string $char, int $color): void .[method]
---------------------------------------------------------------------------
Verilen görüntü üzerinde belirtilen koordinatta `$char` karakterini dikey olarak çizer. ([daha fazla |https://www.php.net/manual/en/function.imagecharup])


colorAllocate(int $red, int $green, int $blue): int .[method]
-------------------------------------------------------------
Verilen RGB bileşenlerinden oluşan rengi temsil eden bir renk tanımlayıcısı döndürür. Görüntüde kullanılacak her bir rengi oluşturmak için çağrılmalıdır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorallocate])


colorAllocateAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
------------------------------------------------------------------------------
Şeffaflık parametresinin eklenmesiyle `colorAllocate()` ile aynı şekilde davranır `$alpha`. ([daha fazla |https://www.php.net/manual/en/function.imagecolorallocatealpha])


colorAt(int $x, int $y): int .[method]
--------------------------------------
Görüntüde belirtilen konumdaki pikselin renginin indeksini döndürür. Görüntü gerçek renkli bir görüntüyse, bu fonksiyon o pikselin RGB değerini tamsayı olarak döndürür. Farklı kırmızı, yeşil ve mavi bileşen değerlerine erişmek için bit kaydırma ve maskeleme kullanın: ([devamı |https://www.php.net/manual/en/function.imagecolorat])


colorClosest(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
Görüntünün paletinde belirtilen RGB değerine "en yakın" olan rengin indeksini döndürür. İstenen renk ile paletteki her renk arasındaki "mesafe", RGB değerleri üç boyutlu uzaydaki noktaları temsil ediyormuş gibi hesaplanır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosest])


colorClosestAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
Görüntünün paletinde belirtilen RGB değerine ve `$alpha` düzeyine "en yakın" rengin indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosestalpha])


colorClosestHWB(int $red, int $green, int $blue): int .[method]
---------------------------------------------------------------
Verilen renge en yakın ton, beyaz ve siyahlığa sahip rengin indeksini alır. ([daha fazla |https://www.php.net/manual/en/function.imagecolorclosesthwb])


colorDeallocate(int $color): void .[method]
-------------------------------------------
Daha önce `colorAllocate()` veya `colorAllocateAlpha()` ile tahsis edilmiş bir rengin tahsisini kaldırır. ([daha fazla |https://www.php.net/manual/en/function.imagecolordeallocate])


colorExact(int $red, int $green, int $blue): int .[method]
----------------------------------------------------------
Görüntünün paletinde belirtilen rengin indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorexact])


colorExactAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
---------------------------------------------------------------------------
Görüntünün paletinde belirtilen renk+alfa indeksini döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorexactalpha])


colorMatch(Image $image2): void .[method]
-----------------------------------------
Bir görüntünün palet sürümünün renklerinin gerçek renk sürümüne daha yakın olmasını sağlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolormatch])


colorResolve(int $red, int $green, int $blue): int .[method]
------------------------------------------------------------
İstenen renk için bir renk indeksi döndürür, ya tam renk ya da mümkün olan en yakın alternatif. ([daha fazla |https://www.php.net/manual/en/function.imagecolorresolve])


colorResolveAlpha(int $red, int $green, int $blue, int $alpha): int .[method]
-----------------------------------------------------------------------------
İstenen renk için bir renk indeksi döndürür, ya tam renk ya da mümkün olan en yakın alternatif. ([daha fazla |https://www.php.net/manual/en/function.imagecolorresolvealpha])


colorSet(int $index, int $red, int $green, int $blue): void .[method]
---------------------------------------------------------------------
Bu, palette belirtilen indeksi belirtilen renge ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolorset])


colorsForIndex(int $index): array .[method]
-------------------------------------------
Belirtilen bir indeks için rengi döndürür. ([daha fazla |https://www.php.net/manual/en/function.imagecolorsforindex])


colorsTotal(): int .[method]
----------------------------
Bir görüntü paletindeki renk sayısını döndürür ([daha fazla |https://www.php.net/manual/en/function.imagecolorstotal]).


colorTransparent(int $color=null): int .[method]
------------------------------------------------
Görüntüdeki saydam rengi alır veya ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagecolortransparent])


convolution(array $matrix, float $div, float $offset): void .[method]
---------------------------------------------------------------------
Verilen katsayı ve ofseti kullanarak görüntü üzerinde bir konvolüsyon matrisi uygular. ([daha fazla |https://www.php.net/manual/en/function.imageconvolution])

.[note]
Paketlenmiş GD uzantısı* gerektirir, bu nedenle her yerde çalışacağından emin değildir.


copy(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH): void .[method]
--------------------------------------------------------------------------------------------------
`$src` adresinin bir bölümünü `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliğinde ve `$srcH` yüksekliğinde görüntü üzerine kopyalar. Tanımlanan kısım `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopy])


copyMerge(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
---------------------------------------------------------------------------------------------------------------------
`$src` adresinin bir bölümünü `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliğinde ve `$srcH` yüksekliğinde görüntü üzerine kopyalar. Tanımlanan kısım `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopymerge])


copyMergeGray(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $srcW, int $srcH, int $opacity): void .[method]
-------------------------------------------------------------------------------------------------------------------------
`$src` adresinin bir bölümünü `$srcX`, `$srcY` koordinatlarından başlayarak `$srcW` genişliğinde ve `$srcH` yüksekliğinde görüntü üzerine kopyalar. Tanımlanan kısım `$dstX` ve `$dstY` koordinatlarına kopyalanacaktır.

Bu işlev `copyMerge()` ile aynıdır, ancak birleştirme sırasında hedef pikselleri kopyalama işleminden önce gri ölçeğe dönüştürerek kaynağın tonunu korur. ([daha fazla |https://www.php.net/manual/en/function.imagecopymergegray])


copyResampled(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
---------------------------------------------------------------------------------------------------------------------------------
Bir görüntünün dikdörtgen bir bölümünü başka bir görüntüye kopyalar, piksel değerlerini düzgün bir şekilde enterpole eder, böylece özellikle bir görüntünün boyutunun küçültülmesi hala büyük ölçüde netliği korur.

Başka bir deyişle, `copyResampled()` `$src` adresinden (`$srcX`,`$srcY`) konumunda `$srcW` genişliğinde ve `$srcH` yüksekliğinde dikdörtgen bir alan alacak ve bunu (`$dstX`,`$dstY`) konumunda `$dstW` genişliğinde ve `$dstH` yüksekliğinde dikdörtgen bir görüntü alanına yerleştirecektir.

Kaynak ve hedef koordinatları ile genişlik ve yükseklikler farklıysa, görüntü parçasında uygun germe veya küçültme işlemi gerçekleştirilir. Koordinatlar sol üst köşeyi ifade eder. Bu fonksiyon aynı görüntü içindeki bölgeleri kopyalamak için kullanılabilir ancak bölgeler çakışırsa sonuçlar tahmin edilemez olacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopyresampled])


copyResized(Image $src, int $dstX, int $dstY, int $srcX, int $srcY, int $dstW, int $dstH, int $srcW, int $srcH): void .[method]
-------------------------------------------------------------------------------------------------------------------------------
Bir görüntünün dikdörtgen bir bölümünü başka bir görüntüye kopyalar. Başka bir deyişle, `copyResized()` `$src` adresinden (`$srcX`,`$srcY`) konumunda `$srcW` genişliğinde ve `$srcH` yüksekliğinde dikdörtgen bir alan alacak ve bunu (`$dstX`,`$dstY`) konumunda `$dstW` genişliğinde ve `$dstH` yüksekliğinde dikdörtgen bir görüntü alanına yerleştirecektir.

Kaynak ve hedef koordinatları ile genişlik ve yükseklikler farklıysa, görüntü parçasında uygun germe veya küçültme işlemi gerçekleştirilir. Koordinatlar sol üst köşeyi ifade eder. Bu fonksiyon aynı görüntü içindeki bölgeleri kopyalamak için kullanılabilir ancak bölgeler üst üste gelirse sonuçlar tahmin edilemez olacaktır. ([daha fazla |https://www.php.net/manual/en/function.imagecopyresized])


crop(int|string $left, int|string $top, int|string $width, int|string $height): Image .[method]
-----------------------------------------------------------------------------------------------
Bir görüntüyü verilen dikdörtgen alana kırpar. Boyutlar piksel cinsinden tamsayılar veya yüzde cinsinden dizeler olarak aktarılabilir (örn. `'50%'`).


cropAuto(int $mode=-1, float $threshold=.5, int $color=-1): Image .[method]
---------------------------------------------------------------------------
Bir görüntüyü verilen `$mode` adresine göre otomatik olarak kırpar. ([daha fazla |https://www.php.net/manual/en/function.imagecropauto])


ellipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------
Belirtilen koordinatlarda ortalanmış bir elips çizer. ([daha fazla |https://www.php.net/manual/en/function.imageellipse])


fill(int $x, int $y, int $color): void .[method]
------------------------------------------------
Verilen koordinattan başlayarak (sol üst 0, 0'dır) görüntüde verilen `$color` ile bir sel dolgusu gerçekleştirir. ([daha fazla |https://www.php.net/manual/en/function.imagefill])


filledArc(int $cx, int $cy, int $w, int $h, int $s, int $e, int $color, int $style): void .[method]
---------------------------------------------------------------------------------------------------
Görüntüde belirtilen koordinatı merkez alan kısmi bir yay çizer. ([daha fazla |https://www.php.net/manual/en/function.imagefilledarc])


filledEllipse(int $cx, int $cy, int $w, int $h, int $color): void .[method]
---------------------------------------------------------------------------
Görüntüde belirtilen koordinatı merkez alan bir elips çizer. ([daha fazla |https://www.php.net/manual/en/function.imagefilledellipse])


filledPolygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------------
Resim içinde dolu bir çokgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagefilledpolygon])


filledRectangle(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
-------------------------------------------------------------------------------
Görüntüde 1 noktasından başlayıp 2 noktasında biten `$color` ile doldurulmuş bir dikdörtgen oluşturur. 0, 0 görüntünün sol üst köşesidir. ([daha fazla |https://www.php.net/manual/en/function.imagefilledrectangle])


fillToBorder(int $x, int $y, int $border, int $color): void .[method]
---------------------------------------------------------------------
Kenarlık rengi `$border` tarafından tanımlanan bir taşma dolgusu gerçekleştirir. Dolgu için başlangıç noktası `$x`, `$y` (sol üst 0, 0'dır) ve bölge `$color` rengi ile doldurulur. ([daha fazla |https://www.php.net/manual/en/function.imagefilltoborder])


filter(int $filtertype, int ...$args): void .[method]
-----------------------------------------------------
Verilen filtreyi `$filtertype` görüntü üzerinde uygular. ([daha fazla |https://www.php.net/manual/en/function.imagefilter])


flip(int $mode): void .[method]
-------------------------------
Verilen `$mode` adresini kullanarak görüntüyü çevirir. ([daha fazla |https://www.php.net/manual/en/function.imageflip])


ftText(int $size, int $angle, int $x, int $y, int $col, string $fontFile, string $text, array $extrainfo=null): array .[method]
-------------------------------------------------------------------------------------------------------------------------------
FreeType 2 kullanan yazı tiplerini kullanarak görüntüye metin yazın. ([daha fazla |https://www.php.net/manual/en/function.imagefttext])


gammaCorrect(float $inputgamma, float $outputgamma): void .[method]
-------------------------------------------------------------------
Bir giriş ve bir çıkış gaması verilen görüntüye gama düzeltmesi uygular. ([daha fazla |https://www.php.net/manual/en/function.imagegammacorrect])


getClip(): array .[method]
--------------------------
Geçerli kırpma dikdörtgenini, yani ötesinde hiçbir pikselin çizilmeyeceği alanı alır. ([daha fazla |https://www.php.net/manual/en/function.imagegetclip])


getHeight(): int .[method]
--------------------------
Görüntünün yüksekliğini döndürür.


getImageResource(): resource|GdImage .[method]
----------------------------------------------
Orijinal kaynağı döndürür.


getWidth(): int .[method]
-------------------------
Görüntünün genişliğini döndürür.


interlace(int $interlace=null): int .[method]
---------------------------------------------
Geçiş bitini açar veya kapatır. Geçiş biti ayarlanmışsa ve görüntü bir JPEG görüntüsü olarak kullanılıyorsa, görüntü aşamalı bir JPEG olarak oluşturulur. ([daha fazla |https://www.php.net/manual/en/function.imageinterlace])


isTrueColor(): bool .[method]
-----------------------------
Görüntünün gerçek renk olup olmadığını bulur. ([daha fazla |https://www.php.net/manual/en/function.imageistruecolor])


layerEffect(int $effect): void .[method]
----------------------------------------
Katmanlama efektlerini kullanmak için alfa karıştırma bayrağını ayarlayın. ([daha fazla |https://www.php.net/manual/en/function.imagelayereffect])


line(int $x1, int $y1, int $x2, int $y2, int $color): void .[method]
--------------------------------------------------------------------
Verilen iki nokta arasında bir çizgi çizer. ([daha fazla |https://www.php.net/manual/en/function.imageline])


openPolygon(array $points, int $numPoints, int $color): void .[method]
----------------------------------------------------------------------
Görüntü üzerine açık bir çokgen çizer. `polygon()` 'un aksine, son nokta ile ilk nokta arasında bir çizgi çizilmez. ([daha fazla |https://www.php.net/manual/en/function.imageopenpolygon])


paletteCopy(Image $source): void .[method]
------------------------------------------
Paleti `$source` adresinden görüntüye kopyalar. ([daha fazla |https://www.php.net/manual/en/function.imagepalettecopy])


paletteToTrueColor(): void .[method]
------------------------------------
`create()` gibi işlevler tarafından oluşturulan palet tabanlı bir görüntüyü `createtruecolor()` gibi gerçek renkli bir görüntüye dönüştürür. ([daha fazla |https://www.php.net/manual/en/function.imagepalettetotruecolor])


place(Image $image, int|string $left=0, int|string $top=0, int $opacity=100): Image .[method]
---------------------------------------------------------------------------------------------
`$image` adresini `$left` ve `$top` koordinatlarındaki görüntüye kopyalar. Koordinatlar piksel cinsinden tamsayılar veya yüzde cinsinden dizeler olarak aktarılabilir (örn. `'50%'`).


polygon(array $points, int $numPoints, int $color): void .[method]
------------------------------------------------------------------
Görüntüde bir çokgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagepolygon])


rectangle(int $x1, int $y1, int $x2, int $y2, int $col): void .[method]
-----------------------------------------------------------------------
Belirtilen koordinatlardan başlayan bir dikdörtgen oluşturur. ([daha fazla |https://www.php.net/manual/en/function.imagerectangle])


resize(int|string $width, int|string $height, int $flags=Image::OrSmaller): Image .[method]
-------------------------------------------------------------------------------------------
Bir görüntüyü ölçeklendirir, [daha fazla bilgi |#Image Resize] için bkz. Boyutlar piksel cinsinden tamsayılar veya yüzde cinsinden dizeler olarak aktarılabilir (örn. `'50%'`).


resolution(int $resX=null, int $resY=null): mixed .[method]
-----------------------------------------------------------
DPI (inç başına nokta) cinsinden bir görüntünün çözünürlüğünü ayarlamaya ve almaya izin verir. İsteğe bağlı parametrelerden hiçbiri verilmezse, geçerli çözünürlük indeksli dizi olarak döndürülür. Yalnızca `$resX` adresi verilirse, yatay ve dikey çözünürlük bu değere ayarlanır. Her iki isteğe bağlı parametre de verilirse, yatay ve dikey çözünürlük sırasıyla bu değerlere ayarlanır.

Çözünürlük yalnızca görüntüler bu tür bilgileri destekleyen formatlardan (şu anda PNG ve JPEG) okunduğunda ve bu formatlara yazıldığında meta bilgi olarak kullanılır. Herhangi bir çizim işlemini etkilemez. Yeni görüntüler için varsayılan çözünürlük 96 DPI'dır. ([daha fazla |https://www.php.net/manual/en/function.imageresolution])


rotate(float $angle, int $backgroundColor): Image .[method]
-----------------------------------------------------------
Verilen `$angle` adresini derece cinsinden kullanarak görüntüyü döndürür. Döndürme merkezi görüntünün merkezidir ve döndürülen görüntü orijinal görüntüden farklı boyutlara sahip olabilir. ([daha fazla |https://www.php.net/manual/en/function.imagerotate])

.[note]
Paketlenmiş GD uzantısı* gerektirir, bu nedenle her yerde çalışacağından emin değildir.


save(string $file, int $quality=null, int $type=null): void .[method]
---------------------------------------------------------------------
Bir görüntüyü bir dosyaya kaydeder.

Sıkıştırma kalitesi JPEG (varsayılan 85) ve WEBP (varsayılan 80) için 0..100 ve PNG (varsayılan 9) için 0..9 aralığındadır. Dosya uzantısından tür anlaşılmıyorsa, `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP` sabitlerinden biriyle belirtebilirsiniz.


saveAlpha(bool $saveflag): void .[method]
-----------------------------------------
PNG görüntüleri kaydedilirken tam alfa kanalı bilgisinin (tek renkli saydamlığın aksine) korunup korunmayacağını belirleyen bayrağı ayarlar.

İlk etapta alfa kanalını korumak için alfabe oluşturma devre dışı bırakılmalıdır (`alphaBlending(false)`). ([daha fazla |https://www.php.net/manual/en/function.imagesavealpha])


scale(int $newWidth, int $newHeight=-1, int $mode=IMG_BILINEAR_FIXED): Image .[method]
--------------------------------------------------------------------------------------
Verilen enterpolasyon algoritmasını kullanarak bir görüntüyü ölçeklendirir. ([daha fazla |https://www.php.net/manual/en/function.imagescale])


send(int $type=Image::JPEG, int $quality=null): void .[method]
--------------------------------------------------------------
Tarayıcıya bir görüntü çıktısı verir.

Sıkıştırma kalitesi JPEG (varsayılan 85) ve WEBP (varsayılan 80) için 0..100 ve PNG (varsayılan 9) için 0..9 aralığındadır. Tür, `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP` sabitlerinden biridir.


setBrush(Image $brush): void .[method]
--------------------------------------
IMG_COLOR_BRUSHED veya IMG_COLOR_STYLEDBRUSHED özel renkleriyle çizim yaparken tüm çizgi çizim fonksiyonları ( `line()` ve `polygon()` gibi) tarafından kullanılacak fırça görüntüsünü ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetbrush])


setClip(int $x1, int $y1, int $x2, int $y2): void .[method]
-----------------------------------------------------------
Geçerli kırpma dikdörtgenini, yani ötesinde hiçbir pikselin çizilmeyeceği alanı ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetclip])


setInterpolation(int $method=IMG_BILINEAR_FIXED): void .[method]
----------------------------------------------------------------
`rotate()` ve `affine()` yöntemlerini etkileyen enterpolasyon yöntemini ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetinterpolation])


setPixel(int $x, int $y, int $color): void .[method]
----------------------------------------------------
Belirtilen koordinatta bir piksel çizer. ([devamı |https://www.php.net/manual/en/function.imagesetpixel])


setStyle(array $style): void .[method]
--------------------------------------
IMG_COLOR_STYLED özel rengiyle veya IMG_COLOR_STYLEDBRUSHED rengine sahip görüntülerin çizgileriyle çizim yaparken tüm çizgi çizim işlevleri ( `line()` ve `polygon()` gibi) tarafından kullanılacak stili ayarlar. ([daha fazla |https://www.php.net/manual/en/function.imagesetstyle])


setThickness(int $thickness): void .[method]
--------------------------------------------
Dikdörtgenler, çokgenler, yaylar vb. çizerken çizilen çizgilerin kalınlığını `$thickness` piksel olarak ayarlar. ([devamı |https://www.php.net/manual/en/function.imagesetthickness])


setTile(Image $tile): void .[method]
------------------------------------
IMG_COLOR_TILED özel rengiyle doldururken tüm bölge doldurma işlevleri ( `fill()` ve `filledPolygon()` gibi) tarafından kullanılacak döşeme görüntüsünü ayarlar.

Karo, bir alanı tekrarlanan bir desenle doldurmak için kullanılan bir görüntüdür. Herhangi bir görüntü karo olarak kullanılabilir ve karo görüntüsünün şeffaf renk indeksi `colorTransparent()` ile ayarlanarak, alttaki alanın belirli kısımlarının parlamasına izin veren bir karo oluşturulabilir. ([daha fazla |https://www.php.net/manual/en/function.imagesettile])


sharpen(): Image .[method]
--------------------------
Görüntüyü biraz keskinleştirir.

.[note]
Paketlenmiş GD uzantısı* gerektirir, bu nedenle her yerde çalışacağından emin değiliz.


string(int $font, int $x, int $y, string $str, int $col): void .[method]
------------------------------------------------------------------------
Verilen koordinatlarda bir dize çizer. ([daha fazla |https://www.php.net/manual/en/function.imagestring])


stringUp(int $font, int $x, int $y, string $s, int $col): void .[method]
------------------------------------------------------------------------
Verilen koordinatlarda dikey olarak bir dize çizer. ([daha fazla |https://www.php.net/manual/en/function.imagestringup])


toString(int $type=Image::JPEG, int $quality=null): string .[method]
--------------------------------------------------------------------
Bir görüntüyü dizeye çıktı olarak verir.

Sıkıştırma kalitesi JPEG (varsayılan 85) ve WEBP (varsayılan 80) için 0..100 ve PNG (varsayılan 9) için 0..9 aralığındadır. Tür, `Image::JPEG`, `Image::PNG`, `Image::GIF`, `Image::WEBP` ve `Image::BMP` sabitlerinden biridir.


trueColorToPalette(bool $dither, int $ncolors): void .[method]
--------------------------------------------------------------
Bir gerçek renkli görüntüyü bir palet görüntüsüne dönüştürür. ([daha fazla |https://www.php.net/manual/en/function.imagetruecolortopalette])


ttfText(int $size, int $angle, int $x, int $y, int $color, string $fontfile, string $text): array .[method]
-----------------------------------------------------------------------------------------------------------
TrueType yazı tiplerini kullanarak verilen metni görüntüye yazar. ([daha fazla |https://www.php.net/manual/en/function.imagettftext])
