Ustvarite svojo prvo aplikacijo!
********************************

.[perex]
Spoznajte ogrodje Nette in ustvarite preprost blog s komentarji. Začnimo!

Po prvih dveh poglavjih boste imeli svoj delujoči blog in pripravljeni boste objavljati svoje odlične objave, čeprav bodo funkcije po zaključku teh dveh poglavij precej omejene. Da bi bile stvari za uporabnike prijetnejše, preberite tudi naslednja poglavja in še naprej izboljšujte svojo aplikacijo.

 [Celotno aplikacijo |https://github.com/nette-examples/quickstart/tree/v4.0] lahko najdete [na GitHubu |https://github.com/nette-examples/quickstart/tree/v4.0].

Namestite [polno funkcionalno okolje IDE in vse potrebne vtičnike |best-practices:editors-and-tools], saj boste tako izjemno učinkoviti.

Ta hitri začetek je bil napisan za Nette Framework 3.1 in PHP 8.0 ali novejšo različico.

Okvir Nette lahko prenesete ročno, vendar je priporočljiv način za začetek novega projekta uporaba [programa Composer |best-practices:composer]. Če ne poznate programa Composer, morate vsekakor začeti z njim. To je res preprosto in uporabno orodje, oglejte si [njihovo dokumentacijo |https://getcomposer.org/doc/].

S Composerjem lahko zelo preprosto prenesete in namestite ogrodje aplikacije, znano kot spletni projekt, ki vključuje ogrodje Nette. To storite tako, da v ukazni vrstici poiščete imenik Webroot (npr. `/var/www` ali `C:\InetPub`) in izvedete naslednji ukaz:

```shell
composer create-project nette/web-project nette-blog
```

Web Project se bo prenesel v imenik `nette-blog`.

.[note]
Če niste mogli uporabiti programa Composer, [prenesite |https://github.com/nette/web-project/archive/preloaded.zip] in razvozlajte arhiv ter ga kopirajte v korenski imenik spletnega strežnika in preimenujte v `nette-blog`. Celotno ogrodje se nahaja v mapi `vendor`.

Če razvijate v operacijskem sistemu macOS ali Linux (ali katerem koli drugem sistemu, ki temelji na Unixu), morate [nastaviti pravice za pisanje v |nette:troubleshooting#Setting directory permissions] spletni strežnik.


Pozdravna stran .[#toc-the-welcome-page]
========================================

V tem trenutku mora biti zagnana pozdravna stran spletnega projekta. Preizkusite jo tako, da odprete brskalnik in odprete naslednji naslov URL:

```
http://localhost/nette-blog/www/
```

in videli boste pozdravno stran ogrodja Nette:

[* qs-welcome.webp .{url: http://localhost/nette-blog/www/} *]

Aplikacija deluje in zdaj jo lahko začnete spreminjati.

.[note]
Če imate težave, [poskusite z nekaj nasveti |nette:troubleshooting#Nette Is Not Working, White Page Is Displayed].


Vsebina spletnega projekta .[#toc-web-project-s-content]
========================================================

Spletni projekt ima naslednjo strukturo:

/--pre
<b>nette-blog/</b>
├── <b>app/</b>              ← application directory
│   ├── <b>Presenters/</b>   ← presenter classes
│   │   └── <b>templates/</b>← templates
│   ├── <b>Router/</b>       ← configuration of URL addresses
│   └── <b>Bootstrap.php</b> ← booting class Bootstrap
├── <b>bin/</b>              ← scripts for the command line
├── <b>config/</b>           ← configuration files
├── <b>log/</b>              ← error logs
├── <b>temp/</b>             ← temporary files, cache, …
├── <b>vendor/</b>           ← libraries installed by Composer
│   └── <b>autoload.php</b>  ← autoloading of libraries installed by Composer
└── <b>www/</b>              ← public folder - the only place accessible from browser
    └── <b>index.php</b>     ← initial file that launches the application
\--

V imeniku `www` so shranjene slike, JavaScript, CSS in druge javno dostopne datoteke. To je edini imenik, ki je neposredno dostopen iz brskalnika, zato lahko sem usmerite korenski imenik svojega spletnega strežnika (to lahko nastavite v programu Apache, vendar to storimo pozneje, saj zdaj to ni pomembno).

Najpomembnejši imenik za vas je `app/`. V njem najdete datoteko `Bootstrap.php`, znotraj katere je razred, ki naloži ogrodje in konfigurira aplikacijo. Vključi [samodejno nalaganje |robot-loader:] ter nastavi [razhroščevalnik |tracy:] in [poti |application:routing].


Očistite .[#toc-cleanup]
========================

Spletni projekt vsebuje pozdravno stran, ki jo lahko odstranimo - odstranite datoteko `app/Presenters/templates/Home/default.latte` in jo nadomestite z besedilom "Hello world!".


[* qs-hello.webp .{url:-} *]


Tracy (Debugger) .[#toc-tracy-debugger]
=======================================

Izjemno pomembno orodje za razvoj je [razhroščevalnik Tracy. |tracy:] Poskusite narediti nekaj napak v svoji datoteki `app/Presenters/HomePresenter.php` (npr. odstranite oglati oklepaj iz definicije razreda HomePresenter) in si oglejte, kaj se bo zgodilo. Pojavila se bo stran z rdečim zaslonom in razumljivim opisom napake.

[* qs-tracy.webp .{url:-}(debugger screen) *]

Tracy vam bo bistveno pomagal pri lovljenju napak. Upoštevajte tudi plavajočo vrstico Tracy v spodnjem desnem kotu, ki vas obvešča o pomembnih podatkih v času izvajanja.

[* qs-tracybar.webp .{url:-} *]

V produkcijskem načinu je Tracy seveda onemogočen in ne razkriva nobenih občutljivih informacij. Namesto tega se vse napake shranijo v imenik `log/`. Preizkusite ga. V naslovu `app/Bootstrap.php` poiščite naslednji del kode, odkomentirajte vrstico in spremenite parameter klica metode v `false`, tako da bo videti takole:

```php .{file:app/Bootstrap.php}
...
$configurator->setDebugMode(false);
$configurator->enableTracy(__DIR__ . '/../log');
...
```

Po osvežitvi spletne strani bo stran z rdečim zaslonom zamenjalo uporabniku prijazno sporočilo:

[* qs-fatal.webp .{url:-}(error screen) *]

Zdaj poglejte v imenik `log/`. Tam boste našli dnevnik napak (v datoteki exception.log) in tudi stran s sporočilom o napaki (shranjeno v datoteki HTML z imenom, ki se začne s `exception`).

Ponovno komentirajte vrstico `// $configurator->setDebugMode(false);`. Tracy samodejno omogoči razvojni način v okolju `localhost` in ga drugje onemogoči.

Zdaj lahko odpravimo napako in nadaljujemo z načrtovanjem naše aplikacije.


Pošljite zahvalo .[#toc-send-thanks]
====================================

Pokazali vam bomo trik, ki bo razveselil avtorje odprte kode. Knjižnicam, ki jih uporablja vaš projekt, lahko na GitHubu preprosto dodate zvezdico. Preprosto zaženite:

```shell
composer thanks
```

Preizkusite!

{{priority: -1}}
{{sitename: Nette Quickstart}}
