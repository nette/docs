Data a čas
**********

.[perex]
[api:Nette\Utils\DateTime] jest třída, która rozszyfrowuje natywną [php:DateTime] o dalszą funkce.

Instalace:

```shell
composer require nette/utils
```

Všechny příklady předpokládají vytvořený alias:

```php
use Nette\Utils\DateTime;
```


static from(string|int|\DateTimeInterface $time): DateTime .[method]
--------------------------------------------------------------------
Wyświetlenie obiektu DateTime z řetězce, UNIX timestamp lub innego obiektu [php:DateTimeInterface]. Wyświetlenie obiektu `Exception`, pokud datum a čas není platný.

```php
DateTime::from(1138013640); // vytvoří DateTime z UNIX timestamp s výchozí timezone
DateTime::from(42); // vytvoří DateTime z aktuálního času plus 42 sekund
DateTime::from('1994-02-26 04:15:32'); // vytvoří DateTime podle řetězce
DateTime::from('1994-02-26'); // vytvoří DateTime podle data, čas bude 00:00:00
```


static fromParts(int $year, int $month, int $day, int $hour=0, int $minute=0, float $second=0.0): DateTime .[method]
--------------------------------------------------------------------------------------------------------------------
Wyświetlenie obiektu DateTime lub jego nazwy `Nette\InvalidArgumentException`, w którym znajdują się dane i informacje.
```php
DateTime::fromParts(1994, 2, 26, 4, 15, 32);
```


static createFromFormat(string $format, string $time, string|\DateTimeZone $timezone=null): DateTime|false .[method]
--------------------------------------------------------------------------------------------------------------------
Rozšiřuje [DateTime::createFromFormat() |https://www.php.net/manual/en/datetime.createfromformat.php] o možnost zadatku timezone jako řetězec.
```php
DateTime::createFromFormat('d.m.Y', '26.02.1994', 'Europe/London');
```


modifyClone(string $modify=''): static .[method]
------------------------------------------------
Vytvoří kopii s upraveným časem.
```php
$original = DateTime::from('2017-02-03');
$clone = $original->modifyClone('+1 day');
$original->format('Y-m-d'); // '2017-02-03'
$clone->format('Y-m-d');    // '2017-02-04'
```


__toString(): string .[method]
------------------------------
Vrací datum a čas ve formátu `Y-m-d H:i:s`.
```php
echo $dateTime; // '2017-02-03 04:15:32'
```


implementuje JsonSerializable .[#toc-implements-jsonserializable]
-----------------------------------------------------------------
Vrací datum a čas ve formátu ISO 8601, který je používán třeba v JavaScriptu.
```php
$date = DateTime::from('2017-02-03');
echo json_encode($date);
```
