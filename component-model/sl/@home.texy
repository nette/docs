Model komponente
****************

.[perex]
Pomemben koncept v Nette je komponenta. [Vizualne interaktivne komponente |application:components] vstavljamo v strani, obrazci ali vsi njihovi elementi so prav tako komponente. Obstajata dva osnovna razreda, od katerih dedujejo vse te komponente, ki sta del paketa `nette/component-model` in sta odgovorna za ustvarjanje drevesne hierarhije komponent.


Komponenta .[#toc-component]
============================
[api:Nette\ComponentModel\Component] je skupni prednik vseh komponent. Vsebuje metodo `getName()`, ki vrača ime komponente, in metodo `getParent()`, ki vrača njenega starša. Oba lahko nastavite z metodo `setParent()` - prvi parameter je starš, drugi pa ime komponente.


lookup(string $type): ?Component .[method]
------------------------------------------
V hierarhiji poišče objekt želenega razreda ali vmesnika. Na primer, `$component->lookup(Nette\Application\UI\Presenter::class)` vrne presenter, če je komponenta kljub več ravnem povezana z njim.


lookupPath(string $type): ?string .[method]
-------------------------------------------
Vrne tako imenovano pot, ki je niz, sestavljen z združitvijo imen vseh komponent na poti med trenutno komponento in iskano komponento. Tako na primer `$component->lookupPath(Nette\Application\UI\Presenter::class)` vrne enolični identifikator komponente glede na predvajalnik.


Kontejner .[#toc-container]
===========================
[api:Nette\ComponentModel\Container] je nadrejena komponenta, tj. komponenta, ki vsebuje otroke in tako tvori drevesno strukturo. Ima metode za enostavno dodajanje, iskanje in odstranjevanje komponent. Je prednik na primer obrazca ali razredov `Control` in `Presenter`.


getComponent(string $name): ?Component .[method]
------------------------------------------------
Vrne komponento. Poskus klica nedefiniranega otroka povzroči klic tovarne [createComponent($name |api:Nette\ComponentModel\Container::createComponent()]). Metoda `createComponent($name)` prikliče metodo `createComponent<component name>` v trenutni komponenti in ji kot parameter posreduje ime komponente. Ustvarjena komponenta se nato posreduje trenutni komponenti kot njen otrok. Te tovarne komponent imenujemo tovarne komponent, ki jih lahko implementiramo v razredih, podedovanih iz `Container`.


Iteriranje nad otroki .[#toc-iterating-over-children]
-----------------------------------------------------

Metoda [getComponents($deep = false, $type = null |api:Nette\ComponentModel\Container::getComponents()] ) se uporablja za iteracijo. Prvi parameter določa, ali naj se komponente preletijo po globini (ali rekurzivno). Pri `true` se ne iterira le po vseh njegovih otrocih, temveč tudi po vseh otrocih njegovih otrok itd. Drugi parameter služi kot izbirni filter po razredu ali vmesniku.

```php
foreach ($form->getComponents(true, Nette\Forms\IControl::class) as $control) {
	if (!$control->getRules()->validate()) {
		// ...
	}
}
```


Spremljanje prednikov .[#toc-monitoring-of-ancestors]
=====================================================

Model komponent Nette omogoča zelo dinamično delo z drevesom (komponente lahko odstranjujemo, premikamo, dodajamo), zato bi bilo napačno, če bi se zanašali na to, da so po ustvarjanju komponente takoj (v konstruktorju) znani starši, starši staršev itd. Običajno starš ob ustvarjanju komponente sploh ni znan.

Kako ugotoviti, kdaj je bila komponenta dodana v drevo predstavitve? Spremljanje spremembe starša ni dovolj, saj bi bil lahko na primer starš starša priložen predstavniku. V pomoč je lahko metoda [monitor($type, $attached, $detached) |api:Nette\ComponentModel\Component::monitor()]. Vsaka komponenta lahko spremlja poljubno število razredov in vmesnikov. Priključitev ali odklop se najavi s klicem povratnih klicev `$attached` oziroma `$detached`, pri čemer se posreduje objekt spremljanega razreda.

Primer: Razred `UploadControl`, ki predstavlja element obrazca za nalaganje datotek v Nette Forms, mora nastaviti atribut obrazca `enctype` na vrednost `multipart/form-data`. Toda v času ustvarjanja objekta mu ni treba biti priključen na noben obrazec. Kdaj spremeniti obrazec? Rešitev je preprosta - v konstruktorju ustvarimo zahtevo za spremljanje:

```php
class UploadControl extends Nette\Forms\Controls\BaseControl
{
	public function __construct($label)
	{
		$this->monitor(Nette\Forms\Form::class, function ($form): void {
			$form->setHtmlAttribute('enctype', 'multipart/form-data');
		});
		// ...
	}

	// ...
}
```

in ko je obrazec na voljo, se pokliče povratni klic. (Prej smo namesto tega uporabljali običajni metodi `attached` in `detached`.)


{{leftbar: nette:@menu-topics}}
