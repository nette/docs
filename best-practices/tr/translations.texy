Form ve Şablonların Çevirisi
****************************

.[perex]
Çok dilli uygulama oluştururken, muhtemelen aynı sayfayı veya formu çeşitli dillerde oluşturmanız gerekecektir.

Nette Framework bu amaçla tek bir metodu olan [api:Nette\Localization\Translator] çeviri arayüzünü tanımlar `translate()`. Genellikle bir dize olan bir `$message` ve diğer parametreleri alır. Görevi çevrilmiş dizeyi döndürmektir.

Nette'de varsayılan bir uygulama yoktur, ihtiyaçlarınıza göre [Componette'de |https://componette.org/search/localization] bulacağınız birkaç hazır çözüm arasından seçim yapabilirsiniz. Çevirmenin nasıl yapılandırılacağını öğrenmek için belgelerine bakın.

Daha sonra [bağımlılık enjeksiyonu |dependency-injection:passing-dependencies] kullanarak kodunuzda çevirmen alabilirsiniz.


Form Çevirisi .[#toc-form-translation]
--------------------------------------

[Formlar |forms:], bir çevirmen aracılığıyla metin yazdırmayı destekler. Bunu `setTranslator()` yöntemini kullanarak ayarlarsınız:

```php
$form->setTranslator($translator);
```

Bu noktadan sonra, tüm etiketler ve aynı zamanda tüm hata mesajları veya seçim kutusu öğeleri başka bir dile çevrilir.

Bireysel form kontrolleri için, `null` değerini kullanarak başka bir çevirmen ayarlamak veya çeviriyi tamamen kapatmak hala mümkündür:

```php
$form->addSelect('carModel', 'Model:', $cars)
	->setTranslator(null);
```

[Doğrulama kuralları |forms:validation] için, örneğin kural gibi belirli parametreler de çevirmene aktarılır:

```php
$form->addPassword('password', 'Password:')
	->addCondition($form::MinLength, 'Password must be at least %d characters long', 8);
```

çevirmen aşağıdaki parametrelerle çağrılır:

```php
$translator->translate('Password must be at least %d characters long', 8);
```

ve böylece sayıya göre `characters` kelimesinin doğru çoğul halini seçebilir.


Şablon Çevirisi .[#toc-template-translation]
--------------------------------------------

[Latte |latte:] şablonlarında, `setTranslator()` yöntemini kullanarak çevirmen ekleyebilirsiniz:

```php
protected function beforeRender(): void
{
	// ...
	$this->template->setTranslator($translator);
}
```

Daha sonra çevirmen `|translate` filtresi olarak kullanılabilir:

```latte
<a href="basket">{='Basket'|translate}</a>
<span>{$item|translate}</span>
```

Ayrıca bir alt çizgi etiketi de vardır:

```latte
<a href="basket">{_'Basket'}</a>
<span>{_$item}</span>
```

Şablonun bölümlerini çevirmek için bir `{translate}` pair etiketi vardır (Latte 2.11'den beri, daha önce `{_}` etiketi kullanılıyordu):

```latte
<a href="order">{translate}Order{/translate}</a>
```

{{priority: -1}}
{{sitename: En İyi Uygulamalar}}
