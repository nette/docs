Dokumentation schreiben
***********************

.[perex]
Die Mitarbeit an der Dokumentation ist eine der wertvollsten Aktivitäten, da sie anderen hilft, den Rahmen zu verstehen.


Wie schreibt man? .[#toc-how-to-write]
--------------------------------------

Die Dokumentation richtet sich in erster Linie an Personen, die mit dem Thema noch nicht vertraut sind. Daher sollte sie mehrere wichtige Punkte erfüllen:

- Beginnen Sie mit einfachen und allgemeinen Themen. Gehen Sie am Ende zu fortgeschritteneren Themen über
- Versuchen Sie, das Thema so klar wie möglich zu erklären. Versuchen Sie zum Beispiel, das Thema zuerst einem Kollegen zu erklären.
- Geben Sie nur die Informationen, die der Benutzer für ein bestimmtes Thema tatsächlich benötigt
- Stellen Sie sicher, dass Ihre Informationen korrekt sind. Testen Sie jeden Code
- Seien Sie prägnant - kürzen Sie, was Sie schreiben, um die Hälfte. Und dann können Sie es gerne wiederholen
- Verwenden Sie Hervorhebungen sparsam, von fetten Schriftarten bis hin zu Rahmen wie `.[note]`
- Befolgen Sie den [Kodierungsstandard |Coding Standard] im Code

Lernen Sie auch die [Syntax |syntax]. Für eine Vorschau des Artikels während des Schreibens, können Sie die [Vorschau-Editor |https://editor.nette.org/] verwenden.


Sprachmutationen .[#toc-language-mutations]
-------------------------------------------

Englisch ist die Hauptsprache, daher sollten Ihre Änderungen auf Englisch erfolgen. Wenn Englisch nicht Ihre Stärke ist, verwenden Sie [DeepL Translator |https://www.deepl.com/translator] und andere werden Ihren Text überprüfen.

Die Übersetzung in andere Sprachen erfolgt automatisch nach der Genehmigung und Feinabstimmung Ihrer Bearbeitung.


Triviale Bearbeitungen .[#toc-trivial-edits]
--------------------------------------------

Um zur Dokumentation beizutragen, müssen Sie ein Konto auf [GitHub |https://github.com] haben.

Der einfachste Weg, eine kleine Änderung an der Dokumentation vorzunehmen, ist die Verwendung der Links am Ende jeder Seite:

- *Auf GitHub anzeigen* öffnet die Quellversion der Seite auf GitHub. Klicken Sie dann einfach auf die Schaltfläche `E` und Sie können mit der Bearbeitung beginnen (Sie müssen bei GitHub angemeldet sein)
- *Vorschau öffnen* öffnet einen Editor, in dem Sie sofort die endgültige visuelle Form sehen können

Da der [Vorschau-Editor |https://editor.nette.org/] nicht die Möglichkeit bietet, Änderungen direkt auf GitHub zu speichern, müssen Sie den Quelltext in die Zwischenablage kopieren (mit der Schaltfläche *In die Zwischenablage kopieren*) und dann in den Editor auf GitHub einfügen.
Unterhalb des Bearbeitungsfeldes befindet sich ein Formular zum Einreichen. Vergessen Sie hier nicht, den Grund für Ihre Bearbeitung kurz zusammenzufassen und zu erläutern. Nach dem Einreichen wird ein sogenannter Pull Request (PR) erstellt, der weiter bearbeitet werden kann.


Größere Bearbeitungen .[#toc-larger-edits]
------------------------------------------

Anstatt die GitHub-Schnittstelle zu verwenden, ist es besser, die Grundlagen der Arbeit mit dem Versionskontrollsystem Git zu kennen. Wenn Sie mit Git nicht vertraut sind, können Sie sich die Kurzanleitung ansehen: [git - the simple guide |https://rogerdudler.github.io/git-guide/], oder Sie verwenden eines der vielen grafischen Tools: [GIT - GUI-Clients |https://git-scm.com/downloads/guis].

Bearbeiten Sie die Dokumentation, indem Sie einen Fork des [nette/docs-Repositorys |https://github.com/nette/docs] erstellen und es auf Ihren Computer klonen. Nehmen Sie dann im entsprechenden Zweig Änderungen vor, übertragen Sie die Änderungen, pushen Sie Ihren Fork auf GitHub und senden Sie dann einen Pull Request (PR) an das Original-Repository `nette/docs`.

Vor jedem Pull-Request ist es eine gute Idee, den [Code-Checker |code-checker:] laufen zu lassen, der den Text auf zusätzliche Leerzeichen überprüft.

Sie können weitere Änderungen an einem einmal erstellten Pull-Request vornehmen. Erstellen Sie niemals einen neuen Pull Request nur für eine Änderung.


Struktur der Dokumentation .[#toc-documentation-structure]
----------------------------------------------------------

Die gesamte Dokumentation befindet sich auf GitHub im Repository [nette/docs |https://github.com/nette/docs]. Die aktuelle Version befindet sich im Master-Zweig, während ältere Versionen in Zweigen wie `doc-3.x`, `doc-2.x` zu finden sind.

Der Inhalt jedes Zweigs ist in Hauptordner unterteilt, die einzelne Bereiche der Dokumentation repräsentieren. So entspricht beispielsweise `application/` dem Ordner https://doc.nette.org/en/application, `latte/` dem Ordner https://latte.nette.org, usw. Jeder dieser Ordner enthält Unterordner für Sprachmutationen (`cs`, `en`, ...) und optional einen Unterordner `files` mit Bildern, die in die Seiten der Dokumentation eingefügt werden können.
