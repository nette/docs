エディタとツール
********

.[perex]
あなたは熟練したプログラマかもしれませんが、優れたツールがあってこそマスターになれます。この章では、重要なツール、エディタ、プラグインのヒントを紹介します。


IDEエディタ
=======

開発には、PhpStorm、NetBeans、VS Codeなどの本格的なIDEを使用することを強くお勧めします。単なるPHPサポート付きのテキストエディタだけではありません。違いは本当に決定的です。構文を色付けできるだけの単なるエディタで満足する理由はありません。それは、正確なヒントを提供し、エラーを監視し、コードをリファクタリングし、その他多くのことができるトップクラスのIDEの能力には及びません。一部のIDEは有料ですが、無料のものもあります。

**NetBeans IDE** は、Nette、Latte、NEONのサポートを組み込みで持っています。

**PhpStorm**: `Settings > Plugins > Marketplace` でこれらのプラグインをインストールしてください
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: マーケットプレイスで "Nette Latte + Neon" プラグインを見つけてください。

また、Tracyをエディタと連携させてください。エラーページが表示されたときに、ファイル名をクリックすると、エディタで該当する行にカーソルがある状態で開くことができます。[システムの設定方法|tracy:open-files-in-ide] を読んでください。


PHPStan
=======

PHPStanは、コードを実行する前に論理エラーを検出するツールです。

Composerを使用してインストールします：

```shell
composer require --dev phpstan/phpstan-nette
```

プロジェクトに設定ファイル `phpstan.neon` を作成します：

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

そして、`app/` フォルダ内のクラスを分析させます：

```shell
vendor/bin/phpstan analyse app
```

包括的なドキュメントは、[PHPStanのサイト |https://phpstan.org] で直接見つけることができます。


Code Checker
============

[Code Checker|code-checker:] は、ソースコード内の一部の形式的なエラーをチェックし、場合によっては修正します：

- [BOM |nette:glossary#BOM] を削除します
- [Latte |latte:] テンプレートの有効性をチェックします
- `.neon`、`.php`、`.json` ファイルの有効性をチェックします
- [制御文字 |nette:glossary#制御文字] の出現をチェックします
- ファイルがUTF-8でエンコードされているかチェックします
- 誤って書かれた `/* @anotace */` （アスタリスクが欠けている）をチェックします
- PHPファイルの終了タグ `?>` を削除します
- ファイルの末尾にある右側のスペースや不要な行を削除します
- `-l` オプションを指定した場合、行区切り文字をシステムのものに正規化します


Composer
========

[Composer |best-practices:composer] はPHPの依存関係管理ツールです。これにより、個々のライブラリの任意の複雑な依存関係を宣言し、それらをプロジェクトにインストールすることができます。


Requirements Checker
====================

これは、サーバーの実行環境をテストし、フレームワークを使用できるかどうか（およびどの程度まで）を通知するツールでした。現在、Netteは最小限必要なPHPバージョンを持つすべてのサーバーで使用できます。
