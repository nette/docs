Проверка на кода
****************

.[perex]
Инструмент, наречен [Code Checker |https://github.com/nette/code-checker], проверява и, ако е възможно, поправя някои формални грешки в изходния ви код.


Инсталация
==========

Code Checker трябва да бъде инсталиран като проект, не го използвайте като зависимост.

```shell
composer create-project nette/code-checker
```

Или го инсталирайте глобално чрез:

```shell
composer global require nette/code-checker
```

и се уверете, че глобалната директория с двоични файлове на доставчика е в [променливата на средата `$PATH`. |https://getcomposer.org/doc/03-cli.md#global]


Използване на
=============

```
Usage: php code-checker [options]

Options:
	-d <path>             Folder or file to scan (default: current directory)
	-i | --ignore <mask>  Files to ignore
	-f | --fix            Fixes files
	-l | --eol            Convert newline characters
	--no-progress         Do not show progress dots
	--strict-types        Checks whether PHP 7.0 directive strict_types is enabled
```

Без параметри проверява текущата работна директория в режим само за четене, а с параметъра `-f` фиксира файловете.

Не забравяйте да направите резервно копие на файловете си, преди да се запознаете с този инструмент.

Можете да създадете пакетен файл, например `code.bat`, за да стартирате Code-Checker под Windows по-лесно:

```shell
php path_to\Nette_tools\Code-Checker\code-checker %*
```


Какво прави Code-Checker?
=========================

- премахва [BOM |nette:glossary#bom].
- Проверява валидността на шаблоните [Latte |latte:].
- Проверява валидността на `.neon`, `.php` и `.json`.
- проверява за наличието на [контролни знаци |nette:glossary#Control-Characters].
- проверява дали файлът е кодиран в UTF-8.
- проверява дали `/* @annotations */` е изписан правилно (липсва втората звездичка)
- премахва таговете за край на PHP `?>` в PHP файлове
- премахва белите полета и ненужните празни редове от края на файла
- нормализира окончанията на редовете до системните по подразбиране (с `-l`)

{{leftbar: www:@menu-common}}
