Pisanie dokumentacji
********************

.[perex]
Wkład w dokumentację jest jednym z najbardziej wartościowych działań, ponieważ pomaga innym zrozumieć framework.


Jak pisać? .[#toc-how-to-write]
-------------------------------

Dokumentacja jest przeznaczona przede wszystkim dla osób, które są nowe w temacie. Dlatego powinna spełniać kilka ważnych punktów:

- Zacznij od prostych i ogólnych tematów. Przejdź do bardziej zaawansowanych tematów na końcu
- Staraj się wyjaśnić temat tak jasno, jak to możliwe. Na przykład, spróbuj najpierw wytłumaczyć temat koledze.
- Podawaj tylko te informacje, które użytkownik rzeczywiście musi znać dla danego tematu
- Upewnij się, że informacje są dokładne. Testuj każdy kod
- Bądź zwięzły - skróć to, co piszesz o połowę. A potem nie krępuj się zrobić tego ponownie
- Oszczędnie używaj wyróżnień, od pogrubionych czcionek po ramki typu `.[note]`
- Stosuj się do [Standardów Kodowania |Coding Standard] w kodzie

Ucz się również [składni |syntax]. Aby uzyskać podgląd artykułu podczas pisania, możesz użyć [edytora |https://editor.nette.org/] podglądu.


Mutacje językowe .[#toc-language-mutations]
-------------------------------------------

Angielski jest językiem podstawowym, więc twoje zmiany powinny być w języku angielskim. Jeśli angielski nie jest twoją mocną stroną, użyj [DeepL Translator |https://www.deepl.com/translator] i inni sprawdzą twój tekst.

Tłumaczenie na inne języki zostanie wykonane automatycznie po zatwierdzeniu i dopracowaniu twojej edycji.


Trywialne edycje .[#toc-trivial-edits]
--------------------------------------

Aby wnieść swój wkład w dokumentację, musisz mieć konto na [GitHubie |https://github.com].

Najłatwiejszym sposobem na dokonanie niewielkiej zmiany w dokumentacji jest użycie linków na końcu każdej strony:

- *Show on GitHub* otwiera wersję źródłową strony na GitHubie. Następnie wystarczy nacisnąć przycisk `E` i można rozpocząć edycję (trzeba być zalogowanym na GitHubie)
- *Open preview* otwiera edytor, w którym można od razu zobaczyć ostateczną formę wizualną

Ponieważ [edytor |https://editor.nette.org/] podglądu nie ma możliwości zapisywania zmian bezpośrednio na GitHubie, należy skopiować tekst źródłowy do schowka (za pomocą przycisku *Copy to clipboard*), a następnie wkleić go do edytora na GitHubie.
Poniżej pola edycyjnego znajduje się formularz do przesłania. Tutaj nie zapomnij krótko podsumować i wyjaśnić powodu swojej edycji. Po przesłaniu tworzony jest tzw. pull request (PR), który można dalej edytować.


Większe edycje .[#toc-larger-edits]
-----------------------------------

Zamiast korzystać z interfejsu GitHub, bardziej odpowiednia jest znajomość podstaw pracy z systemem kontroli wersji Git. Jeśli nie jesteś zaznajomiony z Gitem, możesz sprawdzić szybki przewodnik: [git - the simple |https://rogerdudler.github.io/git-guide/] guide, lub użyć jednego z wielu narzędzi graficznych: [GIT - klienci GUI |https://git-scm.com/downloads/guis].

Edytuj dokumentację, tworząc fork repozytorium [nette/docs |https://github.com/nette/docs] i klonując go na swój komputer. Następnie w odpowiedniej gałęzi dokonaj zmian, popełnij zmianę, popchnij do swojego forka na GitHubie, a następnie wyślij pull request (PR) do oryginalnego repozytorium `nette/docs`.

Przed każdym pull requestem warto uruchomić [Code-Checker |code-checker:], który sprawdza, czy w tekście nie ma dodatkowych spacji.

Po utworzeniu pull requesta możesz wprowadzać do niego kolejne zmiany. Nigdy nie twórz nowego pull requesta tylko po to, by dokonać edycji.


Struktura dokumentacji .[#toc-documentation-structure]
------------------------------------------------------

Cała dokumentacja znajduje się na GitHubie w repozytorium [nette/docs |https://github.com/nette/docs]. Aktualna wersja znajduje się w gałęzi master, natomiast starsze wersje znajdują się w gałęziach takich jak `doc-3.x`, `doc-2.x`.

Zawartość każdej gałęzi podzielona jest na główne foldery reprezentujące poszczególne obszary dokumentacji. Na przykład `application/` odpowiada https://doc.nette.org/en/application, `latte/` odpowiada https://latte.nette.org, itd. Każdy z tych folderów zawiera podfoldery reprezentujące mutacje językowe (`cs`, `en`, ...) oraz opcjonalnie podfolder `files` z obrazkami, które można wstawić na strony w dokumentacji.
