Yardımcı Fonksiyonlar
*********************

.[perex]
[api:Nette\Utils\Helpers], yararlı fonksiyonlar içeren statik bir sınıftır.


Kurulum:

```shell
composer require nette/utils
```

Tüm örnekler, oluşturulmuş bir takma ad varsayar:

```php
use Nette\Utils\Helpers;
```


capture(callable $cb): string .[method]
---------------------------------------

Geri aramayı yürütür ve yakalanan çıktıyı bir karakter dizisi olarak döndürür.

```php
$res = Helpers::capture(function () use ($template) {
	$template->render();
});
```


clamp(int|float $value, int|float $min, int|float $max): int|float .[method]
----------------------------------------------------------------------------

Değeri belirtilen kapsayıcı min ve max aralığına sınırlar.

```php
Helpers::clamp($level, 0, 255);
```


compare(mixed $left, string $operator, mixed $right): bool .[method]
--------------------------------------------------------------------

İki değeri PHP'nin yaptığı gibi karşılaştırır. `>`, `>=`, `<`, `<=`, `=`, `==`, `===`, `!=`, `!==`, `<>` operatörlerini ayırt eder.
Fonksiyon, operatörün değişken olduğu durumlarda kullanışlıdır.

```php
Helpers::compare(10, '<', 20); // true
```


falseToNull(mixed $value): mixed .[method]
------------------------------------------

`false` değerini `null`'a dönüştürür, diğer değerleri değiştirmez.

```php
Helpers::falseToNull(false); // null
Helpers::falseToNull(123);   // 123
```


getLastError(): string .[method]
--------------------------------

PHP'deki son hatayı veya hiç hata oluşmadıysa boş bir karakter dizisi döndürür. `error_get_last()`'ın aksine, PHP yönergesi `html_errors`'dan etkilenmez ve her zaman HTML değil, metin döndürür.

```php
Helpers::getLastError();
```


getSuggestion(string[] $possibilities, string $value): ?string .[method]
------------------------------------------------------------------------

Sunulan `$possibilities` seçenekleri arasından `$value`'ya en çok benzeyen, ancak aynı olmayan karakter dizisini arar. Yalnızca 8 bit kodlamayı destekler.

Belirli bir seçeneğin geçerli olmadığı ve kullanıcıya benzer bir seçenek önermek istediğimiz durumlarda kullanışlıdır (ancak farklı, bu nedenle aynı karakter dizisi göz ardı edilir). Nette bu şekilde `did you mean ...?` mesajlarını oluşturur.

```php
$items = ['foo', 'bar', 'baz'];
Helpers::getSuggestion($items, 'fo');   // 'foo'
Helpers::getSuggestion($items, 'barr'); // 'bar'
Helpers::getSuggestion($items, 'baz');  // 'bar', 'baz' değil
```
