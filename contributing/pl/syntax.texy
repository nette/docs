Składnia dokumentacji
*********************

Dokumentacja używa składni Markdown & [składni Texy |https://texy.info/cs/syntax] z niektórymi rozszerzeniami.


Linki
=====

Do linków wewnętrznych używa się zapisu w nawiasach kwadratowych `[link |odkaz]`. I to albo w postaci z pionową kreską `[tekst linku |cíl odkazu]`, albo skróconej `[tekst linku |text odkazu]`, jeśli cel jest zgodny z tekstem (po transformacji na małe litery i myślniki):

- `[Page name |Page name]` -> `<a href="/en/page-name">Page name</a>`
- `[tekst linku |Page name]` -> `<a href="/en/page-name">link text</a>`

Możemy linkować do innej wersji językowej lub do innej sekcji. Sekcją rozumie się bibliotekę Nette (np. `forms`, `latte`, itp.) lub specjalne sekcje jak `best-practices`, `quickstart` itd.:

- `[cs:Page name |cs:Page name]` -> `<a href="/cs/page-name">Page name</a>` (ta sama sekcja, inny język)
- `[tracy:Page name |tracy:Page name]` -> `<a href="//tracy.nette.org/en/page-name">Page name</a>` (inna sekcja, ten sam język)
- `[tracy:cs:Page name |tracy:cs:Page name]` -> `<a href="//tracy.nette.org/cs/page-name">Page name</a>` (inna sekcja i język)

Za pomocą `#` można również celować w konkretny nagłówek na stronie.

- `[#Heading |#Heading]` -> `<a href="#toc-heading">Heading</a>` (nagłówek na bieżącej stronie)
- `[Page name#Heading |Page name#Heading]` -> `<a href="/en/page-name#toc-heading">Page name</a>`

Link do strony głównej sekcji: (`@home` to specjalne wyrażenie dla strony głównej sekcji)

- `[tekst linku |@home]` -> `<a href="/en/">link text</a>`
- `[tekst linku |tracy:]` -> `<a href="//tracy.nette.org/en/">link text</a>`


Linki do dokumentacji API
-------------------------

Zawsze podawaj tylko za pomocą tego zapisu:

- `[api:Nette\SmartObject]` -> [api:Nette\SmartObject]
- `[api:Nette\Forms\Form::setTranslator()]` -> [api:Nette\Forms\Form::setTranslator()]
- `[api:Nette\Forms\Form::$onSubmit]` -> [api:Nette\Forms\Form::$onSubmit]
- `[api:Nette\Forms\Form::Required]` -> [api:Nette\Forms\Form::Required]

Pełne kwalifikowane nazwy używaj tylko przy pierwszej wzmiance. Do kolejnych linków użyj uproszczonej nazwy:

- `[Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]` -> [Form::setTranslator() |api:Nette\Forms\Form::setTranslator()]


Linki do dokumentacji PHP
-------------------------

- `[php:substr]` -> [php:substr]


Kod źródłowy
============

Blok kodu zaczyna się od <code>&#96;&#96;&#96;lang</code> i kończy <code>&#96;&#96;&#96;</code>. Obsługiwane języki to `php`, `latte`, `neon`, `html`, `css`, `js` i `sql`. Do wcięć zawsze używaj tabulatorów.

```
 ```php
	public function renderPage($id)
	{
	}
 ```
```

Możesz również podać nazwę pliku jako <code>&#96;&#96;&#96;php .{file: ArrayTest.php}</code>, a blok kodu zostanie wyrenderowany w ten sposób:

```php .{file: ArrayTest.php}
public function renderPage($id)
{
}
```


Nagłówki
========

Najwyższy nagłówek (czyli tytuł strony) podkreśl gwiazdkami. Do oddzielenia sekcji używaj znaków równości. Nagłówki podkreślaj znakami równości, a następnie myślnikami:

```
Aplikacje MVC i presentery
**************************
...


Tworzenie linków
================
...


Linki w szablonach
------------------
...
```


Ramki i style
=============

Perex oznaczamy klasą `.[perex]` .[perex]

Notatkę oznaczamy klasą `.[note]` .[note]

Wskazówkę oznaczamy klasą `.[tip]` .[tip]

Ostrzeżenie oznaczamy klasą `.[caution]` .[caution]

Mocniejsze ostrzeżenie oznaczamy klasą `.[warning]` .[warning]

Numer wersji `.{data-version:2.4.10}` .{data-version:2.4.10}

Klasy zapisuj przed linią:

```
.[perex]
To jest perex.
```

Proszę pamiętać, że ramki takie jak `.[tip]` "przyciągają" wzrok, dlatego używa się ich do podkreślenia, a nie do mniej istotnych informacji. Dlatego ich użyciem maksymalnie oszczędzaj.


Spis treści
===========

Spis treści (linki w prawym menu) jest automatycznie generowany dla wszystkich stron, których rozmiar przekroczy 4 000 bajtów, przy czym to domyślne zachowanie można zmodyfikować za pomocą [#znaczniki meta] `{{toc}}`. Tekst tworzący spis treści jest standardowo brany bezpośrednio z tekstu nagłówków, ale za pomocą modyfikatora `.{toc}` można wyświetlić w spisie treści inny tekst, co przydaje się głównie przy dłuższych nagłówkach.

```


Długi i inteligentny nagłówek .{toc: Dowolny inny tekst wyświetlany w spisie treści}
====================================================================================
```


Znaczniki meta
==============

- ustawienie własnego tytułu strony (w `<title>` i nawigacji okruszkowej) `{{title: Inny tytuł}}`
- przekierowanie `{{redirect: pla:cs}}` - zobacz [#linki]
- wymuszenie `{{toc}}` lub zakazanie `{{toc: no}}` automatycznego spisu treści (ramka z linkami do poszczególnych nagłówków)

{{priority: -1}}
