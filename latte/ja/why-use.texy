なぜテンプレートを使用するのですか？
******************


なぜPHPでテンプレートエンジンを使用する必要があるのですか？
-------------------------------

PHP自体がテンプレート言語であるのに、なぜPHPでテンプレートエンジンを使用するのですか？

まず、興味深い紆余曲折に満ちたこの言語の歴史を簡単に振り返ってみましょう。HTMLページを生成するために使用された最初のプログラミング言語の1つはC言語でした。しかし、すぐにこの目的での使用は非現実的であることが判明しました。そこでRasmus LerdorfはPHPを作成し、バックエンドでC言語を使用して動的HTMLを簡単に生成できるようにしました。したがって、PHPは元々テンプレート言語として設計されましたが、時間の経過とともに他の機能を取得し、本格的なプログラミング言語になりました。

それでも、テンプレート言語としても機能します。PHPファイルには、`<?= $foo ?>` などを使用して変数を出力するHTMLページを記述できます。

PHPの歴史の初期に、Smartyテンプレートエンジンが登場しました。その目的は、外観（HTML/CSS）をアプリケーションロジックから厳密に分離することでした。つまり、開発者がテンプレートからデータベースクエリを実行できないようにするなど、意図的にPHP自体よりも制限された言語を提供しました。一方で、プロジェクトに追加の依存関係をもたらし、複雑さを増し、プログラマーは新しいSmarty言語を学ぶ必要がありました。そのような利点は議論の余地があり、テンプレートには引き続きプレーンなPHPが使用されました。

時間の経過とともに、テンプレートエンジンは役立つようになりました。[継承 |template-inheritance]、[サンドボックスモード |sandbox]、およびその他の多くの機能の概念を導入し、プレーンPHPと比較してテンプレート作成を大幅に簡素化しました。セキュリティのトピック、[XSSのような脆弱性 |safety-first]の存在、および[エスケープ |#Co je to escapování]の必要性が前面に出てきました。テンプレートエンジンは自動エスケープを導入し、プログラマーがそれを忘れて重大なセキュリティホールが発生するリスクを排除しました（これにはいくつかの落とし穴があることをすぐに示します）。

今日、テンプレートエンジンの利点は、その導入に関連するコストを大幅に上回っています。したがって、それらを使用することは理にかなっています。


なぜLatteはTwigやBladeよりも優れているのですか？
-------------------------------

いくつかの理由があります – いくつかは快適で、その他は根本的に役立ちます。Latteは快適さと有用性を兼ね備えています。

*まず快適な点：* Latteは[PHPと同じ構文 |syntax#Latte rozumí PHP]を持っています。タグの表記法だけが異なり、`<?=` と `?>` の代わりに、より短い `{` と `}` を好みます。これは、新しい言語を学ぶ必要がないことを意味します。トレーニングコストは最小限です。そして最も重要なことは、開発中にPHP言語とテンプレート言語の間で常に「切り替える」必要がないことです。なぜなら、両方とも同じだからです。Python言語を使用するTwigテンプレートとは対照的に、プログラマーは2つの異なる言語を切り替える必要があります。

*そして今、非常に役立つ理由*：Twig、Blade、Smartyなどのすべてのテンプレートエンジンは、進化の過程で自動[エスケープ |#Co je to escapování]の形でXSSに対する保護を導入しました。より正確には、`htmlspecialchars()` 関数の自動呼び出しです。しかし、Latteの作成者は、これがまったく正しい解決策ではないことに気づきました。なぜなら、ドキュメントのさまざまな場所で、さまざまな方法でエスケープする必要があるからです。単純な自動エスケープは、誤った安心感を生み出すため、危険な機能です。

自動エスケープが機能的で信頼できるものになるためには、データがドキュメントのどの場所に出力されるか（これらをコンテキストと呼びます）を認識し、それに応じてエスケープ関数を選択する必要があります。つまり、[コンテキスト認識型 |safety-first#Kontextově sensitivní escapování]である必要があります。そして、これこそがLatteができることです。HTMLを理解しています。テンプレートを単なる文字列として認識するのではなく、タグ、属性などが何であるかを理解しています。そのため、HTMLテキスト内、HTMLタグ内、JavaScript内などで異なる方法でエスケープします。

Latteは、コンテキスト認識型エスケープを備えたPHPで最初で唯一のテンプレートエンジンです。したがって、唯一の本当に安全なテンプレートエンジンです。

*そしてもう1つの快適な理由*：LatteはHTMLを理解しているため、他の非常に快適な機能を提供します。例えば、[n:attributes |syntax#n:atributy]です。または、[リンクをチェックする |safety-first#Kontrola odkazů]機能です。その他多数。


エスケープとは何ですか？
------------

エスケープとは、ある文字列を別の文字列に挿入する際に、特殊な意味を持つ文字を対応するシーケンスに置き換えるプロセスであり、望ましくない現象やエラーを防ぐためのものです。例えば、HTMLテキストに文字列を挿入する場合、`<` 文字はタグの開始を示すため特別な意味を持ちます。これを対応するシーケンス、つまりHTMLエンティティ `&lt;` に置き換えます。これにより、ブラウザは `<` 記号を正しく表示します。

PHPでコードを直接記述する際のエスケープの簡単な例は、文字列に引用符を挿入する場合で、その前にバックスラッシュを記述します。

エスケープについては、[XSSから身を守る方法 |safety-first#Jak se bránit XSS] の章で詳しく説明します。


Latteでテンプレートからデータベースクエリを実行できますか？
--------------------------------

テンプレートでは、プログラマーが渡したオブジェクトを操作できます。したがって、プログラマーが望むなら、データベースオブジェクトをテンプレートに渡し、それに対してクエリを実行できます。そのような意図がある場合、それを妨げる理由はありません。

クライアントや外部のコーダーにテンプレートを編集する機能を提供したい場合は、状況が異なります。その場合、彼らがデータベースにアクセスできることを絶対に望まないでしょう。もちろん、データベースオブジェクトをテンプレートに渡すことはありませんが、別のオブジェクトを介してアクセスできる場合はどうでしょうか？解決策は[サンドボックスモード |sandbox]であり、テンプレートでどのメソッドを呼び出すことができるかを定義できます。これにより、セキュリティ侵害を心配する必要はありません。


Latte、Twig、Bladeなどのテンプレートエンジンの主な違いは何ですか？
----------------------------------------

Latte、Twig、Bladeテンプレートエンジンの違いは、主に構文、セキュリティ、およびフレームワークへの統合方法にあります

- Latte：PHP言語の構文を使用しているため、学習と使用が容易です。XSS攻撃に対する最高レベルの保護を提供します。
- Twig：PHPとはかなり異なるPython言語の構文を使用します。コンテキストを区別せずにエスケープします。Symfonyフレームワークによく統合されています。
- Blade：PHPと独自の構文の混合を使用します。コンテキストを区別せずにエスケープします。Laravelの機能とエコシステムに密接に統合されています。


企業にとってテンプレートエンジンを使用する価値はありますか？
------------------------------

まず、トレーニング、使用、および全体的な利点に関連するコストは、システムによって大幅に異なります。LatteテンプレートエンジンはPHP構文を使用しているため、この言語に既に精通しているプログラマーの学習を大幅に簡素化します。通常、プログラマーがLatteに十分に慣れるまでには数時間かかります。したがって、トレーニングコストが削減されます。同時に、テクノロジーの習得を加速し、とりわけ日常的な使用における効率を高めます。

さらに、Latteは独自のコンテキスト認識型エスケープ技術により、XSS脆弱性に対する高レベルの保護を提供します。この保護は、Webアプリケーションのセキュリティを確保し、ユーザーや企業データを危険にさらす可能性のある攻撃のリスクを最小限に抑えるために不可欠です。Webアプリケーションのセキュリティ保護は、企業の評判を維持するためにも重要です。セキュリティ問題は、顧客からの信頼を失い、市場での企業の評判を損なう可能性があります。

Latteを使用すると、開発と保守の両方が容易になるため、アプリケーションの全体的な開発および保守コストも削減されます。したがって、テンプレートエンジンを使用することは間違いなく価値があります。


LatteはWebアプリケーションのパフォーマンスに影響しますか？
---------------------------------

Latteテンプレートは高速に処理されますが、この側面は実際には重要ではありません。その理由は、ファイルの解析は最初の表示時に一度だけ行われるためです。その後、PHPコードにコンパイルされ、ディスクに保存され、再コンパイルを実行する必要なく、後続の各リクエストで実行されます。

これは本番環境での動作方法です。開発中、Latteテンプレートはコンテンツが変更されるたびに再コンパイルされ、開発者は常に最新バージョンを確認できます。
