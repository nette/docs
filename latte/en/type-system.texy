Type System
***********

<div class=perex data-version=2.7>

Type system is main thing for the development of robust applications. Latte brings type support to templates. To knowing what data or object type each variable is allows

- IDE to correctly autocomplete (see [Integration and plugins|integrations])
- static analysis to detect errors

Two points that significantly improve the quality and convenience of development.

</div>

How to start using types? Create a template class, eg `CatalogTemplate`, representing the passed parameters:

```php
class CatalogTemplate
{
	/** @var array */
	public $langs;

	/** @var ProductEntity[] */
	public $products;
}

$params = new CatalogTemplate;
$params->langs = $settings->getLanguages();
$params->products = $entityManager->getRepository('Product')->findAll();
$latte->render('template.latte', $params);
```

Then insert the [`{templateType}` |tags#Types] tag with the full class name (including the namespace) at the beginning of the template:

```html
{templateType MyApp\CatalogTemplate}
```

We have defined that there will be variables `$langs` and `$products` in the template including the corresponding types. Now the IDE can correctly autocomplete.

You can specify the types of local variables using tags [`{var}` |tags#Variable declaration], [`{varType}` |tags#Types], [`{define}` |tags#Blocks]:

```html
{var string $name = $article->getTitle()}
{varType Nette\Security\User $user}
```

How to save work? How to write a template class or `{varType}` tags as easily as possible? Get them generated.
That is precisely what pair of tags [`{templatePrint}` |tags#Types] and [`{varPrint}` |tags#Types] do.
If you place one of these tags in a template, the code of class or template is displayed instead of the normal rendering. Then simply select and copy the code into your project.
