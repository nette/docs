Editoren & Werkzeuge
********************

.[perex]
Sie können ein geschickter Programmierer sein, aber erst mit guten Werkzeugen werden Sie zum Meister. In diesem Kapitel finden Sie Tipps zu wichtigen Werkzeugen, Editoren und Plugins.


IDE-Editor
==========

Wir empfehlen dringend, für die Entwicklung eine vollwertige IDE wie PhpStorm, NetBeans, VS Code zu verwenden und nicht nur einen Texteditor mit PHP-Unterstützung. Der Unterschied ist wirklich grundlegend. Es gibt keinen Grund, sich mit einem reinen Editor zufrieden zu geben, der zwar Syntax hervorheben kann, aber nicht die Möglichkeiten einer Spitzen-IDE erreicht, die präzise Vorschläge macht, Fehler überwacht, Code refaktorieren kann und vieles mehr. Einige IDEs sind kostenpflichtig, andere sogar kostenlos.

**NetBeans IDE** hat bereits integrierte Unterstützung für Nette, Latte und NEON.

**PhpStorm**: Installieren Sie diese Plugins unter `Settings > Plugins > Marketplace`
- Nette framework helpers
- Latte
- NEON support
- Nette Tester

**VS Code**: Suchen Sie im Marketplace nach dem Plugin "Nette Latte + Neon".

Verbinden Sie auch Tracy mit dem Editor. Bei der Anzeige einer Fehlerseite können Sie dann auf Dateinamen klicken und diese werden im Editor mit dem Cursor an der entsprechenden Zeile geöffnet. Lesen Sie, [wie das System konfiguriert wird|tracy:open-files-in-ide].


PHPStan
=======

PHPStan ist ein Werkzeug, das logische Fehler im Code aufdeckt, bevor Sie ihn ausführen.

Wir installieren es mit Composer:

```shell
composer require --dev phpstan/phpstan-nette
```

Wir erstellen im Projekt eine Konfigurationsdatei `phpstan.neon`:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

Und lassen es anschließend die Klassen im Ordner `app/` analysieren:

```shell
vendor/bin/phpstan analyse app
```

Eine ausführliche Dokumentation finden Sie direkt auf den [PHPStan-Seiten |https://phpstan.org].


Code Checker
============

Der [Code Checker|code-checker:] überprüft und korrigiert gegebenenfalls einige formale Fehler in Ihren Quellcodes:

- entfernt [BOM |nette:glossary#BOM]
- überprüft die Gültigkeit von [Latte |latte:]-Templates
- überprüft die Gültigkeit von `.neon`-, `.php`- und `.json`-Dateien
- überprüft das Vorkommen von [Steuerzeichen |nette:glossary#Steuerzeichen]
- überprüft, ob die Datei in UTF-8 kodiert ist
- überprüft falsch geschriebene `/* @annotation */` (Stern fehlt)
- entfernt abschließende `?>` bei PHP-Dateien
- entfernt Leerzeichen am Zeilenende und unnötige Zeilen am Ende der Datei
- normalisiert Zeilentrenner auf Systemstandard (wenn Sie die Option `-l` angeben)


Composer
========

[Composer] ist ein Werkzeug zur Verwaltung von Abhängigkeiten in PHP. Es ermöglicht uns, beliebig komplexe Abhängigkeiten einzelner Bibliotheken zu deklarieren und diese dann für uns in unser Projekt zu installieren.


Requirements Checker
====================

Dies war ein Werkzeug, das die Laufzeitumgebung des Servers testete und informierte, ob (und inwieweit) das Framework verwendet werden kann. Derzeit kann Nette auf jedem Server verwendet werden, der die minimal erforderliche PHP-Version hat.
