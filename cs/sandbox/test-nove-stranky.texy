<?php

use Nette\Application\UI\Form;

class recordPresenter extends BasePresenter
{

	/** @persistent record id */
	public $id;


	/**
	* Check rights to edit record
	* @int record id
	* @return go on/go away + redirect
	*/
	private function checkId($id)
	{
		if(!$id) { // id not set
			$noRights = TRUE;
		}

		// check rights to access the record
		// 1. DB check: $this->model->record->isMine($id);
		// 2. ACL check
		// 3. your awesome method...
		elseif($id == 32) { // demo only
			$noRights = FALSE;
		}
		else { // you have no rights to this record
			$noRights = TRUE;
		}

		if(noRights) { // you have no rights to this record
			$this->flashMessage("You are very nasty boy!","warning");
			$this->redirect("default", array("id" => NULL)); // unset persistent id
		}
	}



	/**
	* Edit record
	*/
	public function renderEdit($id)
	{
		$this->id = $id;

		// is this our record?
		$this->checkId($this->id);

		// fetch the record data from database
		// e.g.: $this->models->record->fetch($id);
		$defaults = array("myValue" => "myDefaultValue");  // demo only

		$this["recordForm"]->setDefaults($defaults); // set defaults -> see http://wiki.nette.org/cs/cookbook/vychozi-data-pro-editacni-formular
	}


	/**
	* Form to edit record
	*/
	protected function createComponentRecordForm()
	{
		$form = new Form;
		$form->addText("myValue","Name:", 20, 60);
		$form->addSubmit("send","Send");
		$form->onSuccess[] = callback($this, "recordUpdate");
		return $form;
	}


	/**
	* Record update
	* @form recordForm
	*/
	public function recordUpdate(Form $form)
	{
		// is this our record?
		$this->checkId($this->id);

		$values = $form->getValues();
		$values = $this->someMagicHere($values);
		$this->models->record->update($this->id, $values);

		$this->flashMessage("Record updated!","success");
		$this->redirect("edit");
	}

}
