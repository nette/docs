Edytory i narzędzia
*******************

.[perex]
Możesz być zdolnym programistą, ale tylko dzięki dobrym narzędziom staniesz się mistrzem. W tym rozdziale znajdziesz wskazówki dotyczące ważnych narzędzi, edytorów i wtyczek.


Edytor IDE .[#toc-ide-editor]
=============================

Zdecydowanie zalecamy używanie do programowania w pełni funkcjonalnego IDE, takiego jak PhpStorm, NetBeans, VS Code, a nie tylko edytora tekstu obsługującego PHP. Różnica jest naprawdę znacząca. Nie ma powodu, aby zadowolić się tylko edytorem, który potrafi kolorować składnię,
ale brakuje mu możliwości wysokiej klasy IDE, które dokładnie przewiduje, obserwuje błędy, może refaktoryzować kod i wiele więcej. Niektóre IDE są płatne, inne są nawet darmowe.

**NetBeans IDE** ma już wbudowane wsparcie dla Nette, Latte i NEON.

**PhpStorm**: zainstaluj te wtyczki w `Settings > Plugins > Marketplace`
- Pomocnicy ramowi Nette
- Latte
- Wsparcie NEON
- Nette Tester

**Kod VS**: znajdź na rynku wtyczkę "Nette Latte + Neon".

Zamieść również link Tracy to the editor. Gdy pojawi się strona z błędami, można wtedy kliknąć na nazwy plików i otworzą się one w edytorze z kursorem w odpowiedniej linii. Dowiedz się, [jak skonfigurować system |tracy:open-files-in-ide].


PHPStan .[#toc-phpstan]
=======================

PHPStan to narzędzie, które wykrywa błędy logiczne w Twoim kodzie, zanim go uruchomisz.

Instalujemy go za pomocą programu Composer:

```bash
composer require --dev phpstan/phpstan-nette
```

Utwórz plik konfiguracyjny w projekcie `phpstan.neon`:

```neon
includes:
	- vendor/phpstan/phpstan-nette/extension.neon

parameters:
	scanDirectories:
		- app

	level: 5
```

A potem niech analizuje klasy w folderze `app/`:

```bash
vendor/bin/phpstan analyse app
```

Obszerną dokumentację można znaleźć bezpośrednio na [stronie PHPStan |https://phpstan.org].


Code Checker .[#toc-code-checker]
=================================

[Code Checker |code-checker:] sprawdzi i ewentualnie naprawi niektóre błędy formalne w Twoim kodzie źródłowym:

- usuwa [BOM |nette:glossary#bom]
- sprawdza ważność szablonów [Latte |latte:]
- sprawdza ważność stron `.neon`, `.php` oraz `.json`
- kontrole dla [znaków kontrolnych |nette:glossary#kontrolní znaky]
- sprawdza czy plik jest zakodowany w UTF-8
- sprawdza, czy nie ma błędnie napisanej strony `/* @anotace */` (brak gwiazdki)
- usuwa terminator `?>` z plików PHP
- usuwa prawe spacje i niepotrzebne linie na końcu pliku
- normalizuje separatory linii do systemowych separatorów linii (jeśli podano opcję `-l`)


Kompozytor .[#toc-composer]
===========================

[Composer |Composer] to narzędzie do zarządzania zależnościami w PHP. Pozwala nam zadeklarować dowolnie złożone zależności biblioteczne, a następnie instaluje je w naszym projekcie za nas.


Sprawdzanie wymagań .[#toc-requirements-checker]
================================================

Było to narzędzie, które testowało środowisko uruchomieniowe serwera i informowało, czy (i w jakim zakresie) można wykorzystać framework. Obecnie Nette można używać na każdym serwerze, który posiada minimalną wymaganą wersję PHP.

{{sitename: Best Practices}}
