Πέρασμα Μεταβλητών Μεταξύ Templates
***********************************

Αυτός ο οδηγός εξηγεί πώς περνούν οι μεταβλητές μεταξύ των templates στο Latte χρησιμοποιώντας διάφορα tags όπως `{include}`, `{import}`, `{embed}`, `{layout}`, `{sandbox}` και άλλα. Θα μάθετε επίσης πώς να εργάζεστε με μεταβλητές στα tags `{block}` και `{define}`, και ποιος είναι ο σκοπός του tag `{parameters}`.


Τύποι Μεταβλητών
----------------
Οι μεταβλητές στο Latte μπορούν να χωριστούν σε τρεις κατηγορίες ανάλογα με το πώς και πού ορίζονται:

**Μεταβλητές Εισόδου** είναι αυτές που περνούν στο template από έξω, για παράδειγμα, από ένα σενάριο PHP ή χρησιμοποιώντας ένα tag όπως το `{include}`.

```php
$latte->render('template.latte', ['userName' => 'Jan', 'userAge' => 30]);
```

**Μεταβλητές Περιβάλλοντος** είναι μεταβλητές που υπάρχουν στη θέση ενός συγκεκριμένου tag. Περιλαμβάνουν όλες τις μεταβλητές εισόδου και άλλες μεταβλητές που δημιουργούνται χρησιμοποιώντας tags όπως `{var}`, `{default}` ή μέσα σε έναν βρόχο `{foreach}`.

```latte
{foreach $users as $user}
	{include 'userBox.latte', user: $user}
{/foreach}
```

**Ρητές Μεταβλητές** είναι αυτές που καθορίζονται άμεσα μέσα σε ένα tag και αποστέλλονται στο template προορισμού.

```latte
{include 'userBox.latte', name: $user->name, age: $user->age}
```


`{block}`
---------
Το tag `{block}` χρησιμοποιείται για τον ορισμό επαναχρησιμοποιήσιμων μπλοκ κώδικα που μπορούν να προσαρμοστούν ή να επεκταθούν σε κληρονομούμενα templates. Οι μεταβλητές περιβάλλοντος που ορίζονται πριν από το μπλοκ είναι διαθέσιμες μέσα στο μπλοκ, αλλά οποιεσδήποτε αλλαγές στις μεταβλητές αντικατοπτρίζονται μόνο μέσα σε αυτό το μπλοκ.

```latte
{var $foo = 'original'}
{block example}
	{var $foo = 'changed'}
{/block}

{$foo}    // prints: original
```


`{define}`
----------
Το tag `{define}` χρησιμοποιείται για τη δημιουργία μπλοκ που αποδίδονται μόνο όταν καλούνται χρησιμοποιώντας το `{include}`. Οι μεταβλητές που είναι διαθέσιμες μέσα σε αυτά τα μπλοκ εξαρτώνται από το αν καθορίζονται παράμετροι στον ορισμό. Αν ναι, έχουν πρόσβαση μόνο σε αυτές τις παραμέτρους. Αν όχι, έχουν πρόσβαση σε όλες τις μεταβλητές εισόδου του template στο οποίο ορίζονται τα μπλοκ.

```latte
{define hello}
	{* has access to all input variables of the template *}
{/define}

{define hello $name}
	{* has access only to the $name parameter *}
{/define}
```


`{parameters}`
--------------
Το tag `{parameters}` χρησιμοποιείται για τη ρητή δήλωση των αναμενόμενων μεταβλητών εισόδου στην αρχή του template. Με αυτόν τον τρόπο, μπορείτε εύκολα να τεκμηριώσετε τις αναμενόμενες μεταβλητές και τους τύπους δεδομένων τους. Είναι επίσης δυνατό να ορίσετε προεπιλεγμένες τιμές.

```latte
{parameters int $age, string $name = 'unknown'}
<p>Age: {$age}, Name: {$name}</p>
```


`{include file}`
----------------
Το tag `{include file}` χρησιμοποιείται για την εισαγωγή ενός ολόκληρου template. Τόσο οι μεταβλητές εισόδου του template στο οποίο χρησιμοποιείται το tag, όσο και οι μεταβλητές που ορίζονται ρητά σε αυτό, περνούν σε αυτό το template. Ωστόσο, το template προορισμού μπορεί να περιορίσει την εμβέλεια χρησιμοποιώντας το `{parameters}`.

```latte
{include 'profile.latte', userId: $user->id}
```


`{include block}`
-----------------
Όταν εισάγετε ένα μπλοκ που ορίζεται στο ίδιο template, όλες οι μεταβλητές περιβάλλοντος και οι ρητά ορισμένες μεταβλητές περνούν σε αυτό:

```latte
{define blockName}
	<p>Name: {$name}, Age: {$age}</p>
{/define}

{var $name = 'Jan', $age = 30}
{include blockName}
```

Σε αυτό το παράδειγμα, οι μεταβλητές `$name` και `$age` περνούν στο μπλοκ `blockName`. Το `{include parent}` συμπεριφέρεται με τον ίδιο τρόπο.

Κατά την εισαγωγή ενός μπλοκ από άλλο template, περνούν μόνο οι μεταβλητές εισόδου και οι ρητά ορισμένες. Οι μεταβλητές περιβάλλοντος δεν είναι αυτόματα διαθέσιμες.

```latte
{include blockInOtherTemplate, name: $name, age: $age}
```


`{layout}` ή `{extends}`
------------------------
Αυτά τα tags ορίζουν ένα layout στο οποίο περνούν οι μεταβλητές εισόδου του παιδικού template και επιπλέον οι μεταβλητές που δημιουργούνται στον κώδικα πριν από τα μπλοκ:

```latte
{layout 'layout.latte'}
{var $seo = 'index, follow'}
```

Το template `layout.latte`:

```latte
<head>
	<meta name="robots" content="{$seo}">
</head>
```


`{embed}`
---------
Το tag `{embed}` είναι παρόμοιο με το tag `{include}`, αλλά επιτρέπει την εισαγωγή μπλοκ στο template. Σε αντίθεση με το `{include}`, περνούν μόνο οι ρητά δηλωμένες μεταβλητές:

```latte
{embed 'menu.latte', items: $menuItems}
{/embed}
```

Σε αυτό το παράδειγμα, το template `menu.latte` έχει πρόσβαση μόνο στη μεταβλητή `$items`.

Αντίθετα, στα μπλοκ μέσα στο `{embed}`, υπάρχει πρόσβαση σε όλες τις μεταβλητές περιβάλλοντος:

```latte
{var $name = 'Jan'}
{embed 'menu.latte', items: $menuItems}
	{block foo}
		{$nam}
	{/block}
{/embed}
```


`{import}`
----------
Το tag `{import}` χρησιμοποιείται για τη φόρτωση μπλοκ από άλλα templates. Τόσο οι μεταβλητές εισόδου όσο και οι ρητά δηλωμένες μεταβλητές μεταφέρονται στα εισαγόμενα μπλοκ.

```latte
{import 'buttons.latte'}
```


`{sandbox}`
-----------
Το tag `{sandbox}` απομονώνει το template για ασφαλή επεξεργασία. Οι μεταβλητές περνούν αποκλειστικά ρητά.

```latte
{sandbox 'secure.latte', data: $secureData}
```


{{leftbar: /@left-menu}}
