¿Por qué utilizar plantillas?
*****************************


¿Por qué utilizar un sistema de plantillas en PHP? .[#toc-why-should-i-use-a-templating-system-in-php]
------------------------------------------------------------------------------------------------------

En primer lugar, recordemos brevemente la historia de PHP, llena de giros interesantes. Uno de los primeros lenguajes de programación utilizados para la creación de plantillas HTML fue C. Sin embargo, su uso para este fin resultó inadecuado. Rasmus Lerdorf creó PHP para facilitar la generación dinámica de HTML con C en el backend. PHP se diseñó inicialmente como lenguaje de plantillas, pero con el tiempo fue adquiriendo más funciones y se convirtió en un lenguaje de programación en toda regla.

No obstante, sigue funcionando como lenguaje de plantillas. Los archivos PHP se pueden utilizar como páginas HTML, en las que se puede dar salida a una variable utilizando `<?= $foo ?>`.

Al principio de la historia de PHP, se introdujo el sistema de plantillas Smarty para separar estrictamente la apariencia (HTML/CSS) de la lógica de la aplicación. Sus capacidades eran deliberadamente limitadas en comparación con PHP, por lo que un desarrollador no podía, por ejemplo, consultar una base de datos desde una plantilla. Sin embargo, estos sistemas introducían una dependencia adicional, aumentaban la complejidad del proyecto y requerían aprender un nuevo lenguaje Smarty. Sus beneficios fueron controvertidos, y se siguió utilizando PHP plano para las plantillas.

Con el tiempo, los sistemas de plantillas se han vuelto más útiles. Cada vez más programadores y empresas se han dado cuenta de la importancia de la seguridad. Han reconocido la existencia de [vulnerabilidades como el XSS |safety-first]. La forma correcta de mostrar una variable no es `<?= $foo ?>` sino `<?= htmlspecialchars($foo) ?>`y olvidarse de escapar, es decir, utilizar la función `htmlspecialchars()`, puede provocar una grave brecha de seguridad. Los sistemas de plantillas introdujeron el autoescapado, por lo que bastaba con escribir `{$foo}`, y la variable se mostraría con escapado incluido.

Los sistemas de plantillas trajeron soporte para herencia, sandboxing, y otras características útiles, haciendo la escritura de plantillas mucho más simple que con PHP. En algún momento, los beneficios de los sistemas de plantillas superaron significativamente las preocupaciones sobre la introducción de nuevas dependencias.


¿Por qué debería usar el sistema de plantillas Latte? .[#toc-why-should-i-use-the-latte-templating-system]
----------------------------------------------------------------------------------------------------------

Las principales razones son la seguridad y la sintaxis.

Todos los sistemas de plantillas, como Twig, Blade o Smarty, han introducido protección XSS en forma de escape automático a lo largo de su existencia. Sin embargo, Latte fue más allá, dándose cuenta de que para que el escape automático fuera realmente funcional, el sistema necesitaba entender HTML. Tenía que reconocer no sólo una cadena de caracteres, sino también etiquetas, atributos, etc. Esto se debe a que se necesitan diferentes métodos de escape dentro del texto HTML, dentro de las etiquetas HTML y dentro de JavaScript, etc. Latte aprendió a entender HTML y a escapar [adecuadamente |safety-first#Context-Aware Escaping] en cada uno de estos contextos. Así se convirtió en el primer y hasta ahora único sistema de plantillas PHP con escape sensible al contexto.

Latte representa un sistema de plantillas genuinamente seguro, mientras que otros sistemas tienden a crear una falsa sensación de seguridad.

Otra ventaja significativa de Latte es el uso de la sintaxis PHP, por lo que el programador/codificador no necesita aprender un nuevo lenguaje, sino que puede utilizar lo que ya conoce bien.


¿Cuáles son las principales diferencias entre sistemas de plantillas como Latte, Twig y Blade? .[#toc-what-are-the-main-differences-between-templating-systems-like-latte-twig-and-blade]
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Las diferencias entre sistemas de plantillas como Latte, Twig y Blade radican principalmente en su sintaxis, seguridad e integración con frameworks:

- Latte: utiliza la sintaxis del lenguaje PHP, lo que facilita su aprendizaje y uso. Ofrece una protección de primer nivel contra ataques XSS.
- Twig: utiliza una sintaxis similar a la de Python, que es bastante diferente de la de PHP. Escapa sin distinción de contexto. Está bien integrado con el framework Symfony.
- Blade: utiliza una mezcla de PHP y sintaxis personalizada. Escapa sin distinción de contexto. Está estrechamente integrado con las características y el ecosistema de Laravel.


¿Merece la pena para las empresas utilizar un sistema de plantillas? .[#toc-is-it-worth-it-for-companies-to-use-a-templating-system]
------------------------------------------------------------------------------------------------------------------------------------

En primer lugar, los costes asociados a la formación, el uso y los beneficios generales varían significativamente en función del sistema. El sistema de plantillas Latte, gracias a su uso de la sintaxis PHP, simplifica enormemente el aprendizaje para los programadores ya familiarizados con este lenguaje. Por lo general, un programador tarda unas horas en familiarizarse suficientemente con Latte, lo que reduce los costes de formación y acelera la adopción de la tecnología y, lo que es más importante, la eficacia en el uso diario.

Además, Latte proporciona un alto nivel de protección contra la vulnerabilidad XSS gracias a su exclusiva tecnología de escape sensible al contexto. Esta protección es crucial para garantizar la seguridad de las aplicaciones web y minimizar el riesgo de ataques que puedan poner en peligro a los usuarios o los datos de la empresa. La seguridad de las aplicaciones web también es importante para mantener la buena reputación de una empresa. Los problemas de seguridad pueden provocar la pérdida de confianza de los clientes y dañar la reputación de la empresa en el mercado.

El uso de Latte también reduce los costes generales de desarrollo y mantenimiento, ya que facilita ambos. Por lo tanto, utilizar un sistema de plantillas merece definitivamente la pena.


¿Cómo afecta Latte al rendimiento de la aplicación web y a los recursos del servidor? .[#toc-how-does-latte-affect-web-application-performance-and-server-resources]
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

Aunque las plantillas Latte se procesan rápidamente, este aspecto no importa realmente. La razón es que el análisis sintáctico de los archivos sólo se produce una vez durante la primera visualización. Después se compilan en código PHP, se almacenan en disco y se ejecutan en cada petición posterior sin necesidad de recompilación.

Así es como funciona en un entorno de producción. Durante el desarrollo, las plantillas Latte se recompilan cada vez que cambia su contenido, por lo que el desarrollador siempre ve la versión actual.
